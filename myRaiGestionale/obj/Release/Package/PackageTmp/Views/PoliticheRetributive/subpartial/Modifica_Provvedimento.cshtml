@using myRaiHelper
@using myRaiGestionale.Controllers
@using myRaiCommonModel
@using myRaiCommonModel.Gestionale
@model myRaiCommonModel.Gestionale.Pratica

@{
    var elencoProv = PoliticheRetributiveController.GetProvS(false);
    var varRich = Model.Dipendente.XR_PRV_DIPENDENTI_VARIAZIONI.FirstOrDefault(x => x.ID_PROV == Model.Dipendente.ID_PROV_RICH);
    var varEff = Model.Dipendente.XR_PRV_DIPENDENTI_VARIAZIONI.FirstOrDefault(x => x.ID_PROV == Model.Dipendente.ID_PROV_EFFETTIVO);

    var giaConvalidato = Model.Dipendente.XR_PRV_OPERSTATI.Any(x => x.ID_STATO == (int)ProvvStatoEnum.Convalidato && x.DATA_FINE_VALIDITA == null);
    int idOperConvalida = 0;
    if (giaConvalidato)
    {
        idOperConvalida = Model.Dipendente.XR_PRV_OPERSTATI.FirstOrDefault(x => x.ID_STATO == (int)ProvvStatoEnum.Convalidato && x.DATA_FINE_VALIDITA == null).ID_OPER;
    }

    var giaConsegnato = Model.Dipendente.XR_PRV_OPERSTATI.Any(x => x.ID_STATO == (int)ProvvStatoEnum.Consegnato && x.DATA_FINE_VALIDITA == null);

    bool isCustom = Model.Dipendente.CUSTOM_PROV.GetValueOrDefault();

    //bool canShowData = Model.CanShowData;
    bool canShowData = true;

}

@if (!Model.IsPreview)
{
    <div class="row push-10">
        <div class="col-sm-12">
            <div class="rai-checkbox">
                <input id="chkGestExt" type="checkbox" @(Model.Dipendente.IND_PRATICA_EXT.GetValueOrDefault() ? "checked" : "") />
                <label class="rai-caption" for="chkGestExt">Gestione esterna al sistema</label>
            </div>
        </div>
    </div>

    <div class="row push-10">
        <div class="col-sm-8">
            <label class="rai-caption text-uppercase">Piano</label>
            @if (!Model.EnableGest || giaConvalidato)
            {
                <input id="piano-dip" type="hidden" value="@Model.Dipendente.ID_CAMPAGNA" />
                <div class="input-group">
                    <input type="text" readonly class="form-control" value="@Model.Dipendente.XR_PRV_CAMPAGNA.NOME" />
                    <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                </div>
            }
            else
            {
                @Html.DropDownList("Piano", new SelectList(PoliticheRetributiveController.getCampagnaList(), "Value", "Text", Model.Dipendente.ID_CAMPAGNA),
                                  new { @class = "form-control form-control-value", id = "piano-dip", style = "width: 100%", placeholder = "Piano", data_orig_piano = Model.Dipendente.ID_CAMPAGNA })
            }
        </div>
        @if (Model.EnableGest)
        {
            <div class="col-sm-4 @(giaConvalidato ? "disable" : "")">
                <label class="rai-caption text-uppercase">Decorrenza</label>
                @{
                    bool showSelect = Model.Dipendente.ID_CAMPAGNA != null && Model.Dipendente.ID_CAMPAGNA > 2;
                }

                @Html.DropDownList("Decorrenza", new SelectList(PoliticheRetributiveController.getCampagnaDecorrenza(Model.Dipendente.ID_CAMPAGNA.Value, Model.Dipendente.DECORRENZA), "Value", "Text", Model.Dipendente.DECORRENZA.HasValue ? Model.Dipendente.DECORRENZA.Value.ToString("dd/MM/yyyy") : ""),
                   new { @class = "form-control form-control-value", id = "data-decorrenza-select", style = "width: 100%" + (showSelect ? "" : "display:none;"), placeholder = "Decorrenza" })
                @{
                    var dtDec = "";
                    if (Model.Dipendente.DECORRENZA.HasValue)
                    {
                        dtDec = Model.Dipendente.DECORRENZA.Value.ToString("MM/yyyy");
                    }
                    <input value="@dtDec" class="js-datetimepicker formElements form-control" style="@(showSelect ? "display:none;" : "")" data-format="MM/YYYY" data-locale="it" id="data-decorrenza-input" placeholder="Selezionare una data" autocomplete="off" />
                }
            </div>
        }
        else
        {
            var dtDec = "";
            if (Model.Dipendente.DECORRENZA.HasValue)
            {
                dtDec = Model.Dipendente.DECORRENZA.Value.ToString("dd/MM/yyyy");
            }
            <div class="col-sm-4">
                <label class="rai-caption text-uppercase">Decorrenza</label>
                <label>@(dtDec)</label>
            </div>
        }
    </div>

    if (Model.Dipendente.ID_PROV_EFFETTIVO == (int)ProvvedimentiEnum.AumentoLivello
    || Model.Dipendente.ID_PROV_EFFETTIVO == (int)ProvvedimentiEnum.AumentoLivelloNoAssorbimento
    || Model.Dipendente.ID_PROV_EFFETTIVO == (int)ProvvedimentiEnum.CUSAumentoLivello
    || Model.Dipendente.ID_PROV_EFFETTIVO == (int)ProvvedimentiEnum.CUSAumentoLivelloNoAssorbimento)
    {
        var catPrevista = varEff.CAT_PREVISTA;
        if (!String.IsNullOrWhiteSpace(Model.Dipendente.CAT_RICHIESTA))
        {
            catPrevista = Model.Dipendente.CAT_RICHIESTA;
        }

        <div class="row push-10">
            <div class="col-sm-6">
                <label class="rai-caption text-uppercase">Livello attuale</label>
                <div class="input-group">
                    <input type="text" class="form-control" readonly value="@varEff.LIV_ATTUALE" />
                    <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                </div>
            </div>
            <div class="col-sm-6">
                <label class="rai-caption text-uppercase">Livello previsto</label>
                <div class="input-group">
                    <input type="text" class="form-control" readonly value="@varEff.LIV_PREVISTO" />
                    <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                </div>
            </div>
        </div>


        <div class="row push-10">
            <div class="col-sm-6">
                <label class="rai-caption text-uppercase">Categoria prevista</label>
                @if (giaConvalidato || !Model.Dipendente.CUSTOM_PROV.GetValueOrDefault())
                {
                    <div class="input-group">
                        <input id="inputCatArrivo" class="form-control" type="text" value="@(catPrevista)" readonly />
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                    </div>
                }
                else
                {
                    <input id="inputCatArrivo" class="form-control" type="text" value="@(catPrevista)" />
                }
            </div>
            <div class="col-sm-6">
                <label class="rai-caption text-uppercase">Mansione</label>
                <input type="text" class="form-control" id="COD_MANSIONE" value="@Model.Dipendente.COD_MANSIONE" />
            </div>
        </div>
    }

    <div class="row push-10" style="@(PoliticheRetributiveController.AbilitaGestioneLettera() || giaConvalidato?"":"display:none;")">
        <div class="col-sm-4">
            <label class="rai-caption text-uppercase">
                Bozza lettera
            </label>
        </div>
        <div class="col-sm-8">
            <select class="form-control form-control-value-int " id="ID_TEMPLATE">
                <option value="0" @(Model.Dipendente.ID_TEMPLATE.GetValueOrDefault() == 0 ? "selected" : "")>-</option>
                @foreach (var group in PoliticheRetributiveController.getBozzeList())
                {
                    <optgroup label="@group.Name">
                        @foreach (var item in group.ListItems)
                        {
                            <option value="@item.Value" @(item.Value == Model.Dipendente.ID_TEMPLATE.GetValueOrDefault().ToString() ? "selected" : "")>@item.Text</option>
                        }
                    </optgroup>
                }
            </select>
        </div>
    </div>

    if (giaConvalidato)
    {
        <div class="row push-10">
            <div class="col-sm-4">
                <label class="rai-caption text-uppercase">
                    Stato lettera
                </label>
            </div>
            <div class="col-sm-8">
                @Html.DropDownList("StatoLettera",new SelectList(myRaiCommonManager.PoliticheRetributiveManager.GetStatoLetteraList(),"Value","Text",Model.Dipendente.STATO_LETTERA),
                    new { @class = "form-control form-control-value", id = "stato-lettera", style = "width: 100%"})
            </div>
        </div>
    }
}
else
{
    var prom = Model.Dipendente.XR_PRV_DIPENDENTI_VARIAZIONI.FirstOrDefault(x => x.ID_PROV == (int)ProvvedimentiEnum.AumentoLivello);
    var catPrevista = prom.CAT_PREVISTA;
    if (!String.IsNullOrWhiteSpace(Model.Dipendente.CAT_RICHIESTA))
    {
        catPrevista = Model.Dipendente.CAT_RICHIESTA;
    }

    <div class="row push-10">
        <div class="col-sm-6">
            <label class="rai-caption text-uppercase">Livello attuale</label>
            <div class="input-group">
                <input type="text" class="form-control" readonly value="@prom.LIV_ATTUALE" />
                <span class="input-group-addon"><i class="fa fa-lock"></i></span>
            </div>
        </div>
        <div class="col-sm-6">
            <label class="rai-caption text-uppercase">Livello previsto</label>
            <div class="input-group">
                <input type="text" class="form-control" readonly value="@prom.LIV_PREVISTO" />
                <span class="input-group-addon"><i class="fa fa-lock"></i></span>
            </div>
        </div>
    </div>


    <div class="row push-10">
        <div class="col-sm-6">
            <label class="rai-caption text-uppercase">Categoria prevista</label>
            <div class="input-group">
                <input id="inputCatArrivo" class="form-control" type="text" value="@(catPrevista)" readonly />
                <span class="input-group-addon"><i class="fa fa-lock"></i></span>
            </div>
        </div>
    </div>
}

<div class="row push-20-t">
    <div class="col-sm-12">
        <table class="table table-hover rai-table rai-table-vcenter" role="grid" style="width:100%">
            <thead>
                <tr>
                    <th>Tipo</th>
                    <th class="text-right" style="min-width:90px">Diff. RAL / Importo</th>
                    <th class="text-right" style="min-width:90px">Costo annuo</th>
                    <th class="text-right" style="min-width:90px">Costo periodo</th>
                </tr>
            </thead>
            <tbody class="rai-font-md">
                @foreach (var provv in elencoProv.Where(x => (!isCustom && (x.CUSTOM == null || !x.CUSTOM.Value)) || (isCustom && x.CUSTOM != null && x.CUSTOM.Value)).OrderBy(x => x.ORDINE))
                {
                    var var = Model.Dipendente.XR_PRV_DIPENDENTI_VARIAZIONI.FirstOrDefault(x => x.ID_PROV == provv.ID_PROV);
                    <tr role="row" data-row-prov="@provv.ID_PROV" @(provv.CUSTOM.GetValueOrDefault() ? "data-row-prov-custom" : "")>
                        <td class="">
                            @if (!Model.IsPreview && Model.EnableGest)
                            {

                                <div class="rai-radio">
                                    <input class="@(giaConvalidato?"disable":"")" data-id-prov="@provv.ID_PROV" type="radio" name="test" @(provv.ID_PROV == Model.Dipendente.ID_PROV_EFFETTIVO ? "checked" : "") />
                                    <label>
                                        @provv.DESCRIZIONE
                                    </label>
                                    @if (var != null && (!String.IsNullOrWhiteSpace(var.INDENNITA_ACQUISITE) || !String.IsNullOrWhiteSpace(var.INDENNITA_PERSE) || !String.IsNullOrWhiteSpace(var.INDENNITA_DELTA)))
                                    {

                                        <a href="#" title="Clicca per ulteriori informazioni su indennità" onclick='ShowIndennita("@var.INDENNITA_ACQUISITE","@var.INDENNITA_PERSE","@var.INDENNITA_DELTA")'><i class="icon icon-info"></i></a>
                                    }
                                </div>
                            }
                            else
                            {
                                <span>&nbsp;</span>
                                <label>@provv.DESCRIZIONE</label>
                            }
                        </td>
                        @if (!provv.CUSTOM.GetValueOrDefault())
                        {
                            if (var != null)
                            {
                                if (canShowData || var.ID_PROV == 3 || var.ID_PROV == 2)
                                {
                                    <td class="text-right">@String.Format("{0:N2} €", var.DIFF_RAL)</td>
                                    <td class="text-right">@String.Format("{0:N2} €", var.COSTO_ANNUO)</td>
                                    <td class="text-right">@String.Format("{0:N2} €", var.COSTO_PERIODO)</td>
                                }
                                else
                                {
                                    <td class="text-right">***</td>
                                    <td class="text-right">***</td>
                                    <td class="text-right">***</td>
                                }
                            }
                            else
                            {
                                <td class="text-right">-</td>
                                <td class="text-right">-</td>
                                <td class="text-right">-</td>

                            }
                        }
                        else
                        {
                            if (var != null)
                            {
                                string functionUpdate = "";
                                if (provv.BASE_PROV.Value == (int)ProvvedimentoEnum.Gratifica)
                                {
                                    functionUpdate = "GestAggiornaCostoGratifica(" + provv.ID_PROV + ",'" + PoliticheRetributiveController.GetAliq(provv.ID_PROV, Model.Dipendente.SINTESI1.COD_QUALIFICA).ToString("N2") + "')";
                                }
                                else //if (provv.BASE_PROV.Value == (int)ProvvedimentoEnum.AumentoMerito)
                                {
                                    functionUpdate = "GestAggiornaCostoAumento(" + provv.ID_PROV + ",'" + PoliticheRetributiveController.GetAliq(provv.ID_PROV, Model.Dipendente.SINTESI1.COD_QUALIFICA).ToString("N2") + "')"; ;
                                }

                                <td class="text-right" style="vertical-align:middle;">
                                    <input id="diffRal-@provv.ID_PROV" class="formElements form-control @(!provv.EDITABLE.GetValueOrDefault()?"disable":"")" type="text" value="@(var!=null?var.DIFF_RAL.ToString():"")" onblur="@functionUpdate" />
                                </td>
                                <td class="text-right"><input id="costoAnnuo-@provv.ID_PROV" class="formElements form-control disable" type="text" value="@(var!=null?var.COSTO_ANNUO.ToString():"")" /></td>
                                <td class="text-right"><input id="costoPeriodo-@provv.ID_PROV" class="formElements form-control disable" type="text" value="@(var!=null?var.COSTO_PERIODO.ToString():"")" /></td>
                            }
                            else
                            {
                                <td class="text-right">-</td>
                                <td class="text-right">-</td>
                                <td class="text-right">-</td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (!Model.IsPreview && Model.EnableGest)
{
    <div class="row push-10-t">
        <div class="col-sm-12 text-center">
            <div class="rai-btn-fill">
                @if (!giaConvalidato)
                {
                    if (!isCustom)
                    {
                        <button class="btn btn-md btn-warning" onclick="GestEditProvv(@Model.Dipendente.ID_DIPENDENTE, '@((!isCustom).ToString())')">Modifica manuale</button>
                    }
                    else
                    {
                        <button class="btn btn-md btn-warning" onclick="GestEditProvv(@Model.Dipendente.ID_DIPENDENTE, '@((!isCustom).ToString())')">Ripristina default</button>
                    }
                }
                <button class="btn btn-md btn-success" onclick="GestUpdatePratica(@Model.Dipendente.ID_DIPENDENTE)">Salva</button>
            </div>
        </div>
    </div>


    if (Model.Dipendente.ID_TEMPLATE.GetValueOrDefault() > 0 && !giaConsegnato)
    {
        <div class="row push-5-t">
            <div class="col-sm-12">
                <div class="rai-btn-fill">
                    <a class="btn rai-btn-secondary" href="#" onclick="GestModificaLettera(@Model.Dipendente.ID_DIPENDENTE)" title="Modifica lettera">Modifica lettera</a>
                    <a class="btn rai-btn-secondary" href="@Url.Action("ScaricaLettera","PoliticheRetributive", new { idPratica = Model.Dipendente.ID_DIPENDENTE})" title="Scarica lettera">Scarica lettera</a>
                </div>
            </div>
        </div>
    }
}

<script language="javascript">
    InitDatePicker();

    /*
     * Quando si seleziona una data superiore all'anno corrente
     * il costo periodo deve diventare 0,00€
     */
    $('#data-decorrenza-select, #data-decorrenza-input').on('change', function () {

        let valoreCorrente = $(this).val();
        let idDipendente = @Model.Dipendente.ID_DIPENDENTE;
        var idProv = $('[data-id-prov]:checked').attr('data-id-prov');
        var piano = $('#piano-dip').val();
        var catRich = $('#inputCatArrivo').val();
        var isGestExt = $('#chkGestExt')[0].checked;
        var idTemplate = $('#ID_TEMPLATE').val();
        var codMansione = $('#COD_MANSIONE').val();
        var statoLettera= $('#stato-lettera').val();

        var list = [];

        $('tr[data-row-prov][data-row-prov-custom]').each(function () {
            var rowProv = $(this).attr('data-row-prov');

            list.push({
                ID_PROV: rowProv,
                DIFF_RAL: $(this).find('#diffRal-' + rowProv).val(),
                COSTO_ANNUO: $(this).find('#costoAnnuo-' + rowProv).val(),
                COSTO_PERIODO: $(this).find('#costoPeriodo-'+rowProv).val()
                //COSTO_PERIODO: $(this).find('#costoPeriodo-' + rowProv).data('costoperiodo')
            });
        });

        $.ajax({
            type: "POST",
            cache: false,
            async: false,
            contentType: "application/json; charset=utf-8",
            url: '@(Url.Action("AggiornaConteggioUtente", "PoliticheRetributive"))',
            data: JSON.stringify({
                idDip: idDipendente,
                dataDecorrenza: valoreCorrente,
                piano: piano,
                idProv: idProv,
                customProv: list,
                catRich: catRich,
                isGestExt: isGestExt,
                idTemplate: idTemplate,
                codMansione: codMansione,
                statoLettera: statoLettera
            }),
            success: function (response) {
                $('#ModificaProvvedimentoContainer').html(response);
                $('tr[data-row-prov][data-row-prov-custom]').each(function () {
                    var rowProv = $(this).attr('data-row-prov');
                    $(this).find('#diffRal-' + rowProv).blur();
                });
            },
            error: function (err) {
                alert(err);
            }
        });
    });

    $('#piano-dip').on('change', function(){
        PRetribUpdateDec()
    });

    Array.prototype.customJoin = function(seperator,start,end){
        if(!start) start = 0;
        if(!end) end = this.length - 1;
        end++;
        return this.slice(start,end).join(seperator);
    };

    function ShowIndennita(indAcq, indPerse, indDelta)
    {
        var swalContent = "<br/>";

        if (indAcq!=null && indAcq!=''){
            swalContent+="<h4 class='text-primary text-left'>Indennità acquisite</h4><table class='table table-hover table-bordered table-responsive' role='grid' style='font-size:14px; text-align:left;'>";
            var ary = indAcq.split(',');
            ary.forEach(function(element){
                var aryEuro = element.trim().split('€');
                var aryCodDes = aryEuro[0].split(' ');
                swalContent+="<tr><td style='width:10%;font-weight:500;'>"+aryCodDes[0]+"</td><td style='width:75%;font-weight:500;'>"+aryCodDes.customJoin(' ',1)+"</td><td class='text-success text-right' style='font-weight:500;'>"+aryEuro[1]+" €</td></tr>";
            });
            swalContent+="</table>";
        }
        if (indPerse!=null && indPerse!=''){
            swalContent+="<h4 class='text-primary text-left'>Indennità perse</h4><table class='table table-hover table-bordered table-responsive' role='grid' style='font-size:14px; text-align:left;'>";
            var ary = indPerse.split(',');
            ary.forEach(function(element){
                var aryEuro = element.trim().split('€');
                var aryCodDes = aryEuro[0].split(' ');
                swalContent+="<tr><td style='width:10%;font-weight:500;'>"+aryCodDes[0]+"</td><td style='width:75%;font-weight:500;'>"+aryCodDes.customJoin(' ',1)+"</td><td class='text-danger text-right' style='font-weight:500;'>"+aryEuro[1]+" €</td></tr>";
            });
            swalContent+="</table>";
        }
        if (indDelta!=null && indDelta!=''){
            swalContent+="<h4 class='text-primary text-left'>Indennità modificate</h4><table class='table table-hover table-bordered table-responsive' role='grid' style='font-size:14px; text-align:left;'>";
            var ary = indDelta.split(',');
            ary.forEach(function(element){
                var aryEuro = element.trim().split('€');
                var aryCodDes = aryEuro[0].split(' ');
                swalContent+="<tr><td style='width:10%;font-weight:500;'>"+aryCodDes[0]+"</td><td style='width:75%;font-weight:500;'>"+aryCodDes.customJoin(' ',1)+"</td><td class='text-right' style='font-weight:500;'>"+aryEuro[1]+" €</td></tr>";
            });
            swalContent+="</table>";
        }

        swal({
            title: 'Dettaglio indennità',
            text: "",
            html: swalContent,
            width: 500,
            //input: 'text',
            //type: 'warning',
            //showCancelButton: true,
            //confirmButtonColor: '#3085d6',
            //cancelButtonColor: '#d33',
            confirmButtonText: 'Ok',
            //cancelButtonText: 'No, cancel!',
            confirmButtonClass: 'btn btn-primary btn-lg',
            //cancelButtonClass: 'btn btn-danger',
            buttonsStyling: false
        });
    }

</script>
