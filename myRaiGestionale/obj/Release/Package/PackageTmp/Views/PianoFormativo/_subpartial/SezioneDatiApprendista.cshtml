@using myRaiCommonModel
@model List<StudioModel>
@{
    var idpersona = ViewBag.idPersona;
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();

}
<!--Sezione Titoli di Studio-->
<br />
<div class="block block-transparent block-content-table">
    <div class="block-header block-content-mini">
        <div class="col-sm-10">
            <label class="block-title">TITOLI DI STUDIO</label>
        </div>
        <div class="col-sm-2">
            <div class="rai-btn-fill">
                <button class="btn btn-sm rai-btn-small" onclick="renderModalInserimentoDatiApprendistaTitoliDiStudio('@idpersona')">Nuovo</button>
            </div>
        </div>

    </div>
    <div class="block-content block-content-mini">

        <div class="row">
            <div class="col-sm-12">

                <table class="table rai-table">
                    <thead>
                        <tr>
                            <th style="width: 25%;">Data</th>
                            <th style="width: 30%;">Titolo di studio</th>
                            <th style="width: 25%;"> &nbsp;</th>
                            <th style="width: 5%;"> &nbsp;</th>
                            <th style="width: 25%;"> &nbsp;</th>

                        </tr>
                    </thead>
                    <tbody id="sezioneTitoliDiStudio">

                        @if (Model.Count() == 0)
                        {
                            <tr>
                                <td class="text-center no-border" colspan="100"><span class="rai-font-md-neutral">Non ci sono dati da visualizzare</span></td>
                            </tr>
                        }
                        else
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.DataInizioStr</td>
                                    <td>@item.DesTipoTitolo - @item.CodTitolo</td>
                                    <td class="rai-table-td-toggle"></td>
                                    <td class="rai-table-td-toggle"></td>
                                    <td style="width:100px;" class="text-right">
                                        @*  <button id="modifica" class="btn btn-action-icon modifica" onclick="javascript: return modificaTitolodiStudio(@serializer.Serialize(item)) "><i class="fa fa-pencil"></i></button>*@
                                        <button id="modifica" class="btn btn-action-icon modifica" onclick="javascript: return modificaTitolo(@item.idTitoloStudioLocal) "><i class="fa fa-pencil"></i></button>
                                        <button id="eliminazione" class="btn btn-action-icon eliminazione" onclick="eliminaTitolo('@item')"><i class="fa fa-trash-o"></i></button>
                                    </td>
                                </tr>
                            }
                        }




                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>




<!--Sezione Esperienze Lavorative-->
<div class="block block-transparent block-content-table" id="sezione_EsperienzeLavorative">

    @Html.Action("GetSezioneEsperienzeLavorative", "PianoFormativo", new { id = @idpersona })

</div>
<script type="text/javascript">
    @foreach (var d in Model)
    {
        @:titoliDiStudio.push(@Html.Raw(serializer.Serialize(d)));
    }

    function renderModalInserimentoDatiApprendistaTitoliDiStudio() {

        removeIdTitoloDiStudioSelected();
        RaiOpenAsyncModal("modal-titoliDiStudio", "/PianoFormativo/ModalInserimentoTitoloDiStudio", { idPersona: idpersona }, null, "POST", false)
    }

    function removeIdTitoloDiStudioSelected() {
        idTitoloStudioSelected = null;
    }
       function createHtmlBodyTitoliDiStudio(element) {
        debugger;
        var html = '<tr>'
            + '<td class="rai-font-md-bold" id="dataInizio">'
            + element.DataInizioStr
            + '</td>'
            + '<td class="">'
            + element.DesTipoTitolo + '<br/>' + element.DesTitolo
            + '</td>'
            + '<td class="rai-table-td-toggle">'

            + '</td>'
            + '<td class="rai-table-td-toggle">'

            + '</td>'
            + '<td style="width:100px;" class="text-right">'
            + '<button id="modifica" class="btn btn-action-icon modifica" onclick="modificaTitolo(\'' + element.idTitoloStudioLocal + '\')"><i class="fa fa-pencil"></i></button>'
            + '<button id="eliminazione" class="btn btn-action-icon eliminazione" onclick="eliminaTitoloDiStudio(\'' + element.idTitoloStudioLocal + '\')"><i class="fa fa-trash-o" ></i></button>'
            + '</td>'
            + '</tr> '
        return html;
    }
    function modificaTitolo(idTitoloLocal) {
        debugger;
        const titoloStudio = titoliDiStudio.find(function (obj) {
            return obj.idTitoloStudioLocal == idTitoloLocal
        });
        debugger;
        idTitoloStudioSelected = idTitoloLocal;
        RaiOpenAsyncModal("modal-titoliDiStudio", "/PianoFormativo/ModalModificaTitoloDiStudio", titoloStudio, null, "POST", false)
    }
    function eliminaTitoloDiStudio(idTitoloStudioSelected) {

        const indexToRemove = titoliDiStudio.findIndex(function (el) { return el.idTitoloStudioLocal == idTitoloStudioSelected });
        titoliDiStudio.splice(indexToRemove, 1);
        for (var i = indexToRemove;i<titoliDiStudio.length; i++)
        {
            titoliDiStudio[i].idTitoloStudioLocal = i;
 }
        reloadTableTitoliDiStudio();
    }
    function saveDatiTitoliDiStudio(id) {
        debugger;
        var $form = $('form#form-studio');
        if (!$form.valid()) { return }
        var titoloDiStudio = {};
        if (idTitoloStudioSelected != null) {
            //creo un nuovo titolo di studio con idlocal = idloacalselected
            titoloDiStudio = {
                idTitoloStudioLocal: idTitoloStudioSelected,
                CodTitolo: $('#CodTitolo').val(),
                DesTitolo: $('#CodTitolo option:selected').text(),
                CodTipoTitolo: $('#CodTipoTitolo').val(),
                DesTipoTitolo: $('#CodTipoTitolo option:selected').text(),
                CorsoLaurea: $('#CorsoLaurea option:selected').text(),
                DataInizioStr: $('#DataInizioStr').val(),
                DataFineStr: $('#DataFineStr').val(),
                IdPersona: idpersona,
                Cod_TipoPunteggio: $('#Cod_TipoPunteggio').val(),
                Voto: $('#Voto').val(),
                Lode: $('#Lode').val(),
                Scala: $('#Cod_TipoPunteggio').val(),
                Riconoscimento: $('#Riconoscimento').val(),
                CodIstituto: $('#CodIstituto').val(),
                DescrizioneIstituto: $('#CodIstituto').text(),
                Istituto: $('#Istituto').val(),
                CodCitta: $('#CodCitta').val(),
                DesCitta: $('#CodCitta').text(),
                Nota: $('#Nota').val()
            }
            //elimino il vecchio titolo di studio da titolidistudio(array)
            const indexToRemove = titoliDiStudio.findIndex(function (el) { return el.idTitoloStudioLocal == idTitoloStudioSelected });
            titoliDiStudio.splice(indexToRemove, 1, titoloDiStudio);


        } else {
            titoloDiStudio = {
                idTitoloStudioLocal: titoliDiStudio.length,
                CodTitolo: $('#CodTitolo').val(),
                DesTitolo: $('#CodTitolo option:selected').text(),
                CodTipoTitolo: $('#CodTipoTitolo').val(),
                DesTipoTitolo: $('#CodTipoTitolo option:selected').text(),
                CorsoLaurea: $('#CorsoLaurea option:selected').text(),
                DataInizioStr: $('#DataInizioStr').val(),
                DataFineStr: $('#DataFineStr').val(),
                IdPersona: idpersona,
                Cod_TipoPunteggio: $('#Cod_TipoPunteggio').val(),
                Scala: $('#Cod_TipoPunteggio').val(),
                Voto: $('#Voto').val(),
                Lode: $('#Lode').val(),
                Riconoscimento: $('#Riconoscimento').text(),
                CodIstituto: $('#CodIstituto').val(),
                DescrizioneIstituto: $('#CodIstituto').text(),
                Istituto: $('#Istituto').val(),
                CodCitta: $('#CodCitta').val(),
                DesCitta: $('#CodCitta').text(),
                Nota: $('#Nota').val()
            };
            titoliDiStudio.push(titoloDiStudio);

        }
        reloadTableTitoliDiStudio();
        $('#modal-titoliDiStudio').modal('toggle');
    }

</script>
@section afterjs{
    <script type="text/javascript">

    $(function () {
        LoadSezioneEsperienzeLavorative();

       reloadTableTitoliDiStudio();
    });

        function LoadSezioneEsperienzeLavorative() {

        $.ajax({
            url: '@Url.Action("GetSezioneEsperienzeLavorative", "PianoFormativo")',
            type: "GET",
            data: { id: idpersona},
            success: function (data) {

                $('#sezione_EsperienzeLavorative').html(data);
            }
        });
    }

    </script>
}