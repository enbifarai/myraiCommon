@using myRaiGestionale.Controllers
@using myRaiCommonModel
@using myRaiHelper

@model DematerializzazioneCustomDataView

@{
    Layout = null;
}

@{
    if (Model.Attributi != null && Model.Attributi.Any())
    {
        <div class="row" id="">
            <div class="col-sm-12">
                <div class="form-group">
                    @{
                        var attrs = Model.Attributi.OrderBy(w => w.Ordinamento).ToList();
                        foreach (var a in attrs)
                        {
                            <div class="row push-10">
                                <div class="col-xs-6">
                                    @{
                                        if (String.IsNullOrEmpty(a.Valore))
                                        {
                                            @Html.Label(a.Id, "", new { @class = "rai-caption" })
                                            <br />
                                            @Html.Label(a.Id, "", new { @class = "rai-font-md", style = "margin-top: 15px;" })
                                        }
                                        else
                                        {
                                            string tx = "";
                                            if (a.Tipo == TipologiaAttributoEnum.Importo)
                                            {
                                                string txImporto = "0.00";

                                                if (!String.IsNullOrEmpty(a.Valore))
                                                {
                                                    txImporto = a.Valore;
                                                }
                                                txImporto = Convert.ToDouble(txImporto).ToString("N2");
                                                tx = txImporto;
                                            }
                                            else if (a.Tipo == TipologiaAttributoEnum.Data)
                                            {
                                                if (a.Valore.Length > 10)
                                                {
                                                    tx = a.Valore.Substring(0, 10);
                                                }
                                            }
                                            else
                                            {
                                                tx = a.Valore;
                                            }

                                            string label1 = a.Label + " ATTUALE";
                                            @Html.Label(a.Id, label1, new { @class = "rai-caption" })
                                            <br />
                                            @Html.Label(a.Id, tx, new { @class = "rai-font-md", style = "margin-top: 15px;" })
                                        }
                                    }
                                </div>
                                <div class="col-xs-6">

                                    @{
                                        if (a.Required)
                                        {
                                            @Html.LabelForRequiredObbl(x => a.Label, a.Label, new { @class = "rai-caption" })
                                        }
                                        else
                                        {
                                            @Html.Label(a.Id, a.Label, new { @class = "rai-caption dem-customdata" })
                                        }

                                        if (a.Tipo == TipologiaAttributoEnum.Data)
                                        {
                                            <div class="input-group mb-md">
                                                <span onclick="$('#@(a.Id)').datetimepicker('show')" class="input-group-addon"><i class="icons icon-calendar"></i></span>
                                                <input data-tipo="@((int)a.Tipo)" class="js-datetimepicker form-control dem-customdata" data-format="DD/MM/YYYY" data-locale="it" type="text" id="@(a.Id)" placeholder="@(a.Title)" value="@(a.ValoreInModifica)">
                                            </div>
                                        }
                                        else if (a.Tipo == TipologiaAttributoEnum.Numero)
                                        {
                                            <input data-tipo="@((int)a.Tipo)" id="@(a.Id)" name="@(a.Nome)" type="number" class="form-control form-control-value dem-customdata" style="width:100%" placeholder="@(a.Title)" value="@(a.ValoreInModifica)" @(a.Required ? "required=\"required\"" : "") />
                                        }
                                        else if (a.Tipo == TipologiaAttributoEnum.Testo)
                                        {

                                            if (!String.IsNullOrEmpty(a.UrlLoadData))
                                            {
                                                if (a.Required)
                                                {
                                                    @Html.RaiAsyncSelectFor(x => a.ValoreInModifica, a.UrlLoadData, minCharInput: 1, expandView: false, tipoFiltro: SelectFilterType.StartsWith, showCodeInDropdown: false, attributes: new { required = (a.Required ? "required" : ""), data_tipo = (int)a.Tipo, id = a.Id, @class = "dem-customdata" }, onSelectchange: (a.Required ? "Dematerializzazione_MarkCompilato('" + a.Id + "')" : ""))
                                                }
                                                else
                                                {
                                                    @Html.RaiAsyncSelectFor(x => a.ValoreInModifica, a.UrlLoadData, minCharInput: 1, expandView: false, tipoFiltro: SelectFilterType.StartsWith, showCodeInDropdown: false, attributes: new { data_tipo = (int)a.Tipo, id = a.Id, @class = "dem-customdata" })
                                                }
                                            }
                                            else
                                            {
                                                <input data-tipo="@((int)a.Tipo)" id="@(a.Id)" type="text" class="form-control form-control-value dem-customdata" style="width:100%" placeholder="@(a.Title)" value="@(a.ValoreInModifica)" @(a.Required ? "required=\"required\"" : "") />
                                            }
                                        }
                                        else if (a.Tipo == TipologiaAttributoEnum.Select)
                                        {
                                            @Html.DropDownList(a.Id,
                                                            a.SelectListItems,
                                                            a.Title,
                                                            new { @class = "form-control dem-customdata" })
                                        }
                                        else if (a.Tipo == TipologiaAttributoEnum.Nota)
                                        {
                                            <textarea data-tipo="@((int)a.Tipo)" id="@a.Id" class="form-control dem-customdata" title="@a.Title" rows="5" cols="200" @(a.Required ? "required=\"required\"" : "")>@a.ValoreInModifica</textarea>
                                        }
                                        else if (a.Tipo == TipologiaAttributoEnum.Radio)
                                        {
                                            if (a.SelectListItems != null && a.SelectListItems.Any())
                                            {
                                                foreach (var s in a.SelectListItems)
                                                {
                                                    <div class="form-check radio-custom radio-info primary" style="margin-top:10px;">
                                                        <input data-tipo="@((int)a.Tipo)" id="@(a.Id)" name="@(a.Nome)" class="dem-customdata" data-check-group="scelta-@(a.Nome)" type="radio" value="@(s.Value)" @(s.Selected ? "checked=\"checked\"" : "") @(a.Required ? "required=\"required\"" : "") />
                                                        <label for="@(a.Nome)" class="rai-font-md">
                                                            @(s.Text)
                                                        </label>
                                                    </div>
                                                }
                                            }
                                        }
                                        else if (a.Tipo == TipologiaAttributoEnum.Importo)
                                        {
                                            string txImporto = "0.00";

                                            if (!String.IsNullOrEmpty(a.Valore))
                                            {
                                                txImporto = a.Valore;
                                            }
                                            txImporto = Convert.ToDouble(txImporto).ToString("N2");
                                            int tipo = (int)a.Tipo;

                                            if (a.Required)
                                            {
                                                @Html.TextBoxFor(x => a.Id, new { id = a.Id, @class = "form-control form-control-value dem-customdata dem-importo", style = "width: 100%", data_type = "currency", pattern = @"^\d{1,3}(.\d{3})*(\,\d+)?$", placeholder = a.Title, required = "required", value = a.ValoreInModifica, data_tipo = tipo })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(x => a.Id, new { id = a.Id, @class = "form-control form-control-value dem-customdata dem-importo", style = "width: 100%", data_type = "currency", pattern = @"^\d{1,3}(.\d{3})*(\,\d+)?$", placeholder = a.Title, value = a.ValoreInModifica, data_tipo = tipo })
                                            }
                                        }
                                    }
                                </div>                                
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    }
}

<script type="text/javascript">
    InitDatePicker();

    function formatAllCurrency() {
        var list = $('input[data-type="currency"]');
        for (var i = 0; i < list.length; i++) {
            formatCurrency($(list[i]));
        }
    }

    function Dematerializzazione_AbilitaSeCompilati() {
        var result = Dematerializzazione_IsCompilati();

        if (result) {
            $('#btns-fase1-custom-next').removeClass('disable');
        }
        else {
            if (!$('#btns-fase1-custom-next').hasClass('disable')) {
                $('#btns-fase1-custom-next').addClass('disable');
            }
        }
    }

    function Dematerializzazione_IsCompilati() {
        var result = false;
        $('.dem-customdata').filter('[required="required"]:visible').each(function () {
            var _resultInternal = $(this).data('compilato');
            if (_resultInternal === null || _resultInternal === "" || typeof _resultInternal === "undefined" || _resultInternal === "false") {
                result = false;
                return false;
            }

            result = true;
        });

        return result;
    }

    function Dematerializzazione_MarkCompilato(id) {
        var tx = $('#' + id).val();
        tx = $.trim(tx);

        if (tx.length >= 1) {
            $('#' + id).data('compilato', 'true');
        }
        else {
            $('#' + id).data('compilato', 'false');
        }

        Dematerializzazione_AbilitaSeCompilati();
    }

    $(function () {
        $("input[data-type='currency']").on({
            keyup: function () {
                formatCurrency($(this));
            },
            blur: function () {
                formatCurrency($(this), "blur");
            }
        });
        formatAllCurrency();

        $('.dem-customdata').each(function () {
            $(this).on('keyup', function () {
                var tx = $(this).val();
                tx = $.trim(tx);

                if (tx.length >= 1) {
                    $(this).data('compilato', 'true');
                }
                else {
                    $(this).data('compilato', 'false');
                }

                Dematerializzazione_AbilitaSeCompilati();
            });

            $(this).on('blur', function () {
                var tx = $(this).val();
                tx = $.trim(tx);

                if (tx.length >= 1) {
                    $(this).data('compilato', 'true');
                }
                else {
                    $(this).data('compilato', 'false');
                }

                Dematerializzazione_AbilitaSeCompilati();
            });

            $(this).on('change', function () {
                var tx = $(this).val();
                tx = $.trim(tx);

                if (tx.length >= 1) {
                    $(this).data('compilato', 'true');
                }
                else {
                    $(this).data('compilato', 'false');
                }

                Dematerializzazione_AbilitaSeCompilati();
            });
        });
    });
</script>