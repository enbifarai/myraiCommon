@using myRaiCommonModel
@model AnagraficaRedditi

@{ 
    int maxAnni = 10;

    decimal lastImport = 25000;
    //List<RedditoModel> redditi = Model.Redditi;
    List<RedditoModel> redditi = new List<RedditoModel>();

    for (int i = 0; i < maxAnni; i++)
    {
        RedditoModel reddito = new RedditoModel()
        {
            Anno = DateTime.Today.AddYears(-i).Year,
            Ral_media = i % 2 == 0 ? lastImport - (123 * i) : lastImport
        };
        lastImport = reddito.Ral_media.Value;

        redditi.Add(reddito);
    }
}


@if (redditi.Any())
{
    <div class="row push-10">
        <div class="col-sm-12">
            <span class="rai-font-sm text-italic">Ultimi 10 anni</span>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div id="chart-reddito" style="width:100%;height:200px;" class="rai-chart">
                @*...CHART*@
            </div>
        </div>
    </div>
    <div id="tooltip-chart" class="tooltip" style="position:fixed;"><div class="tooltip-inner"></div></div>
}
else
{
    <div class="row push-10 push-10-t">
        <div class="col-sm-12 text-center">
            <span class="rai-font-md-neutral">Non ci sono dati da visualizzare</span>
        </div>
    </div>
}





@if (redditi.Any())
{
    string vociReperibilità = "26D,280,262";

    var tmp = redditi.OrderByDescending(x => x.Anno).Take(10).OrderBy(x => x.Anno);
    var serieMagg = String.Join(",", tmp.Select(x => Convert.ToInt32(x.Maggiorazioni.Where(z => !vociReperibilità.Contains(z.cod_voce_cedolino)).Sum(y => y.Importo))));
    var serieReperibilita = String.Join(",", tmp.Select(x => Convert.ToInt32(x.Maggiorazioni.Where(z => vociReperibilità.Contains(z.cod_voce_cedolino)).Sum(y => y.Importo))));

    //var tmp = Model.Redditi.OrderBy(x => x.Anno);
    var cc = "26D%''280%''262%' ";

    <script type="text/javascript">
    var labels = ['@Html.Raw(String.Join("','", tmp.Select(x=>x.Anno)))'];
    var serieRal = [@String.Join(",", tmp.Select(x=>Convert.ToInt32(x.Ral_media)))];
    var serieProvv = [];
    var serieMagg = [@serieMagg];
    var serieRep = [@serieReperibilita];

    var chart2 = new Chartist.Line('#chart-reddito', {
        labels: labels,
        series: [{ name: 'Ral', data: serieRal }]
        }, {
            fullWidth: true,
            chartPadding: { right: 10 },
            series: {
                'Ral': {
                    lineSmooth: Chartist.Interpolation.none({
                        fillHoles: false
                    }),
                    showPoint: true
                }
            }
        }
    );

    var $chart = $('#chart-reddito');

    $chart.on('mouseenter', '.ct-point', function () {
            var $point = $(this),
                value = $point.attr('ct:value'),
                seriesName = $point.parent().attr('ct:series-name');

            var index = $point.parent().find('.ct-point').index($point);

            var tooltipContent = '<table class="table rai-table rai-table-vcenter">' +
                '<tr><td class="text-left">RAL</td><td class="text-right">' + serieRal[index] + ' €</td></tr>' +
                (serieMagg[index] > 0 ? '<tr><td class="text-left">Variabili</td><td class="text-right">' + serieMagg[index] + ' €</td></tr>' : '') +
                (serieRep[index] > 0 ? '<tr><td class="text-left">Reperibilità</td><td class="text-right">' + serieRep[index] + ' €</td></tr>' : '') +
                '</table>';

            $('#tooltip-chart .tooltip-inner').html(tooltipContent);
            $('#tooltip-chart').addClass('in');
        });

    $chart.on('mouseleave', '.ct-point', function () {
        $('#tooltip-chart').removeClass('in');
        });

    $chart.on('mousemove', function (event) {
            $('#tooltip-chart').css({
            left: event.clientX + 2,
                top: event.clientY + 2
            });
        });

    </script>
}