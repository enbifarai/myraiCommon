@using myRaiCommonModel.Gestionale
@using myRaiCommonManager
@using myRaiHelper
@model myRaiCommonModel.Gestionale.SheetContainer

@{
    //string statoVal = "";
    //if (val.Evaluation != null)
    //{
    //    int maxStato = myRaiCommonManager.ValutazioniManager.GetMaxEvalState(val.Evaluation.XR_VAL_OPER_STATE);
    //    if (maxStato == (int)ValutazioniState.Bozza)
    //    {
    //        statoVal = "In bozza";
    //    }
    //    else if (maxStato == (int)ValutazioniState.Convalidata)
    //    {
    //        statoVal = "Valutato";
    //    }
    //}

    int idCampaignSheet = Model.Sheet.ID_CAMPAIGN_SHEET;
    int myVal = Model.Roles.Where(x => !x.Role.IsDelegate() && x.Evaluations.Count() > 0).SelectMany(x => x.Evaluations).Count();

    int countDaVal = Model.Roles.Where(x => !x.Role.IsDelegate() && x.Evaluations.Count() > 0).SelectMany(x => x.Evaluations).Count(x => x.Evaluation == null || ValutazioniManager.GetMaxEvalState(x.Evaluation.XR_VAL_OPER_STATE) < (int)ValutazioniState.Convalidata);
    int countVal = Model.Roles.Where(x => !x.Role.IsDelegate() && x.Evaluations.Count() > 0).SelectMany(x => x.Evaluations).Count(x => x.Evaluation != null && ValutazioniManager.GetMaxEvalState(x.Evaluation.XR_VAL_OPER_STATE) >= (int)ValutazioniState.Convalidata);

    bool utenteIsAdmin = UtenteHelper.IsAdmin();
}

<div id="panelElencoValutazioni@(idCampaignSheet)">
    <div class="block no-margin-bottom">
        <ul class="nav nav-tabs nav-tabs-alt nav-justified" data-toggle="tabs" role="tablist">
            <li class="active" role="presentation">
                <a href="#ElencoDaValutare@(idCampaignSheet)" class="rai-badge-anchor" id="hrefDaValutare@(idCampaignSheet)" tabindex="0" role="tab" aria-controls="ElencoDaValutare@(idCampaignSheet)">
                    Da valutare
                    <div class="rai-badge-tab">
                        @countDaVal
                    </div>
                </a>
            </li>
            <li class="" role="presentation">
                <a href="#ElencoValutati@(idCampaignSheet)" class="rai-badge-anchor" id="hrefValutati@(idCampaignSheet)" tabindex="0" role="tab" aria-controls="ElencoValutati@(idCampaignSheet)">
                    Valutati
                    <div class="rai-badge-tab">
                        @countVal
                    </div>
                </a>
            </li>
        </ul>

        <div class="block-content tab-content" style="padding:5px">
            <div class="tab-pane active" id="ElencoDaValutare@(idCampaignSheet)" role="tabpanel">
                @if (countDaVal == 0)
                {
                    <div class="row" style="padding:10px">
                        <div class="col-sm-12 text-center">
                            <label class="rai-font-md-neutral">Non ci sono dati da visualizzare</label>
                        </div>
                    </div>
                }
                else
                {
                    <div class="panel-group no-margin-bottom" id="accordionDaValutare@(idCampaignSheet)">
                        @foreach (var role in Model.Roles.Where(x => !x.Role.IsDelegate() && x.Evaluations.Count() > 0 && x.Evaluations.Any(y => y.Evaluation == null || ValutazioniManager.GetMaxEvalState(y.Evaluation.XR_VAL_OPER_STATE) < (int)ValutazioniState.Convalidata)).OrderBy(x =>x.Role.ID_PERSONA==0?"": x.Role.SINTESI1.Nominativo()))
                        {
                            var nominativoValutatore = "";
                            if (role.Role.ID_PERSONA!=0)
                            {
                                nominativoValutatore = role.Role.SINTESI1.Nominativo();
                            }
                            else
                            {
                                nominativoValutatore = "Da definire";
                            }

                            <div class="panel panel-accordion">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a class="accordion-toggle collapse no-padding" data-toggle="collapse" data-parent="#accordionDaValutare@(idCampaignSheet)" href="#collapse_poss_@(role.Role.ID_EVALUATOR)" aria-expanded="false">
                                            <span>@nominativoValutatore</span>
                                            @if (role.Role.IsDelegate())
                                            {
                                                <span class="rai-font-md-neutral"> delegato da @role.Role.DELEGATO.First().DELEGANTE.SINTESI1.Nominativo()</span>
                                            }
                                        </a>
                                    </h4>
                                    <div class="panel-actions">
                                        <span class="rai-notification">@role.Evaluations.Count(x => x.Evaluation == null || ValutazioniManager.GetMaxEvalState(x.Evaluation.XR_VAL_OPER_STATE) < (int)ValutazioniState.Convalidata)</span>
                                    </div>
                                </div>
                                <div id="collapse_poss_@(role.Role.ID_EVALUATOR)" class="collapse" aria-expanded="false">
                                    <div class="panel-body panel-row-bordered" style="padding:5px;padding-top:0px">
                                        @foreach (var val in role.Evaluations.Where(x => x.Evaluation == null || ValutazioniManager.GetMaxEvalState(x.Evaluation.XR_VAL_OPER_STATE) < (int)ValutazioniState.Convalidata).OrderBy(x => x.Person.Nominativo()))
                                        {
                                            string matricola = val.Person.COD_MATLIBROMAT;
                                            string nominativo = val.Person.Nominativo();
                                            string details1 = "";
                                            if (!role.Role.IsDelegate() && val.Delegation != null)
                                            {
                                                details1 = "Delegato a " + val.Delegation.DELEGATO.SINTESI1.Nominativo();
                                            }

                                            string statoVal = "";
                                            if (val.Evaluation != null)
                                            {
                                                var currentState = ValutazioniManager.GetCurrentEvalState(val.Evaluation.XR_VAL_OPER_STATE);
                                                if (currentState!=null)
                                                {
                                                    statoVal = currentState.NAME;
                                                }
                                            }

                                            string statoExtVal = "";
                                            if (val.ExternalEvaluator != null)
                                            {
                                                if (!val.ExternalEvaluator.IND_APPROVED.HasValue)
                                                {
                                                    statoExtVal = "rai-label-warning";
                                                }
                                                else if (val.ExternalEvaluator.IND_APPROVED.Value)
                                                {
                                                    statoExtVal = "rai-label-success";
                                                }
                                                else
                                                {
                                                    statoExtVal = "rai-label-error";
                                                }
                                            }

                                            <div class="row" style="padding:10px;" data-val-asResp="false" data-val-sheet="@idCampaignSheet" data-val-eval="@val.Evaluation.ID_EVALUATION">
                                                <div class="col-sm-6">
                                                    @Html.ProfileWidget(matricola, nominativo, null, details1)
                                                </div>
                                                <div class="col-sm-3 text-right">
                                                    @if (val.Evaluation != null && !String.IsNullOrWhiteSpace(statoVal))
                                                    {
                                                        <label class="rai-label">@statoVal</label>
                                                    }
                                                    @if (val.ExternalEvaluator != null)
                                                    {
                                                        <label class="rai-label @statoExtVal">Valutatore esterno</label>
                                                    }
                                                </div>
                                                <div class="col-sm-3 text-right">
                                                    <a class="btn rai-btn-small" href="#" onclick="ValModal_Valutazione(@val.Evaluation.ID_EVALUATION, false)">Visualizza</a>
                                                    @if (utenteIsAdmin)
                                                    {
                                                        if (!String.IsNullOrWhiteSpace(statoVal))
                                                        {
                                                            <a class="btn btn-action-icon" href="#" onclick="ValValutazione_elimina(@val.Evaluation.ID_CAMPAIGN_SHEET, @val.Evaluation.ID_EVALUATION)" title="Pulisci valutazione"><i class="fa fa-eraser"></i></a>
                                                        }
                                                        <a class="btn btn-action-icon" href="#" onclick="ValValutazione_rimuovi(@val.Evaluation.ID_CAMPAIGN_SHEET, @val.Evaluation.ID_EVALUATION)" title="Elimina valutazione"><i class="fa fa-trash-o"></i></a>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>

            <div class="tab-pane" id="ElencoValutati@(idCampaignSheet)" role="tabpanel">
                @if (countVal == 0)
                {
                    <div class="row" style="padding:10px">
                        <div class="col-sm-12  text-center">
                            <label class="rai-font-md-neutral">Non ci sono dati da visualizzare</label>
                        </div>
                    </div>
                }
                else
                {
                    <div class="panel-group no-margin-bottom" id="accordionValutati@(idCampaignSheet)">
                        @foreach (var role in Model.Roles.Where(x => !x.Role.IsDelegate() && x.Evaluations.Count() > 0 && x.Evaluations.Any(y => y.Evaluation != null && ValutazioniManager.GetMaxEvalState(y.Evaluation.XR_VAL_OPER_STATE) >= (int)ValutazioniState.Convalidata)).OrderBy(x => x.Role.ID_PERSONA == 0 ? "" : x.Role.SINTESI1.Nominativo()))
                        {
                            var nominativoValutatore = "";
                            if (role.Role.ID_PERSONA != 0)
                            {
                                nominativoValutatore = role.Role.SINTESI1.Nominativo();
                            }
                            else
                            {
                                nominativoValutatore = "Da definire";
                            }

                            <div class="panel panel-accordion">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a class="accordion-toggle collapse no-padding" data-toggle="collapse" data-parent="#accordionValutati@(idCampaignSheet)" href="#collapse_val_@(role.Role.ID_EVALUATOR)" aria-expanded="false">
                                            <span>@nominativoValutatore</span>
                                            @if (role.Role.IsDelegate())
                                            {
                                                <span class="rai-font-md-neutral"> delegato da @role.Role.DELEGATO.First().DELEGANTE.SINTESI1.Nominativo()</span>
                                            }
                                        </a>
                                    </h4>
                                    <div class="panel-actions">
                                        <span class="rai-notification">@role.Evaluations.Count(x => x.Evaluation != null && ValutazioniManager.GetMaxEvalState(x.Evaluation.XR_VAL_OPER_STATE) >= (int)ValutazioniState.Convalidata)</span>
                                    </div>
                                </div>
                                <div id="collapse_val_@(role.Role.ID_EVALUATOR)" class="collapse" aria-expanded="false">
                                    <div class="panel-body panel-row-bordered" style="padding:5px;padding-top:0px">
                                        @foreach (var val in role.Evaluations.Where(x => x.Evaluation != null && ValutazioniManager.GetMaxEvalState(x.Evaluation.XR_VAL_OPER_STATE) >= (int)ValutazioniState.Convalidata).OrderBy(x => x.Person.Nominativo()))
                                        {
                                            string matricola = val.Person.COD_MATLIBROMAT;
                                            string nominativo = val.Person.Nominativo();
                                            string details1 = "";
                                            if (!role.Role.IsDelegate() && val.Delegation != null)
                                            {
                                                details1 = "Delegato a " + val.Delegation.DELEGATO.SINTESI1.Nominativo();
                                            }

                                            string statoVal = "";
                                            if (val.Evaluation != null)
                                            {
                                                var currentState = ValutazioniManager.GetCurrentEvalState(val.Evaluation.XR_VAL_OPER_STATE);
                                                if (currentState != null)
                                                {
                                                    statoVal = currentState.NAME;
                                                }
                                            }

                                            string statoExtVal = "";
                                            if (val.ExternalEvaluator != null)
                                            {
                                                if (!val.ExternalEvaluator.IND_APPROVED.HasValue)
                                                {
                                                    statoExtVal = "rai-label-warning";
                                                }
                                                else if (val.ExternalEvaluator.IND_APPROVED.Value)
                                                {
                                                    statoExtVal = "rai-label-success";
                                                }
                                                else
                                                {
                                                    statoExtVal = "rai-label-error";
                                                }
                                            }

                                            <div class="row" style="padding:10px;" data-val-asResp="false" data-val-sheet="@idCampaignSheet" data-val-eval="@val.Evaluation.ID_EVALUATION">
                                                <div class="col-sm-6">
                                                    @Html.ProfileWidget(matricola, nominativo, null, details1)
                                                </div>
                                                <div class="col-sm-3 text-right">
                                                    @if (val.Evaluation != null && !String.IsNullOrWhiteSpace(statoVal))
                                                    {
                                                        <label class="rai-label">@statoVal</label>
                                                    }
                                                    @if (val.ExternalEvaluator != null)
                                                    {
                                                        <label class="rai-label @statoExtVal">Valutatore esterno</label>
                                                    }
                                                </div>
                                                <div class="col-sm-3 text-right">
                                                    <a class="btn rai-btn-small" href="#" onclick="ValModal_Valutazione(@val.Evaluation.ID_EVALUATION, false)">Visualizza</a>
                                                    @if (utenteIsAdmin)
                                                    {
                                                        <a class="btn btn-action-icon" href="#" onclick="ValValutazione_elimina(@val.Evaluation.ID_CAMPAIGN_SHEET, @val.Evaluation.ID_EVALUATION)" title="Pulisci valutazione"><i class="fa fa-eraser"></i></a>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>