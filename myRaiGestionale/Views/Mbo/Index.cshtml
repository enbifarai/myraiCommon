@using MVCProject.Custom_Helpers
@using myRaiCommonManager

@{
    Layout = "~/Views/Shared/_layoutContent.cshtml";
    ViewBag.Title = "HRIS - MBO";

    int numSchede = 0;
    myRaiCommonModel.Gestionale.MboReminder reminder = null;
}

<section role="main" class="content-body" style="padding-top:10px;">
    <main id="main-container">

        <div class="content">
            <div class="row">
                <div class="col-sm-8">
                    <div id="wdgt-schede">
                        @Html.AsyncPartial("Mbo", "Elenco_Schede", "~/Views/_RaiDesign/PanelTemplateSkeleton.cshtml", TempData)
                    </div>
                </div>
                <div class="col-sm-4">
                    @if (MboManager.AnyIncomplete(false, out numSchede, out reminder))
                    {
                        <div class="panel">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <label class="rai-font-md-bold push-5-t">Ci sono delle schede da completare</label>
                                        <button class="btn rai-btn-small" style="float:right" onclick="MboOpenModalIncomplete()">Verifica</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div id="wdgt-iniziative">
                        @Html.AsyncPartial("Mbo", "Widget_Iniziative", "~/Views/_RaiDesign/PanelTemplateSkeleton.cshtml", TempData)
                    </div>
                    <div id="wdgt-ricerca">
                        @Html.AsyncPartial("Mbo", "Widget_Ricerca", "~/Views/_RaiDesign/PanelTemplateSkeleton.cshtml", TempData)
                    </div>
                </div>
            </div>
        </div>
    </main>
    <!-- end: page -->
</section>

@Html.RenderModal("mbo", modalAttributes: new myRaiHelper.RaiAttributes() { new myRaiHelper.RaiAttribute("data-backdrop", "static") })
@Html.RenderModal("mbo-half", myRaiHelper.ModalPosition.Right, myRaiHelper.ModalSize.Half, modalAttributes: new myRaiHelper.RaiAttributes() { new myRaiHelper.RaiAttribute("data-backdrop", "static") })
@Html.RenderModal("valutazione",  modalAttributes: new myRaiHelper.RaiAttributes() { new myRaiHelper.RaiAttribute("data-backdrop", "static") })

<script>
    function MboOpenModalIniziativa(idIniziativa) {
        RaiOpenAsyncModal("modal-mbo-half", "@Url.Action("Modal_Iniziativa","Mbo")", { idIniz:idIniziativa }, null, "POST")
    }
    function MboUpdateIniziative() {
        RaiUpdateWidget("wdgt-iniziative", '/Mbo/Widget_Iniziative', 'html')
    }
    function MboOpenModalScheda(idScheda) {
        RaiOpenAsyncModal("modal-mbo-half", "@Url.Action("Modal_Scheda","Mbo")", { idScheda:idScheda}, null, "POST")
    }
    function MboOpenModalIncomplete() {
        RaiOpenAsyncModal("modal-mbo-half", "@Url.Action("Modal_Reminder","Mbo")", { }, null, "POST")
    }
</script>

<script>
    function elenco_schede_oncomplete() {
        var list = $('div[class="collapse in"]');
        var openBox = '';
        for (var i = 0; i < list.length; i++) {
            openBox += $(list[i]).attr('id') + ',';
        }

        window.localStorage.setItem('openBox', openBox);
    }
    function elenco_schede_onsuccess() {
        var openBox = window.localStorage.getItem('openBox');
        if (openBox != '') {
            var list = openBox.split(',');
            for (var i = 0; i < list.length; i++) {
                if (list[i] != '') {
                    $('#' + list[i] + '').collapse('toggle');
                }
            }
        }
        window.localStorage.setItem('openBox', '');
    }

    function MboFileChanged(i) {
        var nomefile = ($("#fileupload" + i).val().split("\\").pop())

        $('#nome-file' + i).text(nomefile);

        $("#uploading" + i).show();
        var formdata = new FormData();
        formdata.append('idScheda', $('#idScheda').val());
        formdata.append('idTipologia', $('#idTipologia').val());
        formdata.append('_file', $('#fileupload' + i)[0].files[0]);
        formdata.append("fileName", nomefile);
        formdata.append("tipologia", $('#fileupload' + i).attr("data-tipo"));

        if ($("#titolodoc" + i).length > 0) {
            formdata.append("titolo", $("#titolodoc" + i).val());
        }
        if ($("#descrizionedoc" + i ).length > 0) {
            formdata.append("desc", $("#descrizionedoc" + i).val());
        }
        var request = new XMLHttpRequest();
        request.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                if (this.responseText.indexOf("E") >= 0)
                    swal(this.responseText);
                else {
                    $("#id-allegato-" + i ).val(this.responseText);
                    $("#button-allegato-" + i ).addClass("disable");
                    $("#nome-file" + i ).text(nomefile);
                    RaiUpdateWidget('wdgt-allegati', '/Mbo/Widget_allegati', 'html', { idScheda: $('#idScheda').val(), idTipologia: $('#idTipologia').val() });
                }
            }
        };
        request.upload.addEventListener('progress', function (e) {

            var filesize = $('#fileupload' + i)[0].files[0].size;
            $("#total" + i ).text(parseInt(filesize / 1000) + " KB");
            $("#loaded" + i ).text(parseInt(e.loaded / 1000) + " KB");
            var percent = Math.round(e.loaded / filesize * 100);
            $("#progress-bar" + i).css("width", percent + "%");

            if (e.loaded >= filesize) {
                $("#rimuovi" + i ).show();
            }
            else
                $("#rimuovi" + i).hide();

        });

        request.open('post', '/Mbo/UploadFile');
        request.timeout = 45000;
        request.send(formdata);
    }
    function MboEliminaGenericDoc(idDoc) {
        swal({
            title: 'Sei sicuro?',
            text: "Se confermi questo file verrà eliminato. Vuoi confermare?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sì!',
            cancelButtonText: 'Annulla',
            reverseButtons: 'true'
        }).then(function () {
            $.ajax({
                url: "/Mbo/EliminaGenericDoc",
                type: "GET",
                dataType: "html",
                data: { idDoc: idDoc },
                cache: false,
                success: function (data) {
                    switch (data) {
                        case "OK":
                            swal("File eliminato", "Il file è stato eliminato correttamente", 'success');
                            $('#allegato' + idDoc).html('');
                            break;
                        default:
                            swal("Ops...", data, 'error');
                            break;
                    }
                },
                error: function () {
                    swal("Ops...", "Si è verificato un errore durante la cancellazione del file", 'error');
                }
            });
        })
    }

    function MboInviaReminderIniz(idIniz) {
        event.preventDefault();

        var list = $('[data-id-iniz=' + idIniz + '][data-stato="@((int)myRaiCommonModel.Gestionale.MboState.DaCompilare)"]');

        var msg = "";
        if (list.length == 1) {
            msg = "C'è ancora una scheda da compilare. Vuoi inviare un reminder al responsabile?";
        } else {
            msg = "Ci sono ancora " + list.length + " schede da compilare. Vuoi inviare un reminder ai responsabili?";
        }

        swal({
            title: 'Sei sicuro?',
            text: msg,
            type: 'question',
            customClass: 'rai',
            showCancelButton: true,
            confirmButtonText: 'Conferma',
            cancelButtonText: 'Annulla',
            reverseButtons: true
        }).then(function () {
            $.ajax({
                url: "/Mbo/InviaReminderIniziativa",
                type: "POST",
                cache: false,
                dataType: 'html',
                data: { idIniziativa: idIniz },
                success: function (data) {
                    switch (data) {
                        case "OK":
                            swal({
                                title: "Invio effettuato",
                                //text: "L'obiettivo è stato creato correttamente",
                                type: 'success',
                                customClass: 'rai'
                            });
                            break;
                        default:
                            swal({
                                title: "Ops...",
                                text: data,
                                type: 'error',
                                customClass: 'rai'
                            });
                    }
                },
                error: function (a, b, c) {
                    swal({
                        title: "Oops...",
                        text: c,
                        type: 'error',
                        customClass: 'rai'
                    });
                }
            });
        });
    }
</script>



@section afterjs {
    @Html.Raw(TempData["script"])
}