@using myRaiGestionale.Controllers
@using myRaiCommonModel
@using myRaiHelper

@model List<AttributiAggiuntivi>

@{
    Layout = null;
}

@{
    if (Model != null && Model.Any())
    {
        var attrs = Model.OrderBy(w => w.Ordinamento).ToList();
        // calcola la dimensione del singolo div inline
        string dimensioneDiv = "";
        int elementi = attrs.Count();
        int parti = 8 / (elementi * 2);

        // se sono tutti bottoni
        bool allButtons = attrs.Count(w => w.Tipo == TipologiaAttributoEnum.ActionButton || w.Tipo == TipologiaAttributoEnum.Button) == attrs.Count();

        if (allButtons)
        {
            parti = 12;
        }

        dimensioneDiv = "col-sm-" + parti.ToString();

        List<string> gruppi = new List<string>();
        int count = 1;
        foreach (var a in attrs.Where(w => w.Tipo != TipologiaAttributoEnum.FixedHiddenValue).ToList())
        {
            if (a.HideInReadOnly)
            {
                continue;
            }
            if (!String.IsNullOrEmpty(a.Valore))
            {
                string label1 = "";
                string tx = "";

                if (a.Tipo == TipologiaAttributoEnum.Importo)
                {
                    string txImporto = "0.00";

                    if (!String.IsNullOrEmpty(a.Valore))
                    {
                        txImporto = a.Valore;
                    }
                    txImporto = Convert.ToDouble(txImporto).ToString("N2");
                    tx = txImporto;
                }
                else if (a.Tipo == TipologiaAttributoEnum.Data)
                {
                    if (a.Valore.Length >= 10)
                    {
                        tx = a.Valore.Substring(0, 10);
                    }
                    else
                    {
                        tx = a.Valore;
                    }
                }
                else if (a.Tipo == TipologiaAttributoEnum.Radio)
                {
                    var gruppo = a.Gruppo;
                    bool giaElaborato = gruppi.Count(w => w.Equals(gruppo)) > 0;
                    if (!giaElaborato)
                    {
                        gruppi.Add(gruppo);
                        var el = attrs.Where(w => w.Tipo == TipologiaAttributoEnum.Radio && w.Gruppo.Equals(gruppo) && w.Checked).FirstOrDefault();
                        if (el != null)
                        {
                            tx = el.Title;
                        }
                    }
                    else
                    {
                        continue;
                    }
                }
                else
                {
                    tx = a.Valore;
                    if (tx.Contains("_NotDisplayed_"))
                    {
                        int pos = tx.IndexOf("_NotDisplayed_");
                        tx = tx.Substring(pos);
                        tx = tx.Replace("_NotDisplayed_", "");
                    }
                }

                label1 = a.Label;

                <div class="@(count == 1 ? "col-sm-4 col-md-3 col-xl-2": dimensioneDiv)">
                    <span>@label1</span>
                </div>
                <div class="@(dimensioneDiv)">
                    <span>@tx</span>
                </div>
                count++;
            }
            else if (a.InLine != null && a.InLine.Any())
            {
                @Html.Partial("~/Views/Dematerializzazione/subpartial/_viewCustomDataForLoop_Tab3.cshtml", a.InLine)
            }
        }
    }
}