@model myRaiHelper.RicercaComunicazione.RicercaComunicazioniResponse

<style>
    #api-info > tbody > tr > td {
        line-height: 0.2;
    }
</style>
<div class="block block-transparent no-margin-bottom">
    <div class="block-header">
        <label class="rai-font-modal-heading">Dati comunicazione telematica</label>
        <div class="block-options">
            <button id="aggiorna-scheda" style="display:none" onclick="DecodLivCat()" aria-label="" class="btn btn-action-icon" type="button" data-toggle="block-option"><i class="fa fa-refresh"></i></button>
            <button data-dismiss="modal" class="btn btn-action-icon" onclick="$(this).parent('.modal').css('z-index', '');"><i class="glyphicon glyphicon-remove"></i></button>
        </div>
    </div>
    <div class="block-content">

        <table id="api-info" style="width:100%;margin-left:16px" class="table rai-table rai-table-vcenter rai-table-high-row rai-table-collapsable rai-table-borderless">
            <thead>
                <tr>
                    <th>Informazione</th>
                    <th>Valore</th>
                </tr>
            </thead>

            @if (Model.Comunicazioni != null && Model.Comunicazioni.Any())
            {
                foreach (var com in Model.Comunicazioni)
                {
                    foreach (System.Reflection.PropertyInfo property in com.GetType().GetProperties(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance))
                    {
                        string a = null;
                        var obj = property.GetValue(com, null);
                        if (obj != null)
                        {
                            a = obj.ToString();
                        }
                        <tr>
                            <td>@property.Name</td>
                            <td>@a</td>
                        </tr>
                    }
                }

            }
            else
            {
                foreach (System.Reflection.PropertyInfo property in Model.Esito.GetType().GetProperties(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance))
                {
                    string a = null;
                    var obj = property.GetValue(Model.Esito, null);
                    if (obj != null)
                    {
                        a = obj.ToString();
                    }
                    <tr>
                        <td>@property.Name</td>
                        <td>@a</td>
                    </tr>
                }

            }

        </table>


        @*<div>
                <pre>@Html.Raw(Newtonsoft.Json. JsonConvert.SerializeObject(Model, Newtonsoft.Json.Formatting.Indented))</pre>
            </div>*@







    </div>
</div>
