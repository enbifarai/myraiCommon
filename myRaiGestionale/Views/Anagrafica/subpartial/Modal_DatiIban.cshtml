@using myRaiHelper
@using myRaiGestionale.Controllers
@using myRaiCommonModel
@model IbanModel

@{
    var title = "Modifica IBAN";
    string buttonText = "Salva modifiche";
    if (Model.Tipologia == IbanType.NonDefinito)
    {
        title = "Aggiunta IBAN";
        buttonText = "Aggiungi codice IBAN";
    }

    bool hasMod = Model.IdRichiestaMod > 0;

    string titlePanel = "";//
    if (Model.Tipologia != IbanType.NonDefinito)
    {
        titlePanel = "Dati " + Model.Tipologia.GetAmbientValue();
    }
    else
    {
        titlePanel = "Dettagli codice IBAN";
    }

}

@using (Html.BeginModal(title))
{
    <div class="row">
        <div class="@(Model.Tipologia!=IbanType.NonDefinito?"col-sm-7":"col-sm-12")">
            @using (Html.BeginPanel(myRaiHelper.PanelType.Panel, titlePanel, false))
            {

                if (Model.IdRichiestaMod > 0)
                {
                    <div class="rai-table-info">
                        <div class="row">
                            <div class="col-sm-4 col-md-3 col-xl-2">
                                <span>Status</span>
                            </div>
                            <div class="col-sm-8 col-md-9 col-xl-10">
                                <span><i class="fa fa-circle feedback-warning-color">&nbsp;</i>Richiesta in corso</span>
                            </div>
                        </div>
                    </div>
                }


                using (Html.BeginForm("Save_DatiIban", "Anagrafica", FormMethod.Post, new { id = "form-iban" }))
                {
                    <div class="form-group">
                        @Html.HiddenFor(m => m.IdPersona)
                        @Html.HiddenFor(m => m.Matricola)
                        @Html.HiddenFor(m => m.IdDatiBancari)
                        @if (Model.Tipologia != IbanType.NonDefinito)
                        {
                            @Html.HiddenFor(m => m.Tipologia)
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-xs-12 push-10">
                                    @Html.LabelForRequiredObbl(m => m.Tipologia, "Tipologia", new { @class = "rai-caption" })
                                    @Html.RaiSelectFor(m => m.Tipologia, AnagraficaController.GetTipologieIban(Model.IbanLiberi), attributes: new { @class = "rai-caption", required = "required" }, hideSearch: true)
                                    @Html.ValidationMessageFor(m => m.Tipologia)
                                </div>
                            </div>

                        }
                        <div class="row">
                            <div class="col-xs-12 push-10">
                                @Html.LabelForRequiredObbl(m => m.IBAN, "IBAN", new { @class = "rai-caption" })
                                @if (hasMod)
                                {
                                    <div class="input-group">
                                        @Html.TextBoxFor(m => m.IBAN, new { @class = "form-control", @readonly = "readonly", required = "required",
                                       data_rule_iban = "true", data_msg_iban = "Specifica un IBAN corretto",
                                       data_rule_italianiban ="true", data_msg_italianiban="Specifica un IBAN italiano",
                                       onblur = "updateValue(event)", })
                                        <span class="input-group-addon">
                                            <i class="fa fa-lock"></i>
                                        </span>
                                    </div>
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.IBAN, new { @class = "form-control", required = "required",
                                   data_rule_iban = "true", data_msg_iban = "Specifica un IBAN corretto",
                                   data_rule_italianiban = "true",
                                   data_msg_italianiban = "Specifica un IBAN italiano",
                                   onblur = "AnagIbanUpdateValue(event)", })

                                }

                                @Html.ValidationMessageFor(m => m.IBAN)
                            </div>
                        </div>
                        <div class="row" id="block-agenzia" style="@(String.IsNullOrWhiteSpace(Model.IBAN)?"display:none;":"")">
                            <div class="col-sm-12 push-10">
                                <div class="rai-table-info bg-neutrals-xl-10" style="border-radius:8px;padding:15px 5px;">
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6 col-lg-3 push-10">
                                            <span>Agenzia:</span>
                                        </div>
                                        <div class="col-xs-12 col-sm-6 col-lg-9 push-10">
                                            <span id="Agenzia">@Model.Agenzia</span>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6 col-lg-3">
                                            <span>Indirizzo Agenzia:</span>
                                        </div>
                                        <div class="col-xs-12 col-sm-6 col-lg-9">
                                            <span id="IndirizzoAgenzia">@Model.IndirizzoAgenzia</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 push-10">
                                @Html.LabelForRequiredObbl(m => m.Intestatario, "Intestatario", new { @class = "rai-caption" })
                                @if (hasMod)
                                {
                                    <div class="input-group">
                                        @Html.TextBoxFor(m => m.Intestatario, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                        <span class="input-group-addon">
                                            <i class="fa fa-lock"></i>
                                        </span>
                                    </div>
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.Intestatario, new { @class = "form-control", required = "required" })
                                }
                                @Html.ValidationMessageFor(m => m.Intestatario)
                            </div>
                        </div>



                        <div class="row">
                            <div class="col-sm-12">
                                <label class="rai-caption">Vincoli</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 push-10 push-10-t">
                                @Html.RaiCheckBoxLabelFor(m => m.IndVincoli, "Conto vincolato", "", new { @class = (hasMod ? "disable" : "") })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 push-10 push-10-t">
                                @Html.RaiCheckBoxLabelFor(m => m.IndCongelato, "Conto congelato", "", new { @class = (hasMod ? "disable" : "") })
                            </div>
                        </div>

                        @if (!hasMod)
                        {
                            <div class="row form-button">
                                <div class="col-sm-12">
                                    <button class="btn rai-btn-primary full-width" onclick="Save_DatiIban(this, '@Model.Matricola')">Salva</button>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        </div>
        @if (Model.Tipologia != IbanType.NonDefinito)
        {
            <div class="col-sm-5">
                @Html.RenderAsyncPanel(PanelType.PanelNoPadding, "Storico modifiche", "Load_StoricoIban", "Anagrafica", false, routeValues: new { idPersona = Model.IdPersona, tipologia = Model.Tipologia })
            </div>
        }
    </div>
}

<script>
    $.validator.addMethod("italianiban", function (value, element) {
        let iban = value.toUpperCase();
        return (iban.substring(0, 2) == 'IT' && iban.length == 27);
    }, "Immettere un codice IBAN italiano");
</script>

@Html.Raw(TempData["script"])