//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EsecutoreTask.MyRaiServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyRaiServiceReference1.IMyRaiService1")]
    public interface IMyRaiService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SalvaGiornoInizioSettimanaSede", ReplyAction="http://tempuri.org/IMyRaiService1/SalvaGiornoInizioSettimanaSedeResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.NuovaSedeGappSettimana SalvaGiornoInizioSettimanaSede(string codiceSedeGapp, System.Nullable<int> giornoInizio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SalvaGiornoInizioSettimanaSede", ReplyAction="http://tempuri.org/IMyRaiService1/SalvaGiornoInizioSettimanaSedeResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NuovaSedeGappSettimana> SalvaGiornoInizioSettimanaSedeAsync(string codiceSedeGapp, System.Nullable<int> giornoInizio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetVisualizzazioneGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/SetVisualizzazioneGiornataResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioneGiornataResponse SetVisualizzazioneGiornata(string matricola, bool visualizzato, string matricolaVisualizzatore, string utenteVisualizzatore, System.DateTime dataRichiesta, System.Nullable<int> idRichiesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetVisualizzazioneGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/SetVisualizzazioneGiornataResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioneGiornataResponse> SetVisualizzazioneGiornataAsync(string matricola, bool visualizzato, string matricolaVisualizzatore, string utenteVisualizzatore, System.DateTime dataRichiesta, System.Nullable<int> idRichiesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/InserisciNotaRichiesta", ReplyAction="http://tempuri.org/IMyRaiService1/InserisciNotaRichiestaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.InserisciNotaRichiestaResponse InserisciNotaRichiesta(string matricola, string nomeUtente, string nota, System.DateTime giornata, string sedeGapp, string destinatario, string tipoMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/InserisciNotaRichiesta", ReplyAction="http://tempuri.org/IMyRaiService1/InserisciNotaRichiestaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.InserisciNotaRichiestaResponse> InserisciNotaRichiestaAsync(string matricola, string nomeUtente, string nota, System.DateTime giornata, string sedeGapp, string destinatario, string tipoMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/ModificaNotaRichiesta", ReplyAction="http://tempuri.org/IMyRaiService1/ModificaNotaRichiestaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.ModificaNotaRichiestaResponse ModificaNotaRichiesta(int idNota, string matricola, string nota, string tipoMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/ModificaNotaRichiesta", ReplyAction="http://tempuri.org/IMyRaiService1/ModificaNotaRichiestaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ModificaNotaRichiestaResponse> ModificaNotaRichiestaAsync(int idNota, string matricola, string nota, string tipoMittente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/EliminaNotaRichiesta", ReplyAction="http://tempuri.org/IMyRaiService1/EliminaNotaRichiestaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.EliminaNotaRichiestaResponse EliminaNotaRichiesta(int idNota, string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/EliminaNotaRichiesta", ReplyAction="http://tempuri.org/IMyRaiService1/EliminaNotaRichiestaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.EliminaNotaRichiestaResponse> EliminaNotaRichiestaAsync(int idNota, string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetLettura", ReplyAction="http://tempuri.org/IMyRaiService1/SetLetturaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.SetLetturaResponse SetLettura(int idNota, string matricola, string nominativo, bool letta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetLettura", ReplyAction="http://tempuri.org/IMyRaiService1/SetLetturaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetLetturaResponse> SetLetturaAsync(int idNota, string matricola, string nominativo, bool letta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNotaRichiesta", ReplyAction="http://tempuri.org/IMyRaiService1/GetNotaRichiestaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetNotaRichiestaResponse GetNotaRichiesta(int idNota, string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNotaRichiesta", ReplyAction="http://tempuri.org/IMyRaiService1/GetNotaRichiestaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetNotaRichiestaResponse> GetNotaRichiestaAsync(int idNota, string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteRichieste", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteRichiesteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse GetNoteRichieste(string matricola, System.DateTime giornata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteRichieste", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteRichiesteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse> GetNoteRichiesteAsync(string matricola, System.DateTime giornata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteRichiestePerSedeGapp", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteRichiestePerSedeGappResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse GetNoteRichiestePerSedeGapp(string matricola, string[] sedi, string destinatario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteRichiestePerSedeGapp", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteRichiestePerSedeGappResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse> GetNoteRichiestePerSedeGappAsync(string matricola, string[] sedi, string destinatario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteRichiestePerSedeGappFiltrata", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteRichiestePerSedeGappFiltrataResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse GetNoteRichiestePerSedeGappFiltrata(string matricola, string[] sedi, string destinatario, bool onlyNonLette);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteRichiestePerSedeGappFiltrata", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteRichiestePerSedeGappFiltrataResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse> GetNoteRichiestePerSedeGappFiltrataAsync(string matricola, string[] sedi, string destinatario, bool onlyNonLette);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_POH_ROH", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_POH_ROHResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.Report_POH_ROH_Response GetReport_POH_ROH(string matricola, string sede, int mese, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_POH_ROH", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_POH_ROHResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_POH_ROH_Response> GetReport_POH_ROHAsync(string matricola, string sede, int mese, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetLista_Eccezioni_Giornalisti", ReplyAction="http://tempuri.org/IMyRaiService1/GetLista_Eccezioni_GiornalistiResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.Report_EccezioniGiornalisti_Response GetLista_Eccezioni_Giornalisti(string matricola, string sede, int mese, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetLista_Eccezioni_Giornalisti", ReplyAction="http://tempuri.org/IMyRaiService1/GetLista_Eccezioni_GiornalistiResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_EccezioniGiornalisti_Response> GetLista_Eccezioni_GiornalistiAsync(string matricola, string sede, int mese, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_STSE", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_STSEResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.Report_STSE_Response GetReport_STSE(string matricola, string sede, int mese, int anno, bool inizioMese);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_STSE", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_STSEResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_STSE_Response> GetReport_STSEAsync(string matricola, string sede, int mese, int anno, bool inizioMese);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_STR_STRF", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_STR_STRFResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.Report_STR_STRF_Response GetReport_STR_STRF(string matricola, string sede, int mese, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_STR_STRF", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_STR_STRFResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_STR_STRF_Response> GetReport_STR_STRFAsync(string matricola, string sede, int mese, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_Reperibilita", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_ReperibilitaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.Report_Reperibilita_Response GetReport_Reperibilita(string matricola, string sede, int mese, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_Reperibilita", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_ReperibilitaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_Reperibilita_Response> GetReport_ReperibilitaAsync(string matricola, string sede, int mese, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_Carenza_MP", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_Carenza_MPResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.Report_Carenza_MP_Response GetReport_Carenza_MP(string matricola, string sede, int mese, int anno, bool inizioMese);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetReport_Carenza_MP", ReplyAction="http://tempuri.org/IMyRaiService1/GetReport_Carenza_MPResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_Carenza_MP_Response> GetReport_Carenza_MPAsync(string matricola, string sede, int mese, int anno, bool inizioMese);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetInfoMensa", ReplyAction="http://tempuri.org/IMyRaiService1/GetInfoMensaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetServizioMensaResponse GetInfoMensa(string matricolaCaller, string matricola, System.DateTime giornata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetInfoMensa", ReplyAction="http://tempuri.org/IMyRaiService1/GetInfoMensaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetServizioMensaResponse> GetInfoMensaAsync(string matricolaCaller, string matricola, System.DateTime giornata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetModuloDetassazione", ReplyAction="http://tempuri.org/IMyRaiService1/GetModuloDetassazioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetModuloDetassazioneResponse GetModuloDetassazione(string pMatricolaCaller, string matricolaDestinatario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetModuloDetassazione", ReplyAction="http://tempuri.org/IMyRaiService1/GetModuloDetassazioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetModuloDetassazioneResponse> GetModuloDetassazioneAsync(string pMatricolaCaller, string matricolaDestinatario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetSceltaDetassazione", ReplyAction="http://tempuri.org/IMyRaiService1/SetSceltaDetassazioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.SetSceltaDetassazioneResponse SetSceltaDetassazione(string pMatricolaCaller, string matricolaDestinatario, System.DateTime data, string modulo, int scelta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetSceltaDetassazione", ReplyAction="http://tempuri.org/IMyRaiService1/SetSceltaDetassazioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetSceltaDetassazioneResponse> SetSceltaDetassazioneAsync(string pMatricolaCaller, string matricolaDestinatario, System.DateTime data, string modulo, int scelta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/ResetModuloDetassazione", ReplyAction="http://tempuri.org/IMyRaiService1/ResetModuloDetassazioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.ResetModuloDetassazioneResponse ResetModuloDetassazione(string pMatricolaCaller, string matricolaDestinatario, string applicazione);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/ResetModuloDetassazione", ReplyAction="http://tempuri.org/IMyRaiService1/ResetModuloDetassazioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ResetModuloDetassazioneResponse> ResetModuloDetassazioneAsync(string pMatricolaCaller, string matricolaDestinatario, string applicazione);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetGiorniConsecutivi", ReplyAction="http://tempuri.org/IMyRaiService1/GetGiorniConsecutiviResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.ConteggioGiorniConsecutivi_Response GetGiorniConsecutivi(string matricola, string sedeGapp, System.DateTime dataPartenza);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetGiorniConsecutivi", ReplyAction="http://tempuri.org/IMyRaiService1/GetGiorniConsecutiviResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ConteggioGiorniConsecutivi_Response> GetGiorniConsecutiviAsync(string matricola, string sedeGapp, System.DateTime dataPartenza);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/Version", ReplyAction="http://tempuri.org/IMyRaiService1/VersionResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.VersionResponse Version();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/Version", ReplyAction="http://tempuri.org/IMyRaiService1/VersionResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.VersionResponse> VersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetApprovatoriProduzione", ReplyAction="http://tempuri.org/IMyRaiService1/GetApprovatoriProduzioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse GetApprovatoriProduzione(string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetApprovatoriProduzione", ReplyAction="http://tempuri.org/IMyRaiService1/GetApprovatoriProduzioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse> GetApprovatoriProduzioneAsync(string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetApprovatoreProduzione", ReplyAction="http://tempuri.org/IMyRaiService1/SetApprovatoreProduzioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.SetApprovatoreProduzioneResponse SetApprovatoreProduzione(string matricola, MyRaiServiceInterface.MyRaiServiceReference1.ApprovatoriProduzioneItem item, bool checkIfExists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetApprovatoreProduzione", ReplyAction="http://tempuri.org/IMyRaiService1/SetApprovatoreProduzioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetApprovatoreProduzioneResponse> SetApprovatoreProduzioneAsync(string matricola, MyRaiServiceInterface.MyRaiServiceReference1.ApprovatoriProduzioneItem item, bool checkIfExists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetApprovatoriProduzioneByTitolo", ReplyAction="http://tempuri.org/IMyRaiService1/GetApprovatoriProduzioneByTitoloResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoreProduzioneResponse GetApprovatoriProduzioneByTitolo(string matricola, string titolo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetApprovatoriProduzioneByTitolo", ReplyAction="http://tempuri.org/IMyRaiService1/GetApprovatoriProduzioneByTitoloResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoreProduzioneResponse> GetApprovatoriProduzioneByTitoloAsync(string matricola, string titolo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetProduzioniByApprovatore", ReplyAction="http://tempuri.org/IMyRaiService1/GetProduzioniByApprovatoreResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse GetProduzioniByApprovatore(string matricola, string matricolaApprovatore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetProduzioniByApprovatore", ReplyAction="http://tempuri.org/IMyRaiService1/GetProduzioniByApprovatoreResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse> GetProduzioniByApprovatoreAsync(string matricola, string matricolaApprovatore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/DeleteApprovatoreProduzione", ReplyAction="http://tempuri.org/IMyRaiService1/DeleteApprovatoreProduzioneResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MyRaiServiceInterface.MyRaiServiceReference1.SetApprovatoreProduzioneResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoreProduzioneResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MyRaiServiceInterface.MyRaiServiceReference1.GetContatoriEccezioniResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MyRaiServiceInterface.MyRaiServiceReference1.GetContatoriEccezioniItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse))]
        MyRaiServiceInterface.MyRaiServiceReference1.ServiceResponseBase DeleteApprovatoreProduzione(string matricola, MyRaiServiceInterface.MyRaiServiceReference1.ApprovatoriProduzioneItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/DeleteApprovatoreProduzione", ReplyAction="http://tempuri.org/IMyRaiService1/DeleteApprovatoreProduzioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ServiceResponseBase> DeleteApprovatoreProduzioneAsync(string matricola, MyRaiServiceInterface.MyRaiServiceReference1.ApprovatoriProduzioneItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetContatoriEccezioni", ReplyAction="http://tempuri.org/IMyRaiService1/GetContatoriEccezioniResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetContatoriEccezioniResponse GetContatoriEccezioni(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string[] eccezioni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetContatoriEccezioni", ReplyAction="http://tempuri.org/IMyRaiService1/GetContatoriEccezioniResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetContatoriEccezioniResponse> GetContatoriEccezioniAsync(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string[] eccezioni);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetPianoFeriePDF", ReplyAction="http://tempuri.org/IMyRaiService1/GetPianoFeriePDFResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetPianoFeriePDFResponse GetPianoFeriePDF(string sede, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetPianoFeriePDF", ReplyAction="http://tempuri.org/IMyRaiService1/GetPianoFeriePDFResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetPianoFeriePDFResponse> GetPianoFeriePDFAsync(string sede, int anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetPianoFerieAnno", ReplyAction="http://tempuri.org/IMyRaiService1/GetPianoFerieAnnoResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetPianoFerieAnnoResponse GetPianoFerieAnno(string sede, int anno, bool soloStato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetPianoFerieAnno", ReplyAction="http://tempuri.org/IMyRaiService1/GetPianoFerieAnnoResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetPianoFerieAnnoResponse> GetPianoFerieAnnoAsync(string sede, int anno, bool soloStato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetProvvedimentiCause", ReplyAction="http://tempuri.org/IMyRaiService1/GetProvvedimentiCauseResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.ProvvedimentiCauseResponse GetProvvedimentiCause(string MatricolaChiamante, string MatricolaOggetto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetProvvedimentiCause", ReplyAction="http://tempuri.org/IMyRaiService1/GetProvvedimentiCauseResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ProvvedimentiCauseResponse> GetProvvedimentiCauseAsync(string MatricolaChiamante, string MatricolaOggetto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetEccezioniComplessive", ReplyAction="http://tempuri.org/IMyRaiService1/GetEccezioniComplessiveResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetEccezioniComplessiveResponse GetEccezioniComplessive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetEccezioniComplessive", ReplyAction="http://tempuri.org/IMyRaiService1/GetEccezioniComplessiveResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetEccezioniComplessiveResponse> GetEccezioniComplessiveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetElencoVisualizzazioneGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/GetElencoVisualizzazioneGiornataResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioniGiornataResponse_Elenco GetElencoVisualizzazioneGiornata(string matricola, System.DateTime dataDa, System.DateTime dataA, System.Nullable<bool> visualizzati);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetElencoVisualizzazioneGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/GetElencoVisualizzazioneGiornataResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioniGiornataResponse_Elenco> GetElencoVisualizzazioneGiornataAsync(string matricola, System.DateTime dataDa, System.DateTime dataA, System.Nullable<bool> visualizzati);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetStatoEccezioniGiornate", ReplyAction="http://tempuri.org/IMyRaiService1/GetStatoEccezioniGiornateResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.StatoEccezioniGiornateResponse GetStatoEccezioniGiornate(string matricola, System.DateTime dataDa, System.DateTime dataA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetStatoEccezioniGiornate", ReplyAction="http://tempuri.org/IMyRaiService1/GetStatoEccezioniGiornateResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.StatoEccezioniGiornateResponse> GetStatoEccezioniGiornateAsync(string matricola, System.DateTime dataDa, System.DateTime dataA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetFerie", ReplyAction="http://tempuri.org/IMyRaiService1/GetFerieResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetFerieResponse GetFerie(string matricola, string anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetFerie", ReplyAction="http://tempuri.org/IMyRaiService1/GetFerieResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetFerieResponse> GetFerieAsync(string matricola, string anno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetInformazioniDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/GetInformazioniDipendenteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetInfoDipendenteResponse GetInformazioniDipendente(string matricola, bool soloValide);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetInformazioniDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/GetInformazioniDipendenteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetInfoDipendenteResponse> GetInformazioniDipendenteAsync(string matricola, bool soloValide);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetListaSediGappSettimana", ReplyAction="http://tempuri.org/IMyRaiService1/GetListaSediGappSettimanaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetSettimanaSedi GetListaSediGappSettimana(string[] codiciSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetListaSediGappSettimana", ReplyAction="http://tempuri.org/IMyRaiService1/GetListaSediGappSettimanaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetSettimanaSedi> GetListaSediGappSettimanaAsync(string[] codiciSede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteSegreteria", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteSegreteriaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.NotaSegreteriaResponse GetNoteSegreteria(string matricola, System.DateTime data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteSegreteria", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteSegreteriaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NotaSegreteriaResponse> GetNoteSegreteriaAsync(string matricola, System.DateTime data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteSegreteriaPerData", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteSegreteriaPerDataResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.NotaSegreteriaResponse GetNoteSegreteriaPerData(System.DateTime data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetNoteSegreteriaPerData", ReplyAction="http://tempuri.org/IMyRaiService1/GetNoteSegreteriaPerDataResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NotaSegreteriaResponse> GetNoteSegreteriaPerDataAsync(System.DateTime data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/getOrario", ReplyAction="http://tempuri.org/IMyRaiService1/getOrarioResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.getOrarioResponse getOrario(string codiceOrario, string data, string matricola, string options, int livelloUtente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/getOrario", ReplyAction="http://tempuri.org/IMyRaiService1/getOrarioResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.getOrarioResponse> getOrarioAsync(string codiceOrario, string data, string matricola, string options, int livelloUtente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetRiepilogo", ReplyAction="http://tempuri.org/IMyRaiService1/GetRiepilogoResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.Riepilogo GetRiepilogo(string[] SediGapp, System.Nullable<System.DateTime> DataInizio, System.Nullable<System.DateTime> DataFine, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumWorkflowRichieste> WorkFlow, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumTipoRicerca> Ricerca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetRiepilogo", ReplyAction="http://tempuri.org/IMyRaiService1/GetRiepilogoResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Riepilogo> GetRiepilogoAsync(string[] SediGapp, System.Nullable<System.DateTime> DataInizio, System.Nullable<System.DateTime> DataFine, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumWorkflowRichieste> WorkFlow, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumTipoRicerca> Ricerca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetSchedaPresenzeMese", ReplyAction="http://tempuri.org/IMyRaiService1/GetSchedaPresenzeMeseResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetSchedaPresenzeMeseResponse GetSchedaPresenzeMese(string matricola, System.DateTime dstart, System.DateTime dend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetSchedaPresenzeMese", ReplyAction="http://tempuri.org/IMyRaiService1/GetSchedaPresenzeMeseResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetSchedaPresenzeMeseResponse> GetSchedaPresenzeMeseAsync(string matricola, System.DateTime dstart, System.DateTime dend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetSituazioneDebitoria", ReplyAction="http://tempuri.org/IMyRaiService1/GetSituazioneDebitoriaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.SituazioneDebitoriaResponse GetSituazioneDebitoria(string matricolaRichiedente, string matricolaRichiesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetSituazioneDebitoria", ReplyAction="http://tempuri.org/IMyRaiService1/GetSituazioneDebitoriaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SituazioneDebitoriaResponse> GetSituazioneDebitoriaAsync(string matricolaRichiedente, string matricolaRichiesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetStorni", ReplyAction="http://tempuri.org/IMyRaiService1/GetStorniResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.DatiStorno[] GetStorni(string[] ndoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetStorni", ReplyAction="http://tempuri.org/IMyRaiService1/GetStorniResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.DatiStorno[]> GetStorniAsync(string[] ndoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetTimbratureMese", ReplyAction="http://tempuri.org/IMyRaiService1/GetTimbratureMeseResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetTimbratureMeseResponse GetTimbratureMese(string matricola, System.DateTime dstart, System.DateTime dend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetTimbratureMese", ReplyAction="http://tempuri.org/IMyRaiService1/GetTimbratureMeseResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetTimbratureMeseResponse> GetTimbratureMeseAsync(string matricola, System.DateTime dstart, System.DateTime dend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetTipiInfoDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/GetTipiInfoDipendenteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetTipologieInfoDipendenteResponse GetTipiInfoDipendente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetTipiInfoDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/GetTipiInfoDipendenteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetTipologieInfoDipendenteResponse> GetTipiInfoDipendenteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetTrasferte", ReplyAction="http://tempuri.org/IMyRaiService1/GetTrasferteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.TrasferteResponse GetTrasferte(string matricolaRichiedente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetTrasferte", ReplyAction="http://tempuri.org/IMyRaiService1/GetTrasferteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.TrasferteResponse> GetTrasferteAsync(string matricolaRichiedente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetVisualizzazioneGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/GetVisualizzazioneGiornataResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioneGiornataResponse GetVisualizzazioneGiornata(string matricola, System.DateTime data, System.Nullable<bool> visualizzato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetVisualizzazioneGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/GetVisualizzazioneGiornataResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioneGiornataResponse> GetVisualizzazioneGiornataAsync(string matricola, System.DateTime data, System.Nullable<bool> visualizzato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/InserisciNotaSegreteria", ReplyAction="http://tempuri.org/IMyRaiService1/InserisciNotaSegreteriaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.InserisciNotaSegreteriaResponse InserisciNotaSegreteria(string matricola, System.DateTime data, string codice, System.Nullable<System.DateTime> dalle, System.Nullable<System.DateTime> alle, string motivo, string nota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/InserisciNotaSegreteria", ReplyAction="http://tempuri.org/IMyRaiService1/InserisciNotaSegreteriaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.InserisciNotaSegreteriaResponse> InserisciNotaSegreteriaAsync(string matricola, System.DateTime data, string codice, System.Nullable<System.DateTime> dalle, System.Nullable<System.DateTime> alle, string motivo, string nota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/presenzeGiornaliere", ReplyAction="http://tempuri.org/IMyRaiService1/presenzeGiornaliereResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitypresenzeGiornaliere_resp presenzeGiornaliere(string matricola, string sedegapp, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/presenzeGiornaliere", ReplyAction="http://tempuri.org/IMyRaiService1/presenzeGiornaliereResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitypresenzeGiornaliere_resp> presenzeGiornaliereAsync(string matricola, string sedegapp, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/PresenzeSettimanali", ReplyAction="http://tempuri.org/IMyRaiService1/PresenzeSettimanaliResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitypresenzeSettimanali_resp PresenzeSettimanali(string matricola, string dataDa, string dataA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/PresenzeSettimanali", ReplyAction="http://tempuri.org/IMyRaiService1/PresenzeSettimanaliResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitypresenzeSettimanali_resp> PresenzeSettimanaliAsync(string matricola, string dataDa, string dataA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/recuperaPdf", ReplyAction="http://tempuri.org/IMyRaiService1/recuperaPdfResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.RecuperaPdfResponse recuperaPdf(string sedeGapp, System.DateTime data, System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/recuperaPdf", ReplyAction="http://tempuri.org/IMyRaiService1/recuperaPdfResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.RecuperaPdfResponse> recuperaPdfAsync(string sedeGapp, System.DateTime data, System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/recuperaUtente", ReplyAction="http://tempuri.org/IMyRaiService1/recuperaUtenteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitydipendente_resp recuperaUtente(string matricola, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/recuperaUtente", ReplyAction="http://tempuri.org/IMyRaiService1/recuperaUtenteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitydipendente_resp> recuperaUtenteAsync(string matricola, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/RigeneraPDF", ReplyAction="http://tempuri.org/IMyRaiService1/RigeneraPDFResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.RigeneraPdfResponse RigeneraPDF(System.DateTime dstart, System.DateTime dend, string matricola, string nominativo, string sedeGapp, int livelloUtente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/RigeneraPDF", ReplyAction="http://tempuri.org/IMyRaiService1/RigeneraPDFResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.RigeneraPdfResponse> RigeneraPDFAsync(System.DateTime dstart, System.DateTime dend, string matricola, string nominativo, string sedeGapp, int livelloUtente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/RigeneraPDFpresenze", ReplyAction="http://tempuri.org/IMyRaiService1/RigeneraPDFpresenzeResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.RigeneraPdfResponse RigeneraPDFpresenze(System.DateTime dstart, System.DateTime dend, string matricola, string nominativo, string sedeGapp, int livelloUtente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/RigeneraPDFpresenze", ReplyAction="http://tempuri.org/IMyRaiService1/RigeneraPDFpresenzeResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.RigeneraPdfResponse> RigeneraPDFpresenzeAsync(System.DateTime dstart, System.DateTime dend, string matricola, string nominativo, string sedeGapp, int livelloUtente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/RimuoviNotaSegreteria", ReplyAction="http://tempuri.org/IMyRaiService1/RimuoviNotaSegreteriaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.RimuoviNotaSegreteriaResponse RimuoviNotaSegreteria(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/RimuoviNotaSegreteria", ReplyAction="http://tempuri.org/IMyRaiService1/RimuoviNotaSegreteriaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.RimuoviNotaSegreteriaResponse> RimuoviNotaSegreteriaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetCodiceFiscaleInfo", ReplyAction="http://tempuri.org/IMyRaiService1/GetCodiceFiscaleInfoResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.CodiceFiscaleReponse GetCodiceFiscaleInfo(string cf, string matricolaOperatore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetCodiceFiscaleInfo", ReplyAction="http://tempuri.org/IMyRaiService1/GetCodiceFiscaleInfoResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.CodiceFiscaleReponse> GetCodiceFiscaleInfoAsync(string cf, string matricolaOperatore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetPagamentoEccezione", ReplyAction="http://tempuri.org/IMyRaiService1/SetPagamentoEccezioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.SetPagamentoEccezioneResponse SetPagamentoEccezione(string matricolaOperatore, System.DateTime dataEccezione, string matricola, System.DateTime dataPagamento, string eccezione, string numdoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetPagamentoEccezione", ReplyAction="http://tempuri.org/IMyRaiService1/SetPagamentoEccezioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetPagamentoEccezioneResponse> SetPagamentoEccezioneAsync(string matricolaOperatore, System.DateTime dataEccezione, string matricola, System.DateTime dataPagamento, string eccezione, string numdoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetStatoEccezione", ReplyAction="http://tempuri.org/IMyRaiService1/SetStatoEccezioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.SetStatoEccezioneResponse SetStatoEccezione(string matricolaOperatore, System.DateTime D, string matricola, string numdoc, string eccezione, string stato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetStatoEccezione", ReplyAction="http://tempuri.org/IMyRaiService1/SetStatoEccezioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetStatoEccezioneResponse> SetStatoEccezioneAsync(string matricolaOperatore, System.DateTime D, string matricola, string numdoc, string eccezione, string stato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetRuoli", ReplyAction="http://tempuri.org/IMyRaiService1/GetRuoliResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetRuoliResponse GetRuoli(string matricola, System.DateTime DataStart, string tipologia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetRuoli", ReplyAction="http://tempuri.org/IMyRaiService1/GetRuoliResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetRuoliResponse> GetRuoliAsync(string matricola, System.DateTime DataStart, string tipologia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/ClearCacheResoconti", ReplyAction="http://tempuri.org/IMyRaiService1/ClearCacheResocontiResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.ResocontiResponse ClearCacheResoconti(MyRaiServiceInterface.MyRaiServiceReference1.SedeData[] SediData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/ClearCacheResoconti", ReplyAction="http://tempuri.org/IMyRaiService1/ClearCacheResocontiResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ResocontiResponse> ClearCacheResocontiAsync(MyRaiServiceInterface.MyRaiServiceReference1.SedeData[] SediData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetRipianificazioniMatricola", ReplyAction="http://tempuri.org/IMyRaiService1/GetRipianificazioniMatricolaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetRipianificazioniMatricolaResponse GetRipianificazioniMatricola(string matricola, System.DateTime DataInizio, System.DateTime DataFine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetRipianificazioniMatricola", ReplyAction="http://tempuri.org/IMyRaiService1/GetRipianificazioniMatricolaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetRipianificazioniMatricolaResponse> GetRipianificazioniMatricolaAsync(string matricola, System.DateTime DataInizio, System.DateTime DataFine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetPeriodiSW", ReplyAction="http://tempuri.org/IMyRaiService1/GetPeriodiSWResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.PeriodoSW[] GetPeriodiSW(string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetPeriodiSW", ReplyAction="http://tempuri.org/IMyRaiService1/GetPeriodiSWResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.PeriodoSW[]> GetPeriodiSWAsync(string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/InviaPianoFerie", ReplyAction="http://tempuri.org/IMyRaiService1/InviaPianoFerieResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.InviaPianoFerieResponse InviaPianoFerie(string matricolaDipendente, int anno, string sedegapp, string rep, string matricolaOperatore, string notaSegreteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/InviaPianoFerie", ReplyAction="http://tempuri.org/IMyRaiService1/InviaPianoFerieResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.InviaPianoFerieResponse> InviaPianoFerieAsync(string matricolaDipendente, int anno, string sedegapp, string rep, string matricolaOperatore, string notaSegreteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetRuolo", ReplyAction="http://tempuri.org/IMyRaiService1/SetRuoloResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.SetRuoloResponse SetRuolo(string matricola, string dataMese, string sede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SetRuolo", ReplyAction="http://tempuri.org/IMyRaiService1/SetRuoloResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetRuoloResponse> SetRuoloAsync(string matricola, string dataMese, string sede);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/RiCreaResoconti", ReplyAction="http://tempuri.org/IMyRaiService1/RiCreaResocontiResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.ResocontiResponse RiCreaResoconti(MyRaiServiceInterface.MyRaiServiceReference1.SedeData[] SediData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/RiCreaResoconti", ReplyAction="http://tempuri.org/IMyRaiService1/RiCreaResocontiResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ResocontiResponse> RiCreaResocontiAsync(MyRaiServiceInterface.MyRaiServiceReference1.SedeData[] SediData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetRipianificazioni", ReplyAction="http://tempuri.org/IMyRaiService1/GetRipianificazioniResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetRipianificazioniResponse GetRipianificazioni(string[] SediGapp, System.DateTime DataInizio, System.DateTime DataFine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetRipianificazioni", ReplyAction="http://tempuri.org/IMyRaiService1/GetRipianificazioniResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetRipianificazioniResponse> GetRipianificazioniAsync(string[] SediGapp, System.DateTime DataInizio, System.DateTime DataFine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetEccezioniRicalcolate", ReplyAction="http://tempuri.org/IMyRaiService1/GetEccezioniRicalcolateResponse")]
        string[] GetEccezioniRicalcolate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetEccezioniRicalcolate", ReplyAction="http://tempuri.org/IMyRaiService1/GetEccezioniRicalcolateResponse")]
        System.Threading.Tasks.Task<string[]> GetEccezioniRicalcolateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SbloccaEccezione", ReplyAction="http://tempuri.org/IMyRaiService1/SbloccaEccezioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.SbloccaEccezioniResponse SbloccaEccezione(string MatricolaSegreteria, string MatricolaDipendente, System.DateTime Data, string Eccezione, string Motivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/SbloccaEccezione", ReplyAction="http://tempuri.org/IMyRaiService1/SbloccaEccezioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SbloccaEccezioniResponse> SbloccaEccezioneAsync(string MatricolaSegreteria, string MatricolaDipendente, System.DateTime Data, string Eccezione, string Motivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/AggiornaNotaSegreteria", ReplyAction="http://tempuri.org/IMyRaiService1/AggiornaNotaSegreteriaResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.AggiornaNotaSegreteriaResponse AggiornaNotaSegreteria(int id, string matricola, System.DateTime data, string codice, System.Nullable<System.DateTime> dalle, System.Nullable<System.DateTime> alle, string motivo, string nota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/AggiornaNotaSegreteria", ReplyAction="http://tempuri.org/IMyRaiService1/AggiornaNotaSegreteriaResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.AggiornaNotaSegreteriaResponse> AggiornaNotaSegreteriaAsync(int id, string matricola, System.DateTime data, string codice, System.Nullable<System.DateTime> dalle, System.Nullable<System.DateTime> alle, string motivo, string nota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/AllineaGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/AllineaGiornataResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.AllineaGiornataResponse AllineaGiornata(System.DateTime date, string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/AllineaGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/AllineaGiornataResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.AllineaGiornataResponse> AllineaGiornataAsync(System.DateTime date, string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/cambiaInformazioniDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/cambiaInformazioniDipendenteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.CambiaInfoDipendenteResponse cambiaInformazioniDipendente(string matricola, string valoreInfo, System.Nullable<System.DateTime> dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, int idTipoInformazione, string noteInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/cambiaInformazioniDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/cambiaInformazioniDipendenteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.CambiaInfoDipendenteResponse> cambiaInformazioniDipendenteAsync(string matricola, string valoreInfo, System.Nullable<System.DateTime> dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, int idTipoInformazione, string noteInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/CambiaStato", ReplyAction="http://tempuri.org/IMyRaiService1/CambiaStatoResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.CambiaStatoResponse CambiaStato(int IdRichiesta, MyRaiServiceInterface.MyRaiServiceReference1.EnumStatiRichiesta stato, string matricola, string nota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/CambiaStato", ReplyAction="http://tempuri.org/IMyRaiService1/CambiaStatoResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.CambiaStatoResponse> CambiaStatoAsync(int IdRichiesta, MyRaiServiceInterface.MyRaiServiceReference1.EnumStatiRichiesta stato, string matricola, string nota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/ComunicaCICS", ReplyAction="http://tempuri.org/IMyRaiService1/ComunicaCICSResponse")]
        string ComunicaCICS(string S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/ComunicaCICS", ReplyAction="http://tempuri.org/IMyRaiService1/ComunicaCICSResponse")]
        System.Threading.Tasks.Task<string> ComunicaCICSAsync(string S);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/creaNuovaInfoDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/creaNuovaInfoDipendenteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.NuoveInfoDipendenteResponse creaNuovaInfoDipendente(string matricola, int idTipoInfoDipendente, string valoreInfo, System.DateTime dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, string noteInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/creaNuovaInfoDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/creaNuovaInfoDipendenteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NuoveInfoDipendenteResponse> creaNuovaInfoDipendenteAsync(string matricola, int idTipoInfoDipendente, string valoreInfo, System.DateTime dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, string noteInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/creaNuovaTipologiaInfoDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/creaNuovaTipologiaInfoDipendenteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.NuovaTipologiaInfoDipendente creaNuovaTipologiaInfoDipendente(string nomeTipologia, System.DateTime dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, string noteTipo, string tipoValore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/creaNuovaTipologiaInfoDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/creaNuovaTipologiaInfoDipendenteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NuovaTipologiaInfoDipendente> creaNuovaTipologiaInfoDipendenteAsync(string nomeTipologia, System.DateTime dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, string noteTipo, string tipoValore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/EliminaInfoDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/EliminaInfoDipendenteResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.EliminaInfoDipendenteResponse EliminaInfoDipendente(string matricola, int idTipologiaInformazione);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/EliminaInfoDipendente", ReplyAction="http://tempuri.org/IMyRaiService1/EliminaInfoDipendenteResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.EliminaInfoDipendenteResponse> EliminaInfoDipendenteAsync(string matricola, int idTipologiaInformazione);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetAnalisiEccezioni", ReplyAction="http://tempuri.org/IMyRaiService1/GetAnalisiEccezioniResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetAnalisiEccezioniResponse GetAnalisiEccezioni(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string eccezione1, string eccezione2, string eccezione3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetAnalisiEccezioni", ReplyAction="http://tempuri.org/IMyRaiService1/GetAnalisiEccezioniResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetAnalisiEccezioniResponse> GetAnalisiEccezioniAsync(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string eccezione1, string eccezione2, string eccezione3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetAnalisiEccezioni2", ReplyAction="http://tempuri.org/IMyRaiService1/GetAnalisiEccezioni2Response")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetAnalisiEccezioniResponse GetAnalisiEccezioni2(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string eccezione1, string eccezione2, string eccezione3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetAnalisiEccezioni2", ReplyAction="http://tempuri.org/IMyRaiService1/GetAnalisiEccezioni2Response")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetAnalisiEccezioniResponse> GetAnalisiEccezioni2Async(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string eccezione1, string eccezione2, string eccezione3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetDettagli", ReplyAction="http://tempuri.org/IMyRaiService1/GetDettagliResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.DettaglioRichiesta[] GetDettagli(string[] SediGapp, System.DateTime DataInizio, System.DateTime DataFine, MyRaiServiceInterface.MyRaiServiceReference1.EnumWorkflowRichieste WorkFlow, MyRaiServiceInterface.MyRaiServiceReference1.EnumStatiRichiesta stato, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumTipoRicerca> Ricerca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetDettagli", ReplyAction="http://tempuri.org/IMyRaiService1/GetDettagliResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.DettaglioRichiesta[]> GetDettagliAsync(string[] SediGapp, System.DateTime DataInizio, System.DateTime DataFine, MyRaiServiceInterface.MyRaiServiceReference1.EnumWorkflowRichieste WorkFlow, MyRaiServiceInterface.MyRaiServiceReference1.EnumStatiRichiesta stato, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumTipoRicerca> Ricerca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetDettagliGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/GetDettagliGiornataResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.DettaglioGiornataResponse GetDettagliGiornata(System.DateTime data, string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetDettagliGiornata", ReplyAction="http://tempuri.org/IMyRaiService1/GetDettagliGiornataResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.DettaglioGiornataResponse> GetDettagliGiornataAsync(System.DateTime data, string matricola);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/getDipendentiPeriodo", ReplyAction="http://tempuri.org/IMyRaiService1/getDipendentiPeriodoResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetDipendentiResponse getDipendentiPeriodo(string matricola, string sedegapp, System.DateTime DataStart, System.DateTime DataEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/getDipendentiPeriodo", ReplyAction="http://tempuri.org/IMyRaiService1/getDipendentiPeriodoResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetDipendentiResponse> getDipendentiPeriodoAsync(string matricola, string sedegapp, System.DateTime DataStart, System.DateTime DataEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetDocumentoEccezione", ReplyAction="http://tempuri.org/IMyRaiService1/GetDocumentoEccezioneResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetDocumentoEccezioneResponse GetDocumentoEccezione(int IdDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetDocumentoEccezione", ReplyAction="http://tempuri.org/IMyRaiService1/GetDocumentoEccezioneResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetDocumentoEccezioneResponse> GetDocumentoEccezioneAsync(int IdDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetEccezioniAmmesse", ReplyAction="http://tempuri.org/IMyRaiService1/GetEccezioniAmmesseResponse")]
        MyRaiServiceInterface.MyRaiServiceReference1.GetEccezioniAmmesseResponse GetEccezioniAmmesse();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyRaiService1/GetEccezioniAmmesse", ReplyAction="http://tempuri.org/IMyRaiService1/GetEccezioniAmmesseResponse")]
        System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetEccezioniAmmesseResponse> GetEccezioniAmmesseAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyRaiService1Channel : EsecutoreTask.MyRaiServiceReference1.IMyRaiService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyRaiService1Client : System.ServiceModel.ClientBase<EsecutoreTask.MyRaiServiceReference1.IMyRaiService1>, EsecutoreTask.MyRaiServiceReference1.IMyRaiService1 {
        
        public MyRaiService1Client() {
        }
        
        public MyRaiService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyRaiService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyRaiService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyRaiService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.NuovaSedeGappSettimana SalvaGiornoInizioSettimanaSede(string codiceSedeGapp, System.Nullable<int> giornoInizio) {
            return base.Channel.SalvaGiornoInizioSettimanaSede(codiceSedeGapp, giornoInizio);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NuovaSedeGappSettimana> SalvaGiornoInizioSettimanaSedeAsync(string codiceSedeGapp, System.Nullable<int> giornoInizio) {
            return base.Channel.SalvaGiornoInizioSettimanaSedeAsync(codiceSedeGapp, giornoInizio);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioneGiornataResponse SetVisualizzazioneGiornata(string matricola, bool visualizzato, string matricolaVisualizzatore, string utenteVisualizzatore, System.DateTime dataRichiesta, System.Nullable<int> idRichiesta) {
            return base.Channel.SetVisualizzazioneGiornata(matricola, visualizzato, matricolaVisualizzatore, utenteVisualizzatore, dataRichiesta, idRichiesta);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioneGiornataResponse> SetVisualizzazioneGiornataAsync(string matricola, bool visualizzato, string matricolaVisualizzatore, string utenteVisualizzatore, System.DateTime dataRichiesta, System.Nullable<int> idRichiesta) {
            return base.Channel.SetVisualizzazioneGiornataAsync(matricola, visualizzato, matricolaVisualizzatore, utenteVisualizzatore, dataRichiesta, idRichiesta);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.InserisciNotaRichiestaResponse InserisciNotaRichiesta(string matricola, string nomeUtente, string nota, System.DateTime giornata, string sedeGapp, string destinatario, string tipoMittente) {
            return base.Channel.InserisciNotaRichiesta(matricola, nomeUtente, nota, giornata, sedeGapp, destinatario, tipoMittente);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.InserisciNotaRichiestaResponse> InserisciNotaRichiestaAsync(string matricola, string nomeUtente, string nota, System.DateTime giornata, string sedeGapp, string destinatario, string tipoMittente) {
            return base.Channel.InserisciNotaRichiestaAsync(matricola, nomeUtente, nota, giornata, sedeGapp, destinatario, tipoMittente);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.ModificaNotaRichiestaResponse ModificaNotaRichiesta(int idNota, string matricola, string nota, string tipoMittente) {
            return base.Channel.ModificaNotaRichiesta(idNota, matricola, nota, tipoMittente);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ModificaNotaRichiestaResponse> ModificaNotaRichiestaAsync(int idNota, string matricola, string nota, string tipoMittente) {
            return base.Channel.ModificaNotaRichiestaAsync(idNota, matricola, nota, tipoMittente);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.EliminaNotaRichiestaResponse EliminaNotaRichiesta(int idNota, string matricola) {
            return base.Channel.EliminaNotaRichiesta(idNota, matricola);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.EliminaNotaRichiestaResponse> EliminaNotaRichiestaAsync(int idNota, string matricola) {
            return base.Channel.EliminaNotaRichiestaAsync(idNota, matricola);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.SetLetturaResponse SetLettura(int idNota, string matricola, string nominativo, bool letta) {
            return base.Channel.SetLettura(idNota, matricola, nominativo, letta);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetLetturaResponse> SetLetturaAsync(int idNota, string matricola, string nominativo, bool letta) {
            return base.Channel.SetLetturaAsync(idNota, matricola, nominativo, letta);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetNotaRichiestaResponse GetNotaRichiesta(int idNota, string matricola) {
            return base.Channel.GetNotaRichiesta(idNota, matricola);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetNotaRichiestaResponse> GetNotaRichiestaAsync(int idNota, string matricola) {
            return base.Channel.GetNotaRichiestaAsync(idNota, matricola);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse GetNoteRichieste(string matricola, System.DateTime giornata) {
            return base.Channel.GetNoteRichieste(matricola, giornata);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse> GetNoteRichiesteAsync(string matricola, System.DateTime giornata) {
            return base.Channel.GetNoteRichiesteAsync(matricola, giornata);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse GetNoteRichiestePerSedeGapp(string matricola, string[] sedi, string destinatario) {
            return base.Channel.GetNoteRichiestePerSedeGapp(matricola, sedi, destinatario);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse> GetNoteRichiestePerSedeGappAsync(string matricola, string[] sedi, string destinatario) {
            return base.Channel.GetNoteRichiestePerSedeGappAsync(matricola, sedi, destinatario);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse GetNoteRichiestePerSedeGappFiltrata(string matricola, string[] sedi, string destinatario, bool onlyNonLette) {
            return base.Channel.GetNoteRichiestePerSedeGappFiltrata(matricola, sedi, destinatario, onlyNonLette);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetNoteRichiesteResponse> GetNoteRichiestePerSedeGappFiltrataAsync(string matricola, string[] sedi, string destinatario, bool onlyNonLette) {
            return base.Channel.GetNoteRichiestePerSedeGappFiltrataAsync(matricola, sedi, destinatario, onlyNonLette);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.Report_POH_ROH_Response GetReport_POH_ROH(string matricola, string sede, int mese, int anno) {
            return base.Channel.GetReport_POH_ROH(matricola, sede, mese, anno);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_POH_ROH_Response> GetReport_POH_ROHAsync(string matricola, string sede, int mese, int anno) {
            return base.Channel.GetReport_POH_ROHAsync(matricola, sede, mese, anno);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.Report_EccezioniGiornalisti_Response GetLista_Eccezioni_Giornalisti(string matricola, string sede, int mese, int anno) {
            return base.Channel.GetLista_Eccezioni_Giornalisti(matricola, sede, mese, anno);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_EccezioniGiornalisti_Response> GetLista_Eccezioni_GiornalistiAsync(string matricola, string sede, int mese, int anno) {
            return base.Channel.GetLista_Eccezioni_GiornalistiAsync(matricola, sede, mese, anno);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.Report_STSE_Response GetReport_STSE(string matricola, string sede, int mese, int anno, bool inizioMese) {
            return base.Channel.GetReport_STSE(matricola, sede, mese, anno, inizioMese);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_STSE_Response> GetReport_STSEAsync(string matricola, string sede, int mese, int anno, bool inizioMese) {
            return base.Channel.GetReport_STSEAsync(matricola, sede, mese, anno, inizioMese);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.Report_STR_STRF_Response GetReport_STR_STRF(string matricola, string sede, int mese, int anno) {
            return base.Channel.GetReport_STR_STRF(matricola, sede, mese, anno);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_STR_STRF_Response> GetReport_STR_STRFAsync(string matricola, string sede, int mese, int anno) {
            return base.Channel.GetReport_STR_STRFAsync(matricola, sede, mese, anno);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.Report_Reperibilita_Response GetReport_Reperibilita(string matricola, string sede, int mese, int anno) {
            return base.Channel.GetReport_Reperibilita(matricola, sede, mese, anno);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_Reperibilita_Response> GetReport_ReperibilitaAsync(string matricola, string sede, int mese, int anno) {
            return base.Channel.GetReport_ReperibilitaAsync(matricola, sede, mese, anno);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.Report_Carenza_MP_Response GetReport_Carenza_MP(string matricola, string sede, int mese, int anno, bool inizioMese) {
            return base.Channel.GetReport_Carenza_MP(matricola, sede, mese, anno, inizioMese);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Report_Carenza_MP_Response> GetReport_Carenza_MPAsync(string matricola, string sede, int mese, int anno, bool inizioMese) {
            return base.Channel.GetReport_Carenza_MPAsync(matricola, sede, mese, anno, inizioMese);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetServizioMensaResponse GetInfoMensa(string matricolaCaller, string matricola, System.DateTime giornata) {
            return base.Channel.GetInfoMensa(matricolaCaller, matricola, giornata);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetServizioMensaResponse> GetInfoMensaAsync(string matricolaCaller, string matricola, System.DateTime giornata) {
            return base.Channel.GetInfoMensaAsync(matricolaCaller, matricola, giornata);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetModuloDetassazioneResponse GetModuloDetassazione(string pMatricolaCaller, string matricolaDestinatario) {
            return base.Channel.GetModuloDetassazione(pMatricolaCaller, matricolaDestinatario);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetModuloDetassazioneResponse> GetModuloDetassazioneAsync(string pMatricolaCaller, string matricolaDestinatario) {
            return base.Channel.GetModuloDetassazioneAsync(pMatricolaCaller, matricolaDestinatario);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.SetSceltaDetassazioneResponse SetSceltaDetassazione(string pMatricolaCaller, string matricolaDestinatario, System.DateTime data, string modulo, int scelta) {
            return base.Channel.SetSceltaDetassazione(pMatricolaCaller, matricolaDestinatario, data, modulo, scelta);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetSceltaDetassazioneResponse> SetSceltaDetassazioneAsync(string pMatricolaCaller, string matricolaDestinatario, System.DateTime data, string modulo, int scelta) {
            return base.Channel.SetSceltaDetassazioneAsync(pMatricolaCaller, matricolaDestinatario, data, modulo, scelta);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.ResetModuloDetassazioneResponse ResetModuloDetassazione(string pMatricolaCaller, string matricolaDestinatario, string applicazione) {
            return base.Channel.ResetModuloDetassazione(pMatricolaCaller, matricolaDestinatario, applicazione);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ResetModuloDetassazioneResponse> ResetModuloDetassazioneAsync(string pMatricolaCaller, string matricolaDestinatario, string applicazione) {
            return base.Channel.ResetModuloDetassazioneAsync(pMatricolaCaller, matricolaDestinatario, applicazione);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.ConteggioGiorniConsecutivi_Response GetGiorniConsecutivi(string matricola, string sedeGapp, System.DateTime dataPartenza) {
            return base.Channel.GetGiorniConsecutivi(matricola, sedeGapp, dataPartenza);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ConteggioGiorniConsecutivi_Response> GetGiorniConsecutiviAsync(string matricola, string sedeGapp, System.DateTime dataPartenza) {
            return base.Channel.GetGiorniConsecutiviAsync(matricola, sedeGapp, dataPartenza);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.VersionResponse Version() {
            return base.Channel.Version();
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.VersionResponse> VersionAsync() {
            return base.Channel.VersionAsync();
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse GetApprovatoriProduzione(string matricola) {
            return base.Channel.GetApprovatoriProduzione(matricola);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse> GetApprovatoriProduzioneAsync(string matricola) {
            return base.Channel.GetApprovatoriProduzioneAsync(matricola);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.SetApprovatoreProduzioneResponse SetApprovatoreProduzione(string matricola, MyRaiServiceInterface.MyRaiServiceReference1.ApprovatoriProduzioneItem item, bool checkIfExists) {
            return base.Channel.SetApprovatoreProduzione(matricola, item, checkIfExists);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetApprovatoreProduzioneResponse> SetApprovatoreProduzioneAsync(string matricola, MyRaiServiceInterface.MyRaiServiceReference1.ApprovatoriProduzioneItem item, bool checkIfExists) {
            return base.Channel.SetApprovatoreProduzioneAsync(matricola, item, checkIfExists);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoreProduzioneResponse GetApprovatoriProduzioneByTitolo(string matricola, string titolo) {
            return base.Channel.GetApprovatoriProduzioneByTitolo(matricola, titolo);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoreProduzioneResponse> GetApprovatoriProduzioneByTitoloAsync(string matricola, string titolo) {
            return base.Channel.GetApprovatoriProduzioneByTitoloAsync(matricola, titolo);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse GetProduzioniByApprovatore(string matricola, string matricolaApprovatore) {
            return base.Channel.GetProduzioniByApprovatore(matricola, matricolaApprovatore);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetApprovatoriProduzioneResponse> GetProduzioniByApprovatoreAsync(string matricola, string matricolaApprovatore) {
            return base.Channel.GetProduzioniByApprovatoreAsync(matricola, matricolaApprovatore);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.ServiceResponseBase DeleteApprovatoreProduzione(string matricola, MyRaiServiceInterface.MyRaiServiceReference1.ApprovatoriProduzioneItem item) {
            return base.Channel.DeleteApprovatoreProduzione(matricola, item);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ServiceResponseBase> DeleteApprovatoreProduzioneAsync(string matricola, MyRaiServiceInterface.MyRaiServiceReference1.ApprovatoriProduzioneItem item) {
            return base.Channel.DeleteApprovatoreProduzioneAsync(matricola, item);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetContatoriEccezioniResponse GetContatoriEccezioni(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string[] eccezioni) {
            return base.Channel.GetContatoriEccezioni(matricola, DataStart, DataEnd, eccezioni);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetContatoriEccezioniResponse> GetContatoriEccezioniAsync(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string[] eccezioni) {
            return base.Channel.GetContatoriEccezioniAsync(matricola, DataStart, DataEnd, eccezioni);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetPianoFeriePDFResponse GetPianoFeriePDF(string sede, int anno) {
            return base.Channel.GetPianoFeriePDF(sede, anno);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetPianoFeriePDFResponse> GetPianoFeriePDFAsync(string sede, int anno) {
            return base.Channel.GetPianoFeriePDFAsync(sede, anno);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetPianoFerieAnnoResponse GetPianoFerieAnno(string sede, int anno, bool soloStato) {
            return base.Channel.GetPianoFerieAnno(sede, anno, soloStato);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetPianoFerieAnnoResponse> GetPianoFerieAnnoAsync(string sede, int anno, bool soloStato) {
            return base.Channel.GetPianoFerieAnnoAsync(sede, anno, soloStato);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.ProvvedimentiCauseResponse GetProvvedimentiCause(string MatricolaChiamante, string MatricolaOggetto) {
            return base.Channel.GetProvvedimentiCause(MatricolaChiamante, MatricolaOggetto);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ProvvedimentiCauseResponse> GetProvvedimentiCauseAsync(string MatricolaChiamante, string MatricolaOggetto) {
            return base.Channel.GetProvvedimentiCauseAsync(MatricolaChiamante, MatricolaOggetto);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetEccezioniComplessiveResponse GetEccezioniComplessive() {
            return base.Channel.GetEccezioniComplessive();
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetEccezioniComplessiveResponse> GetEccezioniComplessiveAsync() {
            return base.Channel.GetEccezioniComplessiveAsync();
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioniGiornataResponse_Elenco GetElencoVisualizzazioneGiornata(string matricola, System.DateTime dataDa, System.DateTime dataA, System.Nullable<bool> visualizzati) {
            return base.Channel.GetElencoVisualizzazioneGiornata(matricola, dataDa, dataA, visualizzati);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioniGiornataResponse_Elenco> GetElencoVisualizzazioneGiornataAsync(string matricola, System.DateTime dataDa, System.DateTime dataA, System.Nullable<bool> visualizzati) {
            return base.Channel.GetElencoVisualizzazioneGiornataAsync(matricola, dataDa, dataA, visualizzati);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.StatoEccezioniGiornateResponse GetStatoEccezioniGiornate(string matricola, System.DateTime dataDa, System.DateTime dataA) {
            return base.Channel.GetStatoEccezioniGiornate(matricola, dataDa, dataA);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.StatoEccezioniGiornateResponse> GetStatoEccezioniGiornateAsync(string matricola, System.DateTime dataDa, System.DateTime dataA) {
            return base.Channel.GetStatoEccezioniGiornateAsync(matricola, dataDa, dataA);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetFerieResponse GetFerie(string matricola, string anno) {
            return base.Channel.GetFerie(matricola, anno);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetFerieResponse> GetFerieAsync(string matricola, string anno) {
            return base.Channel.GetFerieAsync(matricola, anno);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetInfoDipendenteResponse GetInformazioniDipendente(string matricola, bool soloValide) {
            return base.Channel.GetInformazioniDipendente(matricola, soloValide);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetInfoDipendenteResponse> GetInformazioniDipendenteAsync(string matricola, bool soloValide) {
            return base.Channel.GetInformazioniDipendenteAsync(matricola, soloValide);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetSettimanaSedi GetListaSediGappSettimana(string[] codiciSede) {
            return base.Channel.GetListaSediGappSettimana(codiciSede);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetSettimanaSedi> GetListaSediGappSettimanaAsync(string[] codiciSede) {
            return base.Channel.GetListaSediGappSettimanaAsync(codiciSede);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.NotaSegreteriaResponse GetNoteSegreteria(string matricola, System.DateTime data) {
            return base.Channel.GetNoteSegreteria(matricola, data);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NotaSegreteriaResponse> GetNoteSegreteriaAsync(string matricola, System.DateTime data) {
            return base.Channel.GetNoteSegreteriaAsync(matricola, data);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.NotaSegreteriaResponse GetNoteSegreteriaPerData(System.DateTime data) {
            return base.Channel.GetNoteSegreteriaPerData(data);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NotaSegreteriaResponse> GetNoteSegreteriaPerDataAsync(System.DateTime data) {
            return base.Channel.GetNoteSegreteriaPerDataAsync(data);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.getOrarioResponse getOrario(string codiceOrario, string data, string matricola, string options, int livelloUtente) {
            return base.Channel.getOrario(codiceOrario, data, matricola, options, livelloUtente);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.getOrarioResponse> getOrarioAsync(string codiceOrario, string data, string matricola, string options, int livelloUtente) {
            return base.Channel.getOrarioAsync(codiceOrario, data, matricola, options, livelloUtente);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.Riepilogo GetRiepilogo(string[] SediGapp, System.Nullable<System.DateTime> DataInizio, System.Nullable<System.DateTime> DataFine, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumWorkflowRichieste> WorkFlow, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumTipoRicerca> Ricerca) {
            return base.Channel.GetRiepilogo(SediGapp, DataInizio, DataFine, WorkFlow, Ricerca);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.Riepilogo> GetRiepilogoAsync(string[] SediGapp, System.Nullable<System.DateTime> DataInizio, System.Nullable<System.DateTime> DataFine, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumWorkflowRichieste> WorkFlow, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumTipoRicerca> Ricerca) {
            return base.Channel.GetRiepilogoAsync(SediGapp, DataInizio, DataFine, WorkFlow, Ricerca);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetSchedaPresenzeMeseResponse GetSchedaPresenzeMese(string matricola, System.DateTime dstart, System.DateTime dend) {
            return base.Channel.GetSchedaPresenzeMese(matricola, dstart, dend);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetSchedaPresenzeMeseResponse> GetSchedaPresenzeMeseAsync(string matricola, System.DateTime dstart, System.DateTime dend) {
            return base.Channel.GetSchedaPresenzeMeseAsync(matricola, dstart, dend);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.SituazioneDebitoriaResponse GetSituazioneDebitoria(string matricolaRichiedente, string matricolaRichiesta) {
            return base.Channel.GetSituazioneDebitoria(matricolaRichiedente, matricolaRichiesta);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SituazioneDebitoriaResponse> GetSituazioneDebitoriaAsync(string matricolaRichiedente, string matricolaRichiesta) {
            return base.Channel.GetSituazioneDebitoriaAsync(matricolaRichiedente, matricolaRichiesta);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.DatiStorno[] GetStorni(string[] ndoc) {
            return base.Channel.GetStorni(ndoc);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.DatiStorno[]> GetStorniAsync(string[] ndoc) {
            return base.Channel.GetStorniAsync(ndoc);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetTimbratureMeseResponse GetTimbratureMese(string matricola, System.DateTime dstart, System.DateTime dend) {
            return base.Channel.GetTimbratureMese(matricola, dstart, dend);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetTimbratureMeseResponse> GetTimbratureMeseAsync(string matricola, System.DateTime dstart, System.DateTime dend) {
            return base.Channel.GetTimbratureMeseAsync(matricola, dstart, dend);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetTipologieInfoDipendenteResponse GetTipiInfoDipendente() {
            return base.Channel.GetTipiInfoDipendente();
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetTipologieInfoDipendenteResponse> GetTipiInfoDipendenteAsync() {
            return base.Channel.GetTipiInfoDipendenteAsync();
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.TrasferteResponse GetTrasferte(string matricolaRichiedente) {
            return base.Channel.GetTrasferte(matricolaRichiedente);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.TrasferteResponse> GetTrasferteAsync(string matricolaRichiedente) {
            return base.Channel.GetTrasferteAsync(matricolaRichiedente);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioneGiornataResponse GetVisualizzazioneGiornata(string matricola, System.DateTime data, System.Nullable<bool> visualizzato) {
            return base.Channel.GetVisualizzazioneGiornata(matricola, data, visualizzato);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.VisualizzazioneGiornataResponse> GetVisualizzazioneGiornataAsync(string matricola, System.DateTime data, System.Nullable<bool> visualizzato) {
            return base.Channel.GetVisualizzazioneGiornataAsync(matricola, data, visualizzato);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.InserisciNotaSegreteriaResponse InserisciNotaSegreteria(string matricola, System.DateTime data, string codice, System.Nullable<System.DateTime> dalle, System.Nullable<System.DateTime> alle, string motivo, string nota) {
            return base.Channel.InserisciNotaSegreteria(matricola, data, codice, dalle, alle, motivo, nota);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.InserisciNotaSegreteriaResponse> InserisciNotaSegreteriaAsync(string matricola, System.DateTime data, string codice, System.Nullable<System.DateTime> dalle, System.Nullable<System.DateTime> alle, string motivo, string nota) {
            return base.Channel.InserisciNotaSegreteriaAsync(matricola, data, codice, dalle, alle, motivo, nota);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitypresenzeGiornaliere_resp presenzeGiornaliere(string matricola, string sedegapp, string data) {
            return base.Channel.presenzeGiornaliere(matricola, sedegapp, data);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitypresenzeGiornaliere_resp> presenzeGiornaliereAsync(string matricola, string sedegapp, string data) {
            return base.Channel.presenzeGiornaliereAsync(matricola, sedegapp, data);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitypresenzeSettimanali_resp PresenzeSettimanali(string matricola, string dataDa, string dataA) {
            return base.Channel.PresenzeSettimanali(matricola, dataDa, dataA);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitypresenzeSettimanali_resp> PresenzeSettimanaliAsync(string matricola, string dataDa, string dataA) {
            return base.Channel.PresenzeSettimanaliAsync(matricola, dataDa, dataA);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.RecuperaPdfResponse recuperaPdf(string sedeGapp, System.DateTime data, System.Nullable<int> id) {
            return base.Channel.recuperaPdf(sedeGapp, data, id);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.RecuperaPdfResponse> recuperaPdfAsync(string sedeGapp, System.DateTime data, System.Nullable<int> id) {
            return base.Channel.recuperaPdfAsync(sedeGapp, data, id);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitydipendente_resp recuperaUtente(string matricola, string data) {
            return base.Channel.recuperaUtente(matricola, data);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.wApiUtilitydipendente_resp> recuperaUtenteAsync(string matricola, string data) {
            return base.Channel.recuperaUtenteAsync(matricola, data);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.RigeneraPdfResponse RigeneraPDF(System.DateTime dstart, System.DateTime dend, string matricola, string nominativo, string sedeGapp, int livelloUtente) {
            return base.Channel.RigeneraPDF(dstart, dend, matricola, nominativo, sedeGapp, livelloUtente);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.RigeneraPdfResponse> RigeneraPDFAsync(System.DateTime dstart, System.DateTime dend, string matricola, string nominativo, string sedeGapp, int livelloUtente) {
            return base.Channel.RigeneraPDFAsync(dstart, dend, matricola, nominativo, sedeGapp, livelloUtente);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.RigeneraPdfResponse RigeneraPDFpresenze(System.DateTime dstart, System.DateTime dend, string matricola, string nominativo, string sedeGapp, int livelloUtente) {
            return base.Channel.RigeneraPDFpresenze(dstart, dend, matricola, nominativo, sedeGapp, livelloUtente);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.RigeneraPdfResponse> RigeneraPDFpresenzeAsync(System.DateTime dstart, System.DateTime dend, string matricola, string nominativo, string sedeGapp, int livelloUtente) {
            return base.Channel.RigeneraPDFpresenzeAsync(dstart, dend, matricola, nominativo, sedeGapp, livelloUtente);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.RimuoviNotaSegreteriaResponse RimuoviNotaSegreteria(int id) {
            return base.Channel.RimuoviNotaSegreteria(id);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.RimuoviNotaSegreteriaResponse> RimuoviNotaSegreteriaAsync(int id) {
            return base.Channel.RimuoviNotaSegreteriaAsync(id);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.CodiceFiscaleReponse GetCodiceFiscaleInfo(string cf, string matricolaOperatore) {
            return base.Channel.GetCodiceFiscaleInfo(cf, matricolaOperatore);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.CodiceFiscaleReponse> GetCodiceFiscaleInfoAsync(string cf, string matricolaOperatore) {
            return base.Channel.GetCodiceFiscaleInfoAsync(cf, matricolaOperatore);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.SetPagamentoEccezioneResponse SetPagamentoEccezione(string matricolaOperatore, System.DateTime dataEccezione, string matricola, System.DateTime dataPagamento, string eccezione, string numdoc) {
            return base.Channel.SetPagamentoEccezione(matricolaOperatore, dataEccezione, matricola, dataPagamento, eccezione, numdoc);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetPagamentoEccezioneResponse> SetPagamentoEccezioneAsync(string matricolaOperatore, System.DateTime dataEccezione, string matricola, System.DateTime dataPagamento, string eccezione, string numdoc) {
            return base.Channel.SetPagamentoEccezioneAsync(matricolaOperatore, dataEccezione, matricola, dataPagamento, eccezione, numdoc);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.SetStatoEccezioneResponse SetStatoEccezione(string matricolaOperatore, System.DateTime D, string matricola, string numdoc, string eccezione, string stato) {
            return base.Channel.SetStatoEccezione(matricolaOperatore, D, matricola, numdoc, eccezione, stato);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetStatoEccezioneResponse> SetStatoEccezioneAsync(string matricolaOperatore, System.DateTime D, string matricola, string numdoc, string eccezione, string stato) {
            return base.Channel.SetStatoEccezioneAsync(matricolaOperatore, D, matricola, numdoc, eccezione, stato);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetRuoliResponse GetRuoli(string matricola, System.DateTime DataStart, string tipologia) {
            return base.Channel.GetRuoli(matricola, DataStart, tipologia);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetRuoliResponse> GetRuoliAsync(string matricola, System.DateTime DataStart, string tipologia) {
            return base.Channel.GetRuoliAsync(matricola, DataStart, tipologia);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.ResocontiResponse ClearCacheResoconti(MyRaiServiceInterface.MyRaiServiceReference1.SedeData[] SediData) {
            return base.Channel.ClearCacheResoconti(SediData);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ResocontiResponse> ClearCacheResocontiAsync(MyRaiServiceInterface.MyRaiServiceReference1.SedeData[] SediData) {
            return base.Channel.ClearCacheResocontiAsync(SediData);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetRipianificazioniMatricolaResponse GetRipianificazioniMatricola(string matricola, System.DateTime DataInizio, System.DateTime DataFine) {
            return base.Channel.GetRipianificazioniMatricola(matricola, DataInizio, DataFine);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetRipianificazioniMatricolaResponse> GetRipianificazioniMatricolaAsync(string matricola, System.DateTime DataInizio, System.DateTime DataFine) {
            return base.Channel.GetRipianificazioniMatricolaAsync(matricola, DataInizio, DataFine);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.PeriodoSW[] GetPeriodiSW(string matricola) {
            return base.Channel.GetPeriodiSW(matricola);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.PeriodoSW[]> GetPeriodiSWAsync(string matricola) {
            return base.Channel.GetPeriodiSWAsync(matricola);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.InviaPianoFerieResponse InviaPianoFerie(string matricolaDipendente, int anno, string sedegapp, string rep, string matricolaOperatore, string notaSegreteria) {
            return base.Channel.InviaPianoFerie(matricolaDipendente, anno, sedegapp, rep, matricolaOperatore, notaSegreteria);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.InviaPianoFerieResponse> InviaPianoFerieAsync(string matricolaDipendente, int anno, string sedegapp, string rep, string matricolaOperatore, string notaSegreteria) {
            return base.Channel.InviaPianoFerieAsync(matricolaDipendente, anno, sedegapp, rep, matricolaOperatore, notaSegreteria);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.SetRuoloResponse SetRuolo(string matricola, string dataMese, string sede) {
            return base.Channel.SetRuolo(matricola, dataMese, sede);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SetRuoloResponse> SetRuoloAsync(string matricola, string dataMese, string sede) {
            return base.Channel.SetRuoloAsync(matricola, dataMese, sede);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.ResocontiResponse RiCreaResoconti(MyRaiServiceInterface.MyRaiServiceReference1.SedeData[] SediData) {
            return base.Channel.RiCreaResoconti(SediData);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.ResocontiResponse> RiCreaResocontiAsync(MyRaiServiceInterface.MyRaiServiceReference1.SedeData[] SediData) {
            return base.Channel.RiCreaResocontiAsync(SediData);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetRipianificazioniResponse GetRipianificazioni(string[] SediGapp, System.DateTime DataInizio, System.DateTime DataFine) {
            return base.Channel.GetRipianificazioni(SediGapp, DataInizio, DataFine);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetRipianificazioniResponse> GetRipianificazioniAsync(string[] SediGapp, System.DateTime DataInizio, System.DateTime DataFine) {
            return base.Channel.GetRipianificazioniAsync(SediGapp, DataInizio, DataFine);
        }
        
        public string[] GetEccezioniRicalcolate() {
            return base.Channel.GetEccezioniRicalcolate();
        }
        
        public System.Threading.Tasks.Task<string[]> GetEccezioniRicalcolateAsync() {
            return base.Channel.GetEccezioniRicalcolateAsync();
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.SbloccaEccezioniResponse SbloccaEccezione(string MatricolaSegreteria, string MatricolaDipendente, System.DateTime Data, string Eccezione, string Motivo) {
            return base.Channel.SbloccaEccezione(MatricolaSegreteria, MatricolaDipendente, Data, Eccezione, Motivo);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.SbloccaEccezioniResponse> SbloccaEccezioneAsync(string MatricolaSegreteria, string MatricolaDipendente, System.DateTime Data, string Eccezione, string Motivo) {
            return base.Channel.SbloccaEccezioneAsync(MatricolaSegreteria, MatricolaDipendente, Data, Eccezione, Motivo);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.AggiornaNotaSegreteriaResponse AggiornaNotaSegreteria(int id, string matricola, System.DateTime data, string codice, System.Nullable<System.DateTime> dalle, System.Nullable<System.DateTime> alle, string motivo, string nota) {
            return base.Channel.AggiornaNotaSegreteria(id, matricola, data, codice, dalle, alle, motivo, nota);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.AggiornaNotaSegreteriaResponse> AggiornaNotaSegreteriaAsync(int id, string matricola, System.DateTime data, string codice, System.Nullable<System.DateTime> dalle, System.Nullable<System.DateTime> alle, string motivo, string nota) {
            return base.Channel.AggiornaNotaSegreteriaAsync(id, matricola, data, codice, dalle, alle, motivo, nota);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.AllineaGiornataResponse AllineaGiornata(System.DateTime date, string matricola) {
            return base.Channel.AllineaGiornata(date, matricola);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.AllineaGiornataResponse> AllineaGiornataAsync(System.DateTime date, string matricola) {
            return base.Channel.AllineaGiornataAsync(date, matricola);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.CambiaInfoDipendenteResponse cambiaInformazioniDipendente(string matricola, string valoreInfo, System.Nullable<System.DateTime> dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, int idTipoInformazione, string noteInfo) {
            return base.Channel.cambiaInformazioniDipendente(matricola, valoreInfo, dataInizioValidita, dataFineValidita, idTipoInformazione, noteInfo);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.CambiaInfoDipendenteResponse> cambiaInformazioniDipendenteAsync(string matricola, string valoreInfo, System.Nullable<System.DateTime> dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, int idTipoInformazione, string noteInfo) {
            return base.Channel.cambiaInformazioniDipendenteAsync(matricola, valoreInfo, dataInizioValidita, dataFineValidita, idTipoInformazione, noteInfo);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.CambiaStatoResponse CambiaStato(int IdRichiesta, MyRaiServiceInterface.MyRaiServiceReference1.EnumStatiRichiesta stato, string matricola, string nota) {
            return base.Channel.CambiaStato(IdRichiesta, stato, matricola, nota);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.CambiaStatoResponse> CambiaStatoAsync(int IdRichiesta, MyRaiServiceInterface.MyRaiServiceReference1.EnumStatiRichiesta stato, string matricola, string nota) {
            return base.Channel.CambiaStatoAsync(IdRichiesta, stato, matricola, nota);
        }
        
        public string ComunicaCICS(string S) {
            return base.Channel.ComunicaCICS(S);
        }
        
        public System.Threading.Tasks.Task<string> ComunicaCICSAsync(string S) {
            return base.Channel.ComunicaCICSAsync(S);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.NuoveInfoDipendenteResponse creaNuovaInfoDipendente(string matricola, int idTipoInfoDipendente, string valoreInfo, System.DateTime dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, string noteInfo) {
            return base.Channel.creaNuovaInfoDipendente(matricola, idTipoInfoDipendente, valoreInfo, dataInizioValidita, dataFineValidita, noteInfo);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NuoveInfoDipendenteResponse> creaNuovaInfoDipendenteAsync(string matricola, int idTipoInfoDipendente, string valoreInfo, System.DateTime dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, string noteInfo) {
            return base.Channel.creaNuovaInfoDipendenteAsync(matricola, idTipoInfoDipendente, valoreInfo, dataInizioValidita, dataFineValidita, noteInfo);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.NuovaTipologiaInfoDipendente creaNuovaTipologiaInfoDipendente(string nomeTipologia, System.DateTime dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, string noteTipo, string tipoValore) {
            return base.Channel.creaNuovaTipologiaInfoDipendente(nomeTipologia, dataInizioValidita, dataFineValidita, noteTipo, tipoValore);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.NuovaTipologiaInfoDipendente> creaNuovaTipologiaInfoDipendenteAsync(string nomeTipologia, System.DateTime dataInizioValidita, System.Nullable<System.DateTime> dataFineValidita, string noteTipo, string tipoValore) {
            return base.Channel.creaNuovaTipologiaInfoDipendenteAsync(nomeTipologia, dataInizioValidita, dataFineValidita, noteTipo, tipoValore);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.EliminaInfoDipendenteResponse EliminaInfoDipendente(string matricola, int idTipologiaInformazione) {
            return base.Channel.EliminaInfoDipendente(matricola, idTipologiaInformazione);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.EliminaInfoDipendenteResponse> EliminaInfoDipendenteAsync(string matricola, int idTipologiaInformazione) {
            return base.Channel.EliminaInfoDipendenteAsync(matricola, idTipologiaInformazione);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetAnalisiEccezioniResponse GetAnalisiEccezioni(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string eccezione1, string eccezione2, string eccezione3) {
            return base.Channel.GetAnalisiEccezioni(matricola, DataStart, DataEnd, eccezione1, eccezione2, eccezione3);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetAnalisiEccezioniResponse> GetAnalisiEccezioniAsync(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string eccezione1, string eccezione2, string eccezione3) {
            return base.Channel.GetAnalisiEccezioniAsync(matricola, DataStart, DataEnd, eccezione1, eccezione2, eccezione3);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetAnalisiEccezioniResponse GetAnalisiEccezioni2(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string eccezione1, string eccezione2, string eccezione3) {
            return base.Channel.GetAnalisiEccezioni2(matricola, DataStart, DataEnd, eccezione1, eccezione2, eccezione3);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetAnalisiEccezioniResponse> GetAnalisiEccezioni2Async(string matricola, System.DateTime DataStart, System.DateTime DataEnd, string eccezione1, string eccezione2, string eccezione3) {
            return base.Channel.GetAnalisiEccezioni2Async(matricola, DataStart, DataEnd, eccezione1, eccezione2, eccezione3);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.DettaglioRichiesta[] GetDettagli(string[] SediGapp, System.DateTime DataInizio, System.DateTime DataFine, MyRaiServiceInterface.MyRaiServiceReference1.EnumWorkflowRichieste WorkFlow, MyRaiServiceInterface.MyRaiServiceReference1.EnumStatiRichiesta stato, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumTipoRicerca> Ricerca) {
            return base.Channel.GetDettagli(SediGapp, DataInizio, DataFine, WorkFlow, stato, Ricerca);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.DettaglioRichiesta[]> GetDettagliAsync(string[] SediGapp, System.DateTime DataInizio, System.DateTime DataFine, MyRaiServiceInterface.MyRaiServiceReference1.EnumWorkflowRichieste WorkFlow, MyRaiServiceInterface.MyRaiServiceReference1.EnumStatiRichiesta stato, System.Nullable<MyRaiServiceInterface.MyRaiServiceReference1.EnumTipoRicerca> Ricerca) {
            return base.Channel.GetDettagliAsync(SediGapp, DataInizio, DataFine, WorkFlow, stato, Ricerca);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.DettaglioGiornataResponse GetDettagliGiornata(System.DateTime data, string matricola) {
            return base.Channel.GetDettagliGiornata(data, matricola);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.DettaglioGiornataResponse> GetDettagliGiornataAsync(System.DateTime data, string matricola) {
            return base.Channel.GetDettagliGiornataAsync(data, matricola);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetDipendentiResponse getDipendentiPeriodo(string matricola, string sedegapp, System.DateTime DataStart, System.DateTime DataEnd) {
            return base.Channel.getDipendentiPeriodo(matricola, sedegapp, DataStart, DataEnd);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetDipendentiResponse> getDipendentiPeriodoAsync(string matricola, string sedegapp, System.DateTime DataStart, System.DateTime DataEnd) {
            return base.Channel.getDipendentiPeriodoAsync(matricola, sedegapp, DataStart, DataEnd);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetDocumentoEccezioneResponse GetDocumentoEccezione(int IdDocumento) {
            return base.Channel.GetDocumentoEccezione(IdDocumento);
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetDocumentoEccezioneResponse> GetDocumentoEccezioneAsync(int IdDocumento) {
            return base.Channel.GetDocumentoEccezioneAsync(IdDocumento);
        }
        
        public MyRaiServiceInterface.MyRaiServiceReference1.GetEccezioniAmmesseResponse GetEccezioniAmmesse() {
            return base.Channel.GetEccezioniAmmesse();
        }
        
        public System.Threading.Tasks.Task<MyRaiServiceInterface.MyRaiServiceReference1.GetEccezioniAmmesseResponse> GetEccezioniAmmesseAsync() {
            return base.Channel.GetEccezioniAmmesseAsync();
        }
    }
}
