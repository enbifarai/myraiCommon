@using myRaiHelper;
@model myRaiCommonModel.cvModels.cvModel.Experiences
@{
    myRai.Data.CurriculumVitae.cv_ModelEntities cvEnt = new myRai.Data.CurriculumVitae.cv_ModelEntities();
    string dtaInizio, dtaFine;
    string tmpInizio, tmpFine;
    string isGiornalista;
    int c_tmp;

    isGiornalista = Model._isGiornalista;
}

@using (Html.BeginModal("Modifica esperienza Rai"))
{
    using (Html.BeginForm("ModificaExperiences", "CV_Online", FormMethod.Post, new { id = "form-modificaExperiences" }))
    {
        @Html.HiddenFor(x => x._matricola)
        @Html.HiddenFor(x => x._prog)
        <input type="hidden" name="_flagEspRai" value="@Model._flagEspRai" />

        using (Html.BeginPanel(PanelType.Panel, "Dettagli esperienza", false))
        {
            <div class="rai form-group">
                <div class="row">
                    <div class="col-md-6">
                        <div class="col-md-12  no-padding">
                            <label class="titleElements rai-caption">Dal <span class="campoObbligatorio">*</span></label>
                        </div>
                        <div class="col-md-4  push-10 day-box">
                            <select id="_giornoInizio" name="_giornoInizio" class="rai form-control">
                                @foreach (var item in Model.GetGiorni())
                                {
                                    <option value="@item.Value" @if (Model._giornoInizio != null && Model._giornoInizio.ToString() == item.Value) { @: selected
                                            }>
                                        @item.Text
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4  push-10 month-box">
                            <select id="_meseInizio" name="_meseInizio" class="rai form-control">
                                @foreach (var item in Model.GetMesi())
                                {
                                    <option value="@item.Value" @if (Model._meseInizio != null && Model._meseInizio.ToString() == item.Value) { @: selected
                                            }>
                                        @item.Text
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4  push-10 year-box">
                            <input type="text" placeholder="Anno" class="js-datetimepicker rai form-control  start required-min"
                                   data-format="YYYY" data-locale="it" id="_annoInizio" name="_annoInizio" value="@Model._annoInizio" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12 no-padding">
                            <label class="titleElements rai-caption">Al <span class="campoObbligatorio">*</span></label>
                        </div>
                        <div class="col-md-4  push-10 day-box">
                            <select id="_giornoFine" name="_giornoFine" class="rai form-control">
                                @foreach (var item in Model.GetGiorni())
                                {
                                    <option value="@item.Value" @if (Model._giornoFine != null && Model._giornoFine.ToString() == item.Value) { @: selected
                                            }>
                                        @item.Text
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4  push-10 month-box">
                            <select id="_meseFine" name="_meseFine" class="rai form-control">
                                @foreach (var item in Model.GetMesi())
                                {
                                    <option value="@item.Value" @if (Model._meseFine != null && Model._meseFine.ToString() == item.Value) { @: selected
                                            }>
                                        @item.Text
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4  push-10 year-box">
                            <input type="text" placeholder="Anno" class="js-datetimepicker rai form-control  start required-min"
                                   data-format="YYYY" data-locale="it" id="_annoFine" name="_annoFine" value="@Model._annoFine" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 push-10">
                        @Html.LabelForRequiredObbl(model => model._codiceFiguraProf, "Figura professionale", new { @class = "titleElements rai-caption requiredobbl" })
                        @{
                            List<SelectListItem> item_select_figpro = new List<SelectListItem>();
                            foreach (var elem in Model.ListeFigureRai.OrderByDescending(x => x.DTA_INIZIO))
                            {
                                item_select_figpro.Add(new SelectListItem()
                                {
                                    Value = elem.CodiceFiguraPro,
                                    Text = elem.DescriFiguraPro
                                });
                            }
                            //(IEnumerable<SelectListItem>)cvEnt.VDFiguraProfCV.OrderBy(x => x.Descrizione).Select(x => new SelectListItem() { Value = x.Codice, Text = x.Descrizione })
                        }
                        @Html.DropDownList("_codiceFiguraProf", item_select_figpro, string.Empty, new
                   {
                       @id = "_codiceFiguraProf",
                       @class = "js-select2 rai form-control ",
                       @style = "width: 100%",
                       @data_minimum_results_for_search = "Infinity"
                   })
                        @Html.ValidationMessageFor(model => model._codiceFiguraProf)



                    </div>

                    <div class="col-md-12 push-10">
                        <input type="hidden" id="_societa" name="_societa" value="@Model._societa" />

                        @Html.LabelForRequiredObbl(model => model._codSocieta, "Società del gruppo", new { @class = "titleElements rai-caption requiredobbl" })
                        @{
                            List<SelectListItem> item_select_societa = new List<SelectListItem>();
                            foreach (var elem in cvEnt.VDSocieta.OrderBy(x => x.Descrizione))
                            {
                                item_select_societa.Add(new SelectListItem()
                                {
                                    Value = elem.Codice,
                                    Text = elem.Descrizione
                                });
                            }
                            if (Model._codSocieta == "-1")
                            {
                                item_select_societa.Add(new SelectListItem()
                                {
                                    Value = Model._codSocieta,
                                    Text = Model._societa
                                });

                            }
                            //(IEnumerable<SelectListItem>)cvEnt.VDSocieta.OrderBy(x => x.Descrizione).Select(x => new SelectListItem() { Value = x.Codice, Text = x.Descrizione })
                        }
                        @Html.DropDownList("_codSocieta", item_select_societa, string.Empty, new { @id = "_codSocieta", @class = "js-select2 rai form-control  textable-select", @style = "width: 100%" })
                        @Html.ValidationMessageFor(model => model._codSocieta)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 push-10">
                        <input type="hidden" id="_direzione" name="_direzione" value="@Model._direzione" />
                        @Html.LabelForRequiredObbl(model => model._codDirezione, "Direzione", new { @class = "titleElements rai-caption requiredobbl" })
                        @{
                            List<SelectListItem> item_select_direzione = new List<SelectListItem>();
                            foreach (var elem in cvEnt.VDServizioCV.OrderBy(x => x.Descrizione))
                            {
                                item_select_direzione.Add(new SelectListItem()
                                {
                                    Value = elem.Codice,
                                    Text = elem.Descrizione
                                });
                            }
                            if (Model._codDirezione == "-1")
                            {
                                item_select_direzione.Add(new SelectListItem()
                                {
                                    Value = Model._codDirezione,
                                    Text = Model._direzione
                                });

                            }
                            //(IEnumerable<SelectListItem>)cvEnt.VDServizioCV.OrderBy(x => x.Descrizione).Select(x => new SelectListItem() { Value = x.Codice, Text = x.Descrizione })
                        }
                        @Html.DropDownList("_codDirezione", item_select_direzione, string.Empty, new
                   {
                       @id = "_codDirezione",
                       @class = "js-select2 rai form-control  textable-select",
                       @style = "width: 100%"
                   })
                        @Html.ValidationMessageFor(model => model._codDirezione)
                    </div>

                    @if (isGiornalista == "1")
                    {
                        <div class="col-md-12 push-10">
                            <label for="_codRedazione" class="titleElements rai-caption">Redazione</label>
                            <select class="js-select2 rai form-control input-validation-error " data-val="true" data-val-required="Campo obbligatorio" id="_codRedazione" name="_codRedazione" style="width: 100%">
                                <option></option>
                                @{
                                    var redazione = cvEnt.DRedazione;
                                    foreach (var elem in redazione)
                                    {
                                        string check = "";
                                        if (Model._codRedazione == elem.CodRedazione)
                                        {
                                            check = "selected=\"selected\"";
                                        }
                                        <option value="@elem.CodRedazione" @check>@(elem.DesRedazione)</option>
                                    }
                                }
                            </select>
                            @Html.ValidationMessageFor(x => x._codRedazione)
                        </div>
                    }

                    <div class="col-md-6 push-10">
                        <input type="hidden" id="_localitaEsp" name="_localitaEsp" value="@Model._localitaEsp" />
                        <label for="_codLocalitaEsp" class="titleElements rai-caption">Città</label>
                        <select class="js-select2 rai form-control textable-select" id="_codLocalitaEsp" name="_codLocalitaEsp" style="width: 100%">
                            <option></option>
                            @{
                                var localita = cvEnt.DTabellaCV.Where(x => x.NomeTabella == "LocalitaEsp").OrderBy(y => y.Ordine).ToList();
                                foreach (var elem in localita)
                                {
                                    string check = "";
                                    if (Model._codLocalitaEsp == elem.Codice)
                                    {
                                        check = "selected=\"selected\"";
                                    }
                                    <option value="@elem.Codice" @check>@(elem.Descrizione)</option>
                                }
                                if (Model._codLocalitaEsp == "-1")
                                {
                                    string check = "selected=\"selected\"";
                                    <option value="@Model._codLocalitaEsp" @check>@(Model._localitaEsp)</option>
                                }
                            }
                        </select>
                        @*<input type="text" class="rai form-control " id="_localitaEsp" name="_localitaEsp" style="width: 100%" placeholder="Inserisci a testo libero" value="@Model._localitaEsp"/>*@
                    </div>


                    <div class="col-md-6 push-10">
                        <label for="_nazione" class="titleElements rai-caption">Paese</label>
                        <select class="js-select2 rai form-control " id="_nazione" name="_nazione" style="width: 100%">
                            <option></option>
                            @{
                                var nazione = cvEnt.DNazione.OrderBy(x => new { x.QTA_ORDINE, x.DES_NAZIONE });
                                foreach (var elem in nazione)
                                {
                                    string check = "";
                                    if (Model._nazione == elem.DES_NAZIONE)
                                    {
                                        check = "selected=\"selected\"";
                                    }
                                    <option value="@elem.DES_NAZIONE" @check>@CommonHelper.ToTitleCase(elem.DES_NAZIONE)</option>
                                }
                            }
                        </select>

                    </div>

                    <div class="col-md-12 push-10">
                        @Html.LabelForRequiredObbl(model => model._areaAtt, "Ambito di attività", new { @class = "titleElements rai-caption requiredobbl" })
                        @Html.TextBoxFor(model => model._areaAtt, new { @id = "_areaAtt", @class = "rai form-control ", @placeholder = "Inserisci a testo libero" })
                        @Html.ValidationMessageFor(model => model._areaAtt)
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 push-10">
                        @Html.LabelForRequiredObbl(model => model._ultRuolo, "Attività", new { @class = "titleElements rai-caption" })
                        @Html.TextBoxFor(model => model._ultRuolo, new { @id = "_ultRuolo", @class = "rai form-control ", @placeholder = "Inserisci a testo libero" })
                        @Html.ValidationMessageFor(model => model._ultRuolo)
                    </div>

                    <div class="col-md-12 push-10">
                        <label for="_titoloEspQual" class="titleElements rai-caption">Titolo esperienza qualificante</label>
                        <input type="text" class="rai form-control " style="width: 100%" id="_titoloEspQual" name="_titoloEspQual" placeholder="Inserisci a testo libero" value="@Model._titoloEspQual" />
                    </div>


                    <div class="col-md-12 push-10">
                        <label for="_descrizioneEsp" class="titleElements rai-caption">Descrizione sintetica dell'esperienza</label>
                        <textarea id="_descrizioneEsp" name="_descrizioneEsp" rows="5" class="rai form-control" style="width: 100%" placeholder="">@Model._descrizioneEsp</textarea>

                    </div>

                    @{
                        string chk00, chk01;
                        string chk = "selected=\"selected\"";

                        if (Model._procura == "0")
                        {
                            chk00 = chk;
                        }
                        else
                        {
                            chk00 = "";
                        }
                        if (Model._procura == "1")
                        {
                            chk01 = chk;
                        }
                        else
                        {
                            chk01 = "";
                        }


                    }
                    <div class="push-10 col-md-6">
                        <label for="_budgetGest" class="titleElements rai-caption">Budget Gestito</label>
                        <select class="js-select2 rai form-control " id="_budgetGest" name="_budgetGest" style="width: 100%" placeholder="Scegliere una opzione">
                            <option></option>
                            @{
                                var budget = cvEnt.DTabellaCV.Where(x => x.NomeTabella == "Budget").OrderBy(y => y.Ordine).ToList();
                                foreach (var elem in budget)
                                {
                                    string check = "";
                                    if (Model._budgetGest == elem.Codice)
                                    {
                                        check = "selected=\"selected\"";
                                    }
                                    <option value="@elem.Codice" @check>@(elem.Descrizione)</option>
                                }
                                if (Model._codBudget == "-1")
                                {
                                    string check = "selected=\"selected\"";
                                    <option value="@Model._codBudget" @check>@(Model._budgetGest)</option>
                                }
                            }
                            @*                                    <option value="0" @chk20>Fino a 500 mila euro</option>
                                <option value="1" @chk21>Fino a 1 milione di euro</option>
                                <option value="2" @chk22>Oltre 1 milione di euro</option>*@
                        </select>
                    </div>
                    <div class="push-10 col-md-6">
                        <label for="_procura" class="titleElements rai-caption">Procura</label>
                        <select class="js-select2 rai form-control " id="_procura" name="_procura" style="width: 100%" placeholder="Scegliere una opzione">
                            <option></option>
                            <option value="0" @chk00>SI</option>
                            <option value="1" @chk01>NO</option>
                        </select>
                    </div>

                    <div class="push-10 col-md-6">
                        <label for="_risorseGest" class="titleElements rai-caption">Risorse Gestite/Coordinate</label>
                        <select class="js-select2 rai form-control " id="_risorseGest" name="_risorseGest" style="width: 100%" placeholder="Scegliere una opzione">
                            <option></option>
                            @{
                                var risorse = cvEnt.DTabellaCV.Where(x => x.NomeTabella == "Risorse").OrderBy(y => y.Ordine).ToList();
                                foreach (var elem in risorse)
                                {
                                    string check = "";
                                    if (Model._risorseGest == elem.Codice)
                                    {
                                        check = "selected=\"selected\"";
                                    }
                                    <option value="@elem.Codice" @check>@(elem.Descrizione)</option>
                                }
                                if (Model._codRisorse == "-1")
                                {
                                    string check = "selected=\"selected\"";
                                    <option value="@Model._codRisorse" @check>@(Model._risorseGest)</option>
                                }
                            }
                            @*                                    <option value="0" @chk10>Fino a 10</option>
                                <option value="1" @chk11>Fino a 100</option>
                                <option value="2" @chk12 >Oltre 100</option>*@
                        </select>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="rai-btn-fill">
                            <button type="button" class="btn rai-btn-secondary"><span onclick="ConfermaCancellazione_Experencies('@Model._matricola', '@Model._prog')">Elimina</span></button>
                            <button class="btn rai-btn-primary" type="submit" onclick="submit_modificaExperiences(this, '#form-modificaExperiences','savedbmodExp')"><i class=""></i>Salva</button>
                        </div>
                    </div>
                </div>
            </div>

            <div id="savedbmodExp" class="alert alert-primary" style="position:fixed;bottom:10px;right:10px;display:none;z-index:100; width:250px;">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <i class="fa fa-refresh fa-spin"></i> Salvataggio in corso
            </div>
        }

    }
}

<script>
    $.validator.unobtrusive.parse("#form-modificaExperiences");

</script>



