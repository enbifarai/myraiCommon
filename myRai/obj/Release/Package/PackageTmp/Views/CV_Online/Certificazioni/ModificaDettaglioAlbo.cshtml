@model myRaiCommonModel.cvModels.cvModel.Certificazioni
@{
    myRai.Data.CurriculumVitae.cv_ModelEntities cvEnt = new myRai.Data.CurriculumVitae.cv_ModelEntities();
}
@Html.HiddenFor(x => x._tipo)
@using (Html.BeginModal("Modifica Albi "))
{
    using (Html.BeginPanel(myRaiHelper.PanelType.Panel, "Dati Generali", false, new List<myRaiHelper.ActionTemplate>()))
    {


        <form class="form-modificaCertificazioni" id="form-modificaCertificazioni" novalidate="novalidate" action="/CV_Online/ModificaCertificazioni" method="post">
            @* form-horizontal  mb-lg  *@
            @Html.HiddenFor(x => x._matricola)
            @Html.HiddenFor(x => x._prog)
                <div class="rai form-group divdettaglio">

                <div class="row">
                    <div class="push-10 col-md-6">
                            @Html.LabelForRequiredObbl(x => x._codAlboProf, "Albo professionale", new { @class="titleElements rai-caption requiredobbl" })
                            @*<label for="_codAlboProf" class="titleElements rai-caption">Albo professionale</label>*@
                            <select class="js-select2 rai form-control input-validation-error required-min " data-val="true" data-val-required="Campo obbligatorio" id="_codAlboProf" name="_codAlboProf" style="width: 100%" onchange="inpreq(event);">
                            <option></option>
                            @{
                                var albi = cvEnt.DAlboProf.OrderBy(x => x.DescAlboProf);
                                foreach (var elem in albi)
                                {

                                    string check = "";
                                    if (Model._codAlboProf == elem.CodAlboProf)
                                    {
                                        check = "selected=\"selected\"";
                                    }

                                    <option value="@elem.CodAlboProf" @check>@elem.DescAlboProf</option>
                                }
                            }
                        </select>
                        @Html.ValidationMessageFor(m => m._codAlboProf, "Selezionare l'albo", new { @class = "field-validation-error hidden" })
                    </div>
                    <div class="push-10 col-md-6">
                            @Html.LabelForRequiredObbl(m => m._dataAlboProf, "Data iscrizione", new { @class="titleElements rai-caption" })
                        <div class="input-group">
                            <span class="input-group-addon" style="cursor: pointer" onclick="$('#_dataalbo').datetimepicker('show')"><i class="icons icon-calendar"></i></span>
                                @Html.TextBoxFor(m => m._dataAlboProf, new { @class = "js-datetimepicker  rai form-control start required-min", data_format = "DD/MM/YYYY", data_locale = "it", id = "_dataalbo", placeholder = "Selezionare una Data", onchange = "inpreq(event);" })
                        </div>
                        <div>
                            @Html.ValidationMessageFor(m => m._dataAlboProf, "La data d'iscrizione è obbligatoria", new { @class = "field-validation-error hidden" })
                        </div>

                    </div>
                    <div class="push-10 col-md-6">
                            @Html.LabelForRequiredObbl(m => m._pressoAlboProf, "Presso", new { @class="titleElements rai-caption" })
@*                            @Html.TextBoxFor(m => m._pressoAlboProf, new { @class = "rai form-control ", style = "width: 100%", placeholder = "Inserire a testo libero" })
                            @Html.ValidationMessageFor(m => m._pressoAlboProf)*@
                            @Html.TextBoxFor(m => m._pressoAlboProf, new { @class = "rai form-control required-min ", style = "width: 100%", placeholder = "Inserire a testo libero", id = "_pressoAlboProf", onchange = "inpreq(event);" })
                        @Html.ValidationMessageFor(m => m._pressoAlboProf, "Campo obbligatorio", new { @class = "field-validation-error hidden" })
                    </div>
                    <div class="push-10 col-md-12 frk_info">
                            @Html.LabelFor(m => m._noteAlboProf, "Descrizione", new { @class="titleElements rai-caption" })
                            @Html.TextAreaFor(m => m._noteAlboProf, new { @class = "rai form-control", style = "width: 100%", placeholder = "Inserire a testo libero utilizzando al massimo 1000 caratteri", rows = 5 })
                    </div>
                </div>
                <div class="row push-20-t">
                    <div class="col-md-12">
                        <div class="rai-btn-fill">
                            <button type="button" class="btn rai-btn-secondary" onclick="ConfermaCancellazione_Certificazione('@Model._matricola', '@Model._prog')"><span >Elimina</span></button>
                            <button class="btn rai-btn-primary" type="submit" onclick="submit_modificaCertificazione(this, 'savedbmodAlbo')"><i class=""></i>Salva</button>
                        </div>
                    </div>
                </div>



            </div>
            <!-- FREAK - COPIARE FINO A QUAAAAAAAAAAAA -->


        </form>
    <div id="savedbmodAlbo" class="alert alert-primary" style="position:fixed;bottom:10px;right:10px;display:none;z-index:100; width:250px;">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <i class="fa fa-refresh fa-spin"></i> Salvataggio in corso
        </div>
    }
}
<script>

    $.validator.unobtrusive.parse($(".form-modificaCertificazioni"));

</script>