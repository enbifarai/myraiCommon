@using myRaiCommonModel
@model string
@{
    ViewBag.Title = "CallReadAction";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
<style>

</style>
<section class="body">
    @Html.Partial("../Shared/header2", new NotifichePopupModel(myRaiHelper.CommonHelper.GetCurrentUserMatricola()))
    <div class="inner-wrapper">
        @Html.Partial("../Shared/sidebar3", myRai.Models.Utente.getSidebarModel())
        <section role="main" class="content-body">
            <div class="col-md-12">
                <section class="panel" style="margin-bottom: 50px;">
                    <header class="panel-heading">
                        <div class="row">
                            <h2 class="panel-title">Organigramma</h2>
                        </div>
                        <div class="panel-actions">
                            <a href="#" class="panel-action panel-action-toggle" data-panel-toggle="" aria-labelledby="lblNotifiche" aria-expanded="true"></a>
                        </div>
                    </header>
                    <div id="organigramma">
                   
                    </div>
                    </section>
                </div>
            </section>
        </div>
</section>

@section afterjs{
    <script type="text/javascript">
        $(function () {
            OrgChart.templates.ula.field_0 =  '<text class="field_0" style="font-size:14px; font-weight: bold;" fill="#039BE5" x="5" y="25">{val}</text>';
            var char = new OrgChart(document.getElementById("organigramma"), {
                enableDragDrop: true,
                enableSearch: false,
                nodeMouseClick: OrgChart.action.expandCollapse,
                //mouseScrool: OrgChart.action.yScroll,
                showYScroll: OrgChart.scroll.visible,
                template: "ula",
                        nodeBinding: {
                            field_0: "fullName",
                            field_1: "description",
                            field_2: "mansione"
                                                    
                        },
                        collapse:{
                            level : 2,
                            allChildren: true,
                },
                        //onExpCollClick: function (sender, action, id, ids) {
                        //    if (action == OrgChart.EXPAND) {
                        //        var node = sender.getBGNode(id);
                        //        if (node.parent) {
                        //            sender.expand(id, ids, function () {
                        //                sender.expand(ids[0], sender.getBGNode(ids[0]).childrenIds, function () {
                        //                    var ids = [];
                        //                    for (var i = 0; i < node.parent.childrenIds.length; i++) {
                        //                        var firstLevelChildId = node.parent.childrenIds[i];
                        //                        if (firstLevelChildId != node.id) {
                        //                            ids.push(firstLevelChildId);
                        //                        }
                        //                    }

                        //                    sender.collapse(id, ids, function () {
                        //                        sender.center(id);
                        //                    });
                        //                });

                        //            });

                        //            return false;
                        //        }
                        //    }
                        //    if (action == OrgChart.COLLAPSE) {
                        //        var node = sender.getBGNode(id);
                        //        if (node.parent) {
                        //            ids = [];
                        //            function collapseIds(n) {
                        //                if (n) {
                        //                    for (var i = 0; i < n.childrenIds.length; i++) {
                        //                        ids.push(n.childrenIds[i]);
                        //                        collapseIds(sender.getBGNode(n.childrenIds[i]));
                        //                    }
                        //                }
                        //            }
                        //            collapseIds(node);
                        //            sender.collapse(id, ids, function () {
                        //                sender.expand(id, node.parent.collapsedChildrenIds, function () {
                        //                    sender.center(id);
                        //                });
                        //            });
                        //            return false;
                        //        }
                        //    }
                        //},
                        nodes: @Html.Raw(Model),
            });
        });

        



    </script>
}
