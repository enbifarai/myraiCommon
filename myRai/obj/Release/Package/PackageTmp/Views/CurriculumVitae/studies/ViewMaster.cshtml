@model myRaiCommonModel.cvModels.cvModel.Studies

@{
    myRai.Data.CurriculumVitae.cv_ModelEntities cvEnt = new myRai.Data.CurriculumVitae.cv_ModelEntities();
}

<form class="js-form2 form-horizontal form-modificacv" action="/CurriculumVitae/ModificaCV" method="post">
    @Html.HiddenFor(m => m._matricola)
    @Html.HiddenFor(m => m._tableTarget)
    @Html.HiddenFor(m => m._prog)
    <input type="hidden" name="_codTipoTitolo" value="-1" />
    <input type="hidden" name="_corsoLaurea" value="-1" />
  <div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="block block-themed block-transparent remove-margin-b">
              <div class=" block-header bg-primary-dark">
                    <ul class="block-options">
                        <li>
                            <button data-dismiss="modal" type="button"><i class="si si-close"></i></button>
                        </li>
                    </ul>
                <h3 class="block-title">MODIFICA CV</h3>
              </div>
              <div class="modal-body" id="edit-content">

    <div class="form-group">
        <div class="col-md-12"> @*col-md-8 col-sm-offset-2*@
            <div class="form-material">
                <div class="frk_codTitolo push-10">
                <label for="_codTitolo" class="frk_codTitolo_text">Tipo specializzazione o titolo di merito</label>
                    @Html.HiddenFor(m => m._codTitolo)
                    <label class="form-control">@Model._descTitolo</label>
                </div>
                <div class="frk_titoloSpecializ push-10">
                    <label for="_tipoSpecializ">Titolo in</label>
                    @*<input class="form-control" type="text" id="_corsoLaurea" name="_corsoLaurea"  placeholder="Inserire a testo libero" />*@
                    @Html.TextBoxFor(m => m._titoloSpecializ, new { @class="form-control", placeholder="Inserire a testo libero", id="_titoloSpecializ" })
                    @Html.ValidationMessageFor(m => m._titoloSpecializ)
                </div>
                <div class="row">
                    <div class="stile-data">
                        <div class="col-md-6 push-10">
@*                                                                <label for="_dataInizio" class="frk_dataInizio"></label>
                            <input class="form-control" type="text" id="_dataInizio" name="_dataInizio" placeholder="Selezionare una data" />*@
                                                                
                                <div class="form-material input-group date" style="position: relative">
                                    <label class="frk_dataInizio" id="label-data-eccez" for="example-datetimepicker6"></label>
                                    @*<input class="js-datetimepicker form-control datainizio" data-format="DD/MM/YYYY" data-locale="it" type="text" id="" name="" placeholder="Scegli una data">*@
                                    @Html.TextBoxFor(m => m._dataInizio, new { @class="js-datetimepicker form-control datainizio", data_format="DD/MM/YYYY", placeholder="Scegli una data", id="_dataInizio" })
                                    @Html.ValidationMessageFor(m => m._dataInizio)
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                                                                
                        </div>
                        <div class="col-md-6 push-10">
@*                                                                <label for="_dataFine" class="frk_dataFine"></label>
                            <input class="form-control" type="text" id="_dataFine" name="_dataFine" placeholder="Selezionare una data" />*@
                                                                
                                <div class="form-material input-group date" style="position: relative">
                                    <label class="frk_dataFine" id="label-data-eccez" for="example-datetimepicker6"></label>
                                    @*<input class="js-datetimepicker form-control datafine" data-format="DD/MM/YYYY" data-locale="it" type="text" id="" name="" placeholder="Scegli una data">*@
                                    @Html.TextBoxFor(mbox => mbox._dataFine, new { @class="js-datetimepicker form-control datafine", data_format="DD/MM/YYYY", placeholder="Scegli una data", id="_dataFine"})
                                    @Html.ValidationMessageFor(m => m._dataFine)
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                                                                
                        </div>
                    </div>
                    <span class="col-md-12 push-10 _customDataInizioFineError field-validation-error">La data di inizio deve essere minore della data di conseguimento</span>    
                    <div class="col-md-6 push-10">
                        <label for="_voto">Voto</label>
                        @*<input class="form-control" type="text" id="_voto" name="_voto" placeholder="Inserire votazione" onkeypress="return onlyNumeric(event);"/>*@
                        @Html.TextBoxFor(m => m._voto, new { @class="form-control", placeholder="Inserire votazione", onkeypress="return onlyNumeric(event);", id="_voto" })
                        @Html.ValidationMessageFor(m => m._voto)
                        <!-- FREAK - test validazionre campo -->
                    </div>
                    <div class="col-md-6 push-10">
                        <label for="_scala">Scala</label>
                        @*<input class="form-control" type="text" id="_scala" name="_scala"  placeholder="Scala (in cifre)" onkeypress="return onlyNumeric(event);" />*@
                        @Html.TextBoxFor(m => m._scala, new { @class="form-control", placeholder="Scala (in cifre)", onkeypress="return onlyNumeric(event);",  id="_scala" })
                        @Html.ValidationMessageFor(m => m._scala)
                    </div>
                    <span class="col-md-12 push-10 _customVotoScalaError field-validation-error">Il voto deve essere minore o uguale all scala</span>
                </div>
                <div class="row frk_riconoscimento push-10">
                    <div class="col-md-10">
                        <label for="_riconoscimento">Riconoscimento</label>
                        @Html.TextBoxFor(m => m._riconoscimento, new { @class="form-control", placeholder="Inserire a testo libero",  id="_riconoscimento" })
                        @Html.ValidationMessageFor(m => m._riconoscimento)
@*                                                                <select class="js-select2 form-control" id="_riconoscimento" name="_riconoscimento" style="width: 100%;"  data-placeholder="Selezionare dalla lista">
                            <option></option><!-- necessario per il placeholder con Select2 plugin -->
                        </select>*@
                    </div>
                    @*<div class="col-md-2">&nbsp;</div>*@
                    <div class="col-md-2">
                        <label for="_lode">Lode</label>
                        <label class="css-input css-checkbox css-checkbox-success"><br />
                            <input class="" type="checkbox" id="_lode" name="_lode" value="S" /><span></span>
                        </label>
                    </div>
                </div>
                <div class="row frk_info push-10">
                    <div class="col-md-12">
                        <label for="_info">Ulteriori informazioni</label>
                        <textarea class="form-control" id="_note" name="_note" rows="5" placeholder=""></textarea>
                    </div>
                </div>
                <!-- Termine parte "VARIABILE" e la parte inserimento dettaglio titolo -->
                <!-- PARTE RELATIVA ALL'ISTITUTO COMUNE A TUTTE E TRE LE TIPOLOGIE -->
                <!-- FINE PARTE ISTITUTO -->
                <h5 class="push-20-t push-10">Dettaglio istituto o ente erogatore</h5>
                <div class="push-10">
                    <label for="_istituto">Nome</label>
                    @*<input class="form-control" type="text" id="_istituto" name="_istituto" placeholder="Inserire a testo libero" />*@
                    @Html.TextBoxFor(m => m._istituto, new { @class="form-control", placeholder="Inserire a testo libero", id="_istituto" })
                    @Html.ValidationMessageFor(m => m._istituto)
                </div>
                <div class="push-10">
                    <label for="_localitaStudi">Città</label>
                    @*<input class="form-control" type="text" id="_localitaStudi" name="_localitaStudi" placeholder="Inserire a testo libero" />*@
                    @Html.TextBoxFor(m => m._localitaStudi, new { @class="form-control", placeholder="Inserire a testo libero", id="_localitaStudi" })
                    @Html.ValidationMessageFor(m => m._localitaStudi)
                </div>
                <div class="push-10">
                    <label for="_codNazione">Paese</label>
                    <select class="js-select2 form-control"  id="_codNazione" name="_codNazione" style="width: 100%;"  data-placeholder="Selezionare dalla lista">
                        <option></option><!-- necessario per il placeholder con Select2 plugin -->
                        @{
                            var naz = (from nazione in cvEnt.DNazione
                                        orderby nazione.DES_NAZIONE
                                        select nazione).ToList();
                        }
                        @foreach (var elem in naz)
                        {
                            string selected;
                            if (elem.COD_SIGLANAZIONE == Model._codNazione)
                            {
                                selected = "selected=\"selected\"";
                            }
                            else
                            {
                                selected = "";
                            }
                            <option value="@elem.COD_SIGLANAZIONE" @selected>@elem.DES_NAZIONE</option>
                        }
                    </select>
                </div>
                <div class="push-10">
                    <label for="_indirizzoStudi">Indirizzo</label>
                    @*<input class="form-control" type="text" id="_indirizzoStudi" name="_indirizzoStudi" placeholder="Inserire a testo libero" />*@
                    @Html.TextBoxFor(m => m._indirizzoStudi, new { @class="form-control", placeholder="Inserire a testo libero", id="_indirizzoStudi" })
                    @Html.ValidationMessageFor(m => m._indirizzoStudi)
                </div>
            </div>
        </div>
    </div> 
              </div>
              <div class="modal-footer">
                <button type="submit" class="btn btn-primary" onclick="FormModificaCV()">Salva Modifiche</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">
                    @{
                    if (Model._logo.ToLower() == "master"){
                        <span onclick="ConfermaCancellazione_Studies('@Model._logo.ToLower()', '@Model._matricola', '@Model._prog')">Elimina</span>
                    }
                    else{
                        <span onclick="ConfermaCancellazione_Studies('@Model._logo.ToLower()', '@Model._matricola', '@Model._codTitolo')">Elimina</span>
                    }
                    }

                </button>
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">Annulla</button>
              </div>
          </div>
        </div>
  </div>

</form>


