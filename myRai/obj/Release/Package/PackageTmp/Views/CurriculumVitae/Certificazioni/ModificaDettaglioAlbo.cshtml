@model myRaiCommonModel.cvModels.cvModel.Certificazioni
@{
    myRai.Data.CurriculumVitae.cv_ModelEntities cvEnt = new myRai.Data.CurriculumVitae.cv_ModelEntities();
}
<form class="js-form2 form-horizontal form-modificaCertificazioni" action="/CurriculumVitae/ModificaCertificazioni" method="post">
    @Html.HiddenFor(x => x._matricola)
    @Html.HiddenFor(x => x._prog)
    @Html.HiddenFor(x=>x._tipo)
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="block block-themed block-transparent remove-margin-b">
                <div class=" block-header bg-primary-dark">
                    <ul class="block-options">
                        <li>
                            <button data-dismiss="modal" type="button"><i class="si si-close"></i></button>
                        </li>
                    </ul>
                    <h3 class="block-title">Albo Professionale</h3>
                </div>
                <div class="modal-body" id="edit-content">
                    <div class="form-group divdettaglio">
                        <div class="col-md-12">
                            <div class="push-10">
                                <div class="push-10">
                                    <label for="_codAlboProf">Albo professionale</label>
                                    <select class="js-select2 form-control input-validation-error required" data-val="true" data-val-required="Campo obbligatorio" id="_codAlboProf" name="_codAlboProf" style="width: 100%" onchange="inpreq('_codAlboProf');">
                                        <option></option>
                                        @{
                                            var albi = cvEnt.DAlboProf;
                                            foreach (var elem in albi)
                                            {

                                                string check = "";
                                                if (Model._codAlboProf == elem.CodAlboProf)
                                                {
                                                    check = "selected=\"selected\"";
                                                }
                      
                                            <option value="@elem.CodAlboProf" @check>@elem.DescAlboProf</option>
                                            }
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(x => x._codAlboProf)
                                    <div class="push-10">
                                        @Html.LabelFor(m => m._pressoAlboProf, "Presso")
                                        @Html.TextBoxFor(m => m._pressoAlboProf, new { @class = "form-control", style = "width: 100%", placeholder = "Inserire a testo libero" })
                                    </div>

                                    <div class="push-10">
                                        @Html.LabelFor(m => m._dataAlboProf, "Data iscrizione")
                                        <div class="stile-data">
                                            <div class="form-material input-group date" style="position: relative">
                                                @Html.TextBoxFor(m => m._dataAlboProf, new { @class = "js-datetimepicker form-control start required", data_format = "DD/MM/YYYY", data_locale = "it", id = "_dataalbo", placeholder = "Selezionare una Data", onchange = "inpreq('_dataalbo');" })
                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                            </div>
                                            <div>
                                                @Html.ValidationMessageFor(m => m._dataAlboProf, "La data d'iscrizione è obbligatoria", new { @class = "field-validation-error hidden" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row frk_info push-10">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m._noteAlboProf, "Descrizione")
                                            @Html.TextAreaFor(m => m._noteAlboProf, new { @class = "form-control", style = "width: 100%", placeholder = "Inserire a testo libero utilizzando al massimo 250 caratteri", rows = 5 })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="block-content block-content-mini block-content-full border-t">
                    <div class="row">
                        <div class="col-xs-6">
                            <button class="btn btn-warning" data-dismiss="modal" type="button"><i class="fa fa-arrow-circle-o-left"></i>Indietro</button>
                        </div>
                        <div class="col-xs-6 text-right">
                            <button class="btn btn-primary" type="submit" onclick="submit_modificaCertificazione()"><i class="fa fa-check-circle-o"></i>Invia</button>
                            <button type="button" class="btn btn-danger"><span onclick="ConfermaCancellazione_Certificazione('@Model._matricola', '@Model._prog')">Elimina</span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

</form>
