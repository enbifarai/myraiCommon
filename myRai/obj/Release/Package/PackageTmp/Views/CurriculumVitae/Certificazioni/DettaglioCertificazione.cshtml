@model myRaiCommonModel.cvModels.cvModel.Certificazioni

<div class="form-group divdettaglio" id="_certificazione">
    <div class="col-md-12">
        <div class="push-10">
            <div class="push-10">
                @Html.LabelFor(m => m._nomeCertifica, "Nome certificazione")
                @Html.TextBoxFor(m => m._nomeCertifica, new { @class = "form-control required", style = "width: 100%", placeholder = "Inserire a testo libero", onkeyup = "inpreq('_nomeCertifica');", id = "_nomeCertifica" })
                @Html.ValidationMessageFor(m => m._nomeCertifica, "Il nome della certificazione è obbligatorio", new { @class = "field-validation-error hidden" })
            </div>
            <div class="push-10">
                @Html.LabelFor(m => m._autCertifica, "Autorità certificazione")
                @Html.TextBoxFor(m => m._autCertifica, new { @class = "form-control", style = "width: 100%", placeholder = "Inserire a testo libero" })
            </div>
            <div class="push-10">
                @Html.LabelFor(m => m._numLicenza, "Numero licenza")
                @Html.TextBoxFor(m => m._numLicenza, new { @class = "form-control ", style = "width: 100%", placeholder = "Inserire a testo libero",  id = "_numLicenza" })
                
            </div>
            <div class="push-10">
                <p>Periodo di tempo</p>
                <div class="row">
                    <div class="stile-anno">
                        <div class="col-md-6 push-10">
                            <div class="form-material input-group date" style="position: relative">
                                @{
                                    var dataini = "";
                                    var datafin = "";
                                    if (Model._annoIni != null && Model._meseIni != null)
                                    {
                                        dataini = new DateTime(Convert.ToInt16(Model._annoIni), Convert.ToInt16(Model._meseIni), 01).ToString();

                                    }
                                    if (Model._annoFin != null && Model._meseFin != null)
                                    {
                                        datafin = new DateTime(Convert.ToInt16(Model._annoFin), Convert.ToInt16(Model._meseFin), 01).ToString();

                                    }
                                }
                                @Html.HiddenFor(m => m._meseIni, new { id = "_meseIni" })
                                @Html.HiddenFor(m => m._annoIni, new { id = "_annoIni" })
                                @Html.HiddenFor(m => m._meseFin, new { id = "_meseFin" })
                                @Html.HiddenFor(m => m._annoFin, new { id = "_annoFin" })

                                @Html.Label("Da", new { @class = "frk_dataInizio" })
                                @Html.TextBoxFor(m => m._dataIni, new { type = "text", @class = "js-datetimepicker form-control start required", data_format = "MMMM YYYY", data_locale = "it", id = "_datainizio", placeholder = "Selezionare Mese/Anno", onchange = "javascript:setdatacert('ini');", value = "@dataini" })
                                @*                                <input type="text" class="js-datetimepicker form-control start" data-format="MMMM YYYY" data-locale="it" id="_datainizio" placeholder="Selezionare Mese/Anno" onchange="javascript:setdatacert('ini');" value="@dataini"/>*@
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            </div>
                        </div>
                        <div class="col-md-6 push-10">
                            <div class="form-material input-group date" style="position: relative">
                                @Html.Label("Da", new { @class = "frk_dataFine" })
                                <input type="text" class="js-datetimepicker form-control start" data-format="MMMM YYYY" data-locale="it" id="_datafine" placeholder="Selezionare Mese/Anno" onchange="javascript:setdatacert('fin');" value="@datafin"/>
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            </div>
                        </div>
                        <div class="col-md-6 push-10">
                            @Html.ValidationMessageFor(m => m._dataIni, "La data di inizio periodo è obbligatoria", new { @class = "field-validation-error hidden" })
                        </div>
                    </div>

                </div>

            </div>


            <div class="push-10">
                @Html.LabelFor(m => m._urlCertifica, "Url certificazione")
                @Html.TextBoxFor(m => m._urlCertifica, new { @class = "form-control url", id = "_urlCertifica", style = "width: 100%", placeholder = "Inserire a testo libero", onkeyup = "ctrUrl('_urlCertifica');" })
                @Html.ValidationMessageFor(m => m._urlCertifica, "Url non valido", new { @class = "field-validation-error hidden" })
            </div>
        </div>
    </div>
</div>

