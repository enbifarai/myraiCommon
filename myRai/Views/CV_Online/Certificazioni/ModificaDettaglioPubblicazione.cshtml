@model myRaiCommonModel.cvModels.cvModel.Certificazioni
@Html.HiddenFor(x => x._tipo)
@using (Html.BeginModal("Modifica Pubblicazione"))
{
    using (Html.BeginPanel(myRaiHelper.PanelType.Panel, "Dati Generali", false, new List<myRaiHelper.ActionTemplate>()))
    {

        <form class="form-modificaCertificazioni" id="form-modificaCertificazioni" novalidate="novalidate" action="/CV_Online/ModificaCertificazioni" method="post">
            @* form-horizontal  mb-lg  *@
            @Html.HiddenFor(x => x._matricola)
            @Html.HiddenFor(x => x._prog)

                <div class="rai form-group divdettaglio">



                <div class="row">

                    <div class="col-md-4 ddl">
                                    @Html.LabelFor(m => m.GiornoPubblicazione, "Giorno ", new { @class = "titleElements rai-caption" })


                        <select id="GiornoPubblicazione" name="GiornoPubblicazione" class="rai form-control ">
                            <option value="">Selezionare il giorno</option>
                            @foreach (var item in Model.GiorniPubblicazione)
                            {
                                <option value="@item.Value"
                                        @if (Model.GiornoPubblicazione != null && Model.GiornoPubblicazione.ToString() == item.Value) { @: selected
                                        }>
                                    @item.Text
                                </option>
                            }
                        </select>
                    </div>

                    <div class="col-md-4 ddl">
                        @Html.LabelFor(m => m.MesePubblicazione, "Mese ", new { @class = "titleElements rai-caption" })

                        <select id="MesePubblicazione" name="MesePubblicazione" class="rai form-control ">
                            <option value="">Selezionare il mese</option>
                            @foreach (var item in Model.MesiPubblicazione)
                            {
                                <option value="@item.Value" @( item.Value == Model.MesePubblicazione ? "selected" : "")>@item.Text</option>
                            }
                        </select>

                                    @* @Html.DropDownListFor(modelItem => modelItem.MesePubblicazione, new SelectList(Model.MesiPubblicazione,"Value","Text",Model.MesePubblicazione),"Selezionare il mese", new  { @class="rai form-control"})
                            @Html.DropDownList("MesePubblicazione",Model.MesiPubblicazione)*@
                    </div>

                    <div class="col-md-4">
                                    @Html.LabelForRequiredObbl(m => m.AnnoPubblicazione, "Anno ", new { @class = "titleElements rai-caption requiredobbl" })
                        <div class="input-group">
                            <span class="input-group-addon" style="cursor: pointer" onclick="$('#AnnoPubblicazione').datetimepicker('show')"><i class="icons icon-calendar"></i></span>
                                        <input type="text" placeholder="Selezionare l'anno" class="js-datetimepicker rai form-control  start required-min"
                                   data-format="YYYY" data-locale="it" id="AnnoPubblicazione" name="AnnoPubblicazione" value="@Model.AnnoPubblicazione" />

                            @* @Html.TextBoxFor(m => m.AnnoPubblicazione, new {
                    @class = "js-datetimepicker rai form-control  start  required-min",
                                         data_format = "YYYY", data_locale = "it",
                                         placeholder = "Selezionare l'anno"
                                         //, onchange = "inpreq(event);"
                                })*@
                        </div>

                        @Html.ValidationMessageFor(m => m.AnnoPubblicazione, "L'anno pubblicazione è obbligatorio", new { @class = "field-validation-error hidden" })

                    </div>

                </div>

                <div class="row">
                    <div class="push-10 col-md-12">
                                @Html.LabelForRequiredObbl(m => m._titoloPubblica, "Titolo", new { @class = "titleElements rai-caption" })
                                @Html.TextBoxFor(m => m._titoloPubblica, new { @class = "rai form-control required-min ", style = "width: 100%", placeholder = "Inserisci a testo libero", onkeyup = "inpreq(event);", id = "_titoloPubblica" })
                        @Html.ValidationMessageFor(m => m._titoloPubblica, "Il titolo della pubblicazione è obbligatorio", new { @class = "field-validation-error hidden" })
                    </div>
                </div>
                <div class="row">
                    <div class="push-10 col-md-12 ddl">
                                @Html.LabelFor(m => m._tipoPubblicazione, "Tipo pubblicazione", new { @class = "titleElements rai-caption" })
                                @Html.DropDownListFor(m => m._tipoPubblicazione, new SelectList(@myRai.Controllers.CV_OnlineController.getTipiPubblicazione(), "Value", "Text", Model._tipoPubblicazione), "Selezionare", new { @class = "rai form-control", name = "tipiPubblicazione", id = "tipiPubblicazione", onchange = "changePlaceHolder();" })
                    </div>
                </div>
                <div class="row">
                    <div class="push-10 col-md-6">
                                @Html.LabelFor(m => m._tipoPubRiferimento, "Tipo Contributo", new { @class = "titleElements rai-caption" })
                                @Html.TextBoxFor(m => m._tipoPubRiferimento, new { @class = "rai form-control ", style = "width:100%", id = "tipoContributo", placeholder = "sito, portale, blog, e-book, altro contributo" })
                    </div>
                    <div class="push-10 col-md-6">
                                @Html.LabelFor(m => m._riferimentoPub, "Riferimento", new { @class = "titleElements rai-caption" })
                                @Html.TextBoxFor(m => m._riferimentoPub, new { @class = "rai form-control ", style = "width:100%", id = "riferimento", placeholder = "URL / ISBN-ISSN" })
                    </div>
                </div>

                <div class="row">
                    <div class="push-10 col-md-6">
                                @Html.LabelFor(m => m._editorePubblica, "Editore", new { @class = "titleElements rai-caption" })
                                @Html.TextBoxFor(m => m._editorePubblica, new { @class = "rai form-control ", style = "width: 100%", placeholder = "Inserisci a testo libero" })
                    </div>

                    <div class="push-10 col-md-6">
                                @Html.LabelFor(m => m._urlPubblica, "Url ", new { @class = "titleElements rai-caption" })
                                @Html.TextBoxFor(m => m._urlPubblica, new { @class = "rai form-control url ", style = "width: 100%", placeholder = "Inserisci a testo libero", id = "_urlPubblica"@*, onkeyup = "ctrUrl('_urlPubblica');"*@ })
                                @Html.ValidationMessageFor(m => m._urlPubblica)@*, "Url non valido", new { @class = "field-validation-error hidden" })*@
                    </div>
                </div>
                <div class="row">
                    <div class="frk_info push-10 col-md-12">
                                @Html.LabelFor(m => m._notePubblica, "Descrizione", new { @class = "titleElements rai-caption" })
                                @Html.TextAreaFor(m => m._notePubblica, new { @class = "rai form-control", style = "width: 100%", placeholder = "Inserisci a testo libero utilizzando al massimo 1000 caratteri", rows = 5 })
                    </div>
                </div>



                <div class="row push-20-t">
                    <div class="col-md-12">
                        <div class="rai-btn-fill">
                            <button type="button" class="btn rai-btn-secondary" onclick="ConfermaCancellazione_Certificazione('@Model._matricola', '@Model._prog')"><span >Elimina</span></button>
                            <button class="btn rai-btn-primary" type="submit" onclick="submit_modificaCertificazione(this, 'savedbPubb')"><i class=""></i>Salva</button>
                        </div>
                    </div>
                </div>


                <!-- FREAK - COPIARE FINO A QUAAAAAAAAAAAA -->
            </div>

        </form>
    <div id="savedbPubb" class="alert alert-primary" style="position:fixed;bottom:10px;right:10px;display:none;z-index:100; width:250px;">
            <i class="fa fa-refresh fa-spin"></i> Salvataggio in corso
        </div>
    }
}
<script>
    $.validator.unobtrusive.parse($(".form-modificaCertificazioni"));
    function changePlaceHolder() {
        var tipo = $("#tipiPubblicazione").val();
        if (tipo == "CARTACEA") {
            $("#tipoContributo").attr("placeholder", "es: libro, saggio, articolo, altro contributo");
            $("#riferimento").attr("placeholder", "ISBN/ISSN");
        }
        if (tipo == "DIGITALE") {
            $("#tipoContributo").attr("placeholder", "es: sito, portale, blog, e-book, altro contributo");
            $("#riferimento").attr("placeholder", "URL");
        }
        if (tipo == "") {
            $("#tipoContributo").attr("placeholder", "Tipo Contributo");
            $("#riferimento").attr("placeholder", "Riferimento");

        }
    }
</script>