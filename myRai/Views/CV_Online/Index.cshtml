@using MVCProject.Custom_Helpers
@model myRaiCommonModel.cvModels.cvModel
@{
    /**/

    ViewBag.Title = "Curriculum Vitae";
    Layout = "~/Views/Shared/_layoutContent.cshtml";

}


<section role="main" class="content-body">
    <!-- Main Container -->
    <input type="hidden" name="flagChangedInput" id="flagChangedInput" value="0" />
    <input type="hidden" name="formParentInput" id="formParentInput" value=" " />
    <main id="main-container">

        <div class="content" id="sezione">
            @*@if (myRaiHelper.CommonHelper.GetCurrentUserMatricola()() == "103650" || myRaiHelper.CommonHelper.GetCurrentUserMatricola()() == "909317") // ||  Model.CanPrenMappatura)
                {
                    <div class="row full-row full-row-header">
                        <div class="col-md-4 col-lg-4 col-xl-3 border-right text-center" style="min-height:75px;">
                            <h3>Mappatura giornalisti</h3>
                        </div>
                        <div class="col-md-8 col-lg-8 col-xl-9 border-left" style="min-height:75px;">
                            <label>&Egrave; possibile prenotare la data della tua intervista.</label>
                            <br />
                            <button class="btn btn-primary" onclick="ShowMappatura()">Prenota</button>
                        </div>
                    </div>
                    <br />
                }*@

            <div class="row">

                <div class="col-md-5 col-lg-4 col-xl-3">

                                <section class="rai panel">
                            <div id="box-boxAnagrafico">
                                @Html.AsyncPartialCV("CV_Online", "BoxAnagrafico", "~/Views/CV_Online/partials/_box_anagrafico_skeleton.cshtml", TempData)
                            </div>
                        </section>

                </div>
                <div class="col-md-7 col-lg-8 col-xl-9 ">

                    <div class="text-center "><h2 data-sezione="ep" class="push-20 TitoloSezioni">Esperienze Professionali</h2></div>
                    @* FREAK - Chiamo le varie Partial View dei vari Box *@

                    @* FREAK - BOX -> ESPERIENZE PROFESSIONALI  -- ID_BOX: 24   *@
                    @*@Html.Partial("experiences/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 24).Count() > 0)
                    {
                        <div id="box-experiences" class="titoli-menu" data-sez="ep" data-titolo="Esperienze">
                            @Html.AsyncPartialCV("CV_Online", "experiences", "~/Views/CV_Online/experiences/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("experiences") *@
                    }
                    @* FREAK - FINE BOX ESPERIENZE PROFESSIONALI *@
                    <br />
                    @* FREAK - BOX -> IMPEGNI EDITORIALI RAI  -- ID_BOX: 41 *@
                    @*@Html.Partial("ImpegniRAI/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 41).Count() > 0)
                    {
                        <div id="impegni-ed" class="titoli-menu" data-sez="ep" data-titolo="Impegni Editoriali">
                            @Html.AsyncPartialCV("CV_Online", "ImpegniRAI", "~/Views/CV_Online/ImpegniRAI/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @* @Html.Action("ImpegniRAI")*@
                    }
                    @* FREAK - FINE BOX IMPEGNI EDITORIALI RAI *@
                    <br />

                    @* FREAK - BOX -> COMPETENZE RAI -- ID_BOX: 42 *@
                    @*@Html.Partial("CompetenzeRAI/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 42).Count() > 0)
                    {
                        <div id="box-CompetenzeRAI" class="titoli-menu" data-sez="ep"
                             data-titolo="Attivita e Competenze Editoriali">
                            @Html.AsyncPartialCV("CV_Online", "CompetenzeRAI", "~/Views/CV_Online/CompetenzeRAI/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("CompetenzeRAI")*@
                    }
                    @* FREAK - FINE BOX COMPETENZE RAI *@
                    <br />

                    @* FREAK - BOX -> CONTENUTI MULTIMEDIALI *@
                    @*@Html.Partial("Allegati/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 23).Count() > 0)
                    {
                        <div id="box-Allegati" class="titoli-menu" data-sez="ep"
                             data-titolo="Contributi Multimediali">
                            @Html.AsyncPartialCV("CV_Online", "Allegati", "~/Views/CV_Online/Allegati/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("Allegati")*@
                    }
                    @* FREAK - FINE BOX CONTENUTI MULTIMEDIALI -- ID_BOX: 23 *@
                    <br /><br />

                    <div class="text-center"><h2 class="push-20 TitoloSezioni" data-sezione="fo" tabindex="0">Formazione</h2></div>
                    <br />
                    @* FREAK - BOX -> Titoli di studio e Specializzazioni -- ID_BOX: 17 *@
                    @*@Html.Partial("studies/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 17).Count() > 0)
                    {
                        <div id="box-studies" class="titoli-menu" data-sez="fo"
                             data-titolo="Titoli di studio e Specializzazioni">
                            @Html.AsyncPartialCV("CV_Online", "studies", "~/Views/CV_Online/studies/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("studies")*@
                    }
                    @* FREAK - FINE BOX Titoli di studio e Specializzazioni *@
                    <br />

                    @* FREAK - BOX -> Certificazioni -- ID_BOX: 40 *@
                    @if (Model.listaBox.Where(x => x._idMenu == 40).Count() > 0)
                    {
                        <div id="box-Certificazioni" class="titoli-menu" data-sez="fo"
                             data-titolo="Certificazioni">
                            @Html.AsyncPartialCV("CV_Online", "Certificazioni", "~/Views/CV_Online/Certificazioni/BoxView_skeleton.cshtml", TempData)
                        </div>
                    }
                    @*@Html.Partial("Certificazioni/BoxView", Model)*@

                    <br />

                    @* FREAK - BOX -> Formazione -- ID_BOX: 19 *@
                    @*@Html.Partial("Formazione/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 19).Count() > 0)
                    {
                        <div id="box-Formazione" class="titoli-menu" data-sez="fo"
                             data-titolo="Corsi di formazione">
                            @Html.AsyncPartialCV("CV_Online", "Formazione", "~/Views/CV_Online/Formazione/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("Formazione")*@
                    }
                    @* FREAK - FINE BOX Formazione *@
                    <br />
                    <br />

                    <div class="text-center"><h2 class="push-20 TitoloSezioni" data-sezione="co">Competenze</h2></div>
                    <br />

                    @* FREAK - BOX -> Conoscenze Informatiche  -- ID_BOX: 21 *@
                    @*@Html.Partial("knowledges/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 21).Count() > 0)
                    {
                        <div id="box-knowledges" class="titoli-menu" data-sez="co"
                             data-titolo="Competenze informatiche">
                            @Html.AsyncPartialCV("CV_Online", "knowledges", "~/Views/CV_Online/knowledges/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("knowledges")*@
                    }
                    @* FREAK - FINE BOX Conoscenze Informatiche*@
                    <br />

                    @* FREAK - BOX -> Competenze Digitali  -- ID_BOX: 39 *@
                    @*@Html.Partial("Competenzedigitali/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 39).Count() > 0)
                    {
                        <div id="box-CompetenzeDigitali" class="titoli-menu" data-sez="co"
                             data-titolo="Competenze digitali">
                            @Html.AsyncPartialCV("CV_Online", "CompetenzeDigitali", "~/Views/CV_Online/CompetenzeDigitali/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("CompetenzeDigitali")*@
                    }
                    @* FREAK - FINE BOX Competenze Digitali *@
                    <br />

                    @* FREAK - BOX -> Competenze Linguistiche -- ID_BOX: 20 *@
                    @*@Html.Partial("Competenzedigitali/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 20).Count() > 0)
                    {
                        <div id="box-languages" class="titoli-menu" data-sez="co"
                             data-titolo="Competenze linguistiche">
                            @Html.AsyncPartialCV("CV_Online", "languages", "~/Views/CV_Online/languages/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("languages")*@
                    }
                    @* FREAK - FINE BOX Competenze Linguistiche *@
                    <br />

                    @* FREAK - BOX -> Competenze Specialistiche -- ID_BOX: 43 *@
                    @*@Html.Partial("Competenzedigitali/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 43).Count() > 0)
                    {
                        <div id="box-CompetenzeSpecialistiche" class="titoli-menu" data-sez="co"
                             data-titolo="Competenze specialistiche">
                            @Html.AsyncPartialCV("CV_Online", "CompetenzeSpecialistiche", "~/Views/CV_Online/CompetenzeSpecialistiche/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("CompetenzeSpecialistiche")*@
                    }
                    @* FREAK - FINE BOX Competenze Specialistiche *@
                    <br />


                    <br />

                    <div class="text-center"><h2 class="push-20 TitoloSezioni" data-sezione="dp">Su di te</h2></div>
                    <br />

                    @if (Model.listaBox.Where(x => x._idMenu == 45).Count() > 0)
                    {
                        <div id="box-AutoPres" class="titoli-menu" data-sez="dp" data-titolo="Autopresentazione">
                            @Html.AsyncPartialCV("CV_Online", "Autopresentazione", "~/Views/CV_Online/Autopresentazione/BoxView_skeleton.cshtml", TempData)
                        </div>
                    }

                    @* FREAK - BOX -> Contatti -- ID_BOX: 18 *@
                    @*@Html.Partial("knowledges/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 18).Count() > 0)
                    {
                        <div id="box-AltreInfo" class="titoli-menu" data-sez="dp"
                             data-titolo="Su di te">
                            @Html.AsyncPartialCV("CV_Online", "AltreInfo", "~/Views/CV_Online/AltreInfo/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("AltreInfo")*@
                    }
                    @* FREAK - FINE BOX Contatti *@
                    <br />

                    @* FREAK - BOX -> Aree Interesse -- ID_BOX: 22 *@
                    @*@Html.Partial("knowledges/BoxView", Model)*@
                    @if (Model.listaBox.Where(x => x._idMenu == 22).Count() > 0)
                    {
                        <div id="box-AreeInteresse" class="titoli-menu" data-sez="dp"
                             data-titolo="Aree di interesse Aziendale">
                            @Html.AsyncPartialCV("CV_Online", "AreeInteresse", "~/Views/CV_Online/AreeInteresse/BoxView_skeleton.cshtml", TempData)
                        </div>
                        @*@Html.Action("AreeInteresse")*@
                    }
                    @* FREAK - FINE BOX Aree Interesse *@
                    <br />
                    @*foreach (myRai.Models.cvModels.cvModel.Box box in Model.listaBox)
                         {
                             <div class="col-sm-12 col-lg-6 ">
                                 <section class="panel">

                                      <div class="panel-heading panel-featured bg-top-@box._colore">
                                          <h3 class="panel-title">@box._titolo</h3>
                                      </div>
                                      <div class="panel-body" style="height:150px">
                                              <div class="col-xs-4 block-content-full push">
                                                  <i class="@box._icon fa-5x text-@box._colore push-10 "></i>    <!-- text-black -->
                                              </div>
                                              <div class="col-xs-8 block-content-full">
                                                 @box._sottotitolo
                                              </div>
                                      </div>
                                      <div class="panel-footer setright">
                                              <a href="~/CurriculumVitae/@box._url">
                                              <button type="button" class="btn btn-default btn-scriv text-uppercase"><small>Accedi</small></button>
                                             </a>
                                      </div>
                                  </section>
                                 </div>
                        }
                    *@
                </div>

            </div>
        </div>
    </main>

</section>

@section afterjs {
    @Html.Raw(TempData["script"])
    <script>
            $(document).scroll(function () {
                if ($("#panel-main").length < 1)
                    var s = $(window).scrollTop();
                else
                    var s = $("#panel-main").offset().top - $(window).scrollTop();

                if (s < 60) {
                    s = 60;
                    $("#panel-main").css("width", $("#panel-main").width() + "px");
                    $("#panel-main").css("position", "fixed");
                    $("#panel-main").css("top", s + "px");
                    $("#panel-main").css("box-shadow","4px 4px 15px #888888");
                }
                if ($(window).scrollTop()<400)
                {
                    $("#panel-main").css("position", "");
                    $("#panel-main").css("top", "");
                    $("#panel-main").css("box-shadow", "none");
                }
            });
    </script>
}

<!-- FINE Main Container -->
<div id="inner" class="inner"></div>
</div>
<!-- FINE Page Container -->
<!-- Privacy -->
<div id="privacy-container">
    @{
        if (!Model.privacy.privacyAccepted)   /* !Model.privacy.privacyAccepted */
        {
            @Html.Partial("Privacy/BoxView", Model)
        }
    }
</div>
<div class="popup-gallery" style="padding-left:200px;display:none">
    @{int co = 0; }
    @foreach (var im in Model.BoardingImages)
    {
        if (im != null && (im.ToLower().EndsWith("jpg") || im.ToLower().EndsWith("png")))
        {
            co++;
            <a id="boarding-@co" class="float-left mb-1 mr-1" href="/@im" title="SelfService OnBoarding">
                <div class="img-fluid">
                    <img src="/@im" width="105">
                </div>
            </a>
        }
    }


</div>

<div class="modal fade" id="modal-boarding" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: none;">


</div>

<div class="modal right fade" id="modal-prenMapp" role="dialog" aria-hidden="true" style="display: none;">

</div>

@* <a id="open-tour" class="scroll-to-top hidden-mobile visible" href="javascript:startCvIndexTourForced()" style="
        right: 50px;
    "><i class="fa fa-globe"></i></a>*@

<a id="open-tour" class="scroll-to-top hidden-mobile visible" href="javascript:startCvIndexTourForced()" style="right: 50px;display: block;color: #fff;"><i class="fa fa-life-ring" style="color: #fff!important;"></i> Rivedi tutorial</a>

<!-- FINE Privacy -->
<!-- Partial view per modali -->



<!-- FINE Partial view per modali -->

<script>

        document.addEventListener('DOMContentLoaded', function (event) {

            $(document).on('hide.bs.modal', '.modalCheck', function (e) {

                var idForm = "#" + $(this)[0].id;


                $("#formParentInput").val('');
                $("#formParentInput").val(idForm);
                var check = $("#flagChangedInput").val();
                if (check == '1') {
                    swal({
                        title: 'Sei sicuro?',
                        text: "Vuoi uscire senza salvare?",
                        //type: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'No',
                        cancelButtonText: 'Si',
                        confirmButtonClass: 'btn btn-lg btn-primary push-5-l',
                        cancelButtonClass: 'btn btn-lg btn-default push-5-r',
                        buttonsStyling: false,
                        reverseButtons: true
                    }).then(function (result) {

                        if (result) {
                            //if (idForm == "modalExperiencesInserimnento") {
                            //    $("#modalExperiencesInserimnento input:text").val("");
                            //}
                            var idForm = $("#formParentInput").val();
                            $(idForm + ".modalCheck").modal('toggle');
                        }
                        else
                        {
                            $("#flagChangedInput").val('0');
                        }
                    });
                }
            });
            $(document).on('change', 'input', function (e) {
                $("#flagChangedInput").val('1');
            });
            $(document).on('change', 'select', function (e) {
                $("#flagChangedInput").val('1');
            });


            //onboarding show
            $('.popup-gallery').magnificPopup({
               // showCloseBtn: false,
                enableEscapeKey: false,
                closeOnBgClick:false,
                delegate: 'a',
                type: 'image',
                tLoading: 'Loading image #%curr%',
                mainClass: 'mfp-img-mobile',
                gallery: {
                    enabled: true,
                    navigateByImgClick: true,
                    preload: [0, 1], // Will preload 0 - before current, and 1 after the current image
                    tPrev: 'Indietro', // title for left button
                    tNext: 'Avanti', // title for right button
                    tCounter: '<span class="mfp-counter" style="width:50px;text-align:right">%curr% di %total%</span>' // markup of counter
                },
                image: {
                    tError: '<a href="%url%">The image #%curr%</a> could not be loaded.'
                },
                callbacks: {
                    open: function () {
                        var mfp = $.magnificPopup.instance;
                        var proto = $.magnificPopup.proto;

                        // Controllo frecce all'inizio
                        if (mfp.index < 1)
                            $(".mfp-arrow-left").hide();
                        if (mfp.index >= mfp.items.length - 1) {
                            $(".mfp-arrow-right").hide();
                        }
                        else $(".mfp-close").hide();

                        mfp.next = function () {
                            // if index is not last, call parent method
                            if (mfp.index < mfp.items.length - 1) {
                                proto.next.call(mfp);

                                // arrows show/hide check
                                $(".mfp-arrow-left").show();
                                if (mfp.index >= mfp.items.length - 1) {
                                    $(".mfp-arrow-right").hide();
                                    $(".mfp-close").show();
                                }

                            } else {

                                //$.magnificPopup.close();

                            }
                        };
                        mfp.prev = function () {
                            if (mfp.index > 0) {
                                proto.prev.call(mfp);

                                // arrows show/hide check
                                $(".mfp-arrow-right").show();
                                if (mfp.index < 1)
                                    $(".mfp-arrow-left").hide();
                            }
                        };
                    },
                    close: function () {

                       boardingCreateCookie();

                       @if (!Model.privacy.privacyAccepted)   /* !Model.privacy.privacyAccepted */
                       {
                            @:$('#modal-privacy').modal('show');
                        }
                        else
                        {
                           @:startCvIndexTour();
                        }

                    }
                    // e.t.c.
                }
            });

            if (boardingNeverDone()) {
                boardingStart();

            }
            else {
                @if (!Model.privacy.privacyAccepted)   /* !Model.privacy.privacyAccepted */
                       {
                            @:$('#modal-privacy').modal('show');
                                        }
                        else
                        {
                           @:startCvIndexTour();
                                                        }
            }
        });

        function EndBoarding()
        {
            boardingCreateCookie();

            @if (!Model.privacy.privacyAccepted)   /* !Model.privacy.privacyAccepted */
            {
                @:$('#modal-privacy').modal('show');
            }
            else
            {
                @:startCvIndexTour();
            }

        }
        function startCvIndexTour()
        {
            if (cvIndexTourNeverDone())
            {
                cvIndexTourCreateCookie();
                StartTourIndex("");
            }
        }
        function startCvIndexTourForced() {
                cvIndexTourCreateCookie();
                StartTourIndex("");
        }
</script>
