@using System.Globalization
@using myRaiHelper
@using myRaiCommonModel.RaiAcademy
@using MVCProject.Custom_Helpers
@using myRaiCommonManager
@using myRai.Controllers.RaiAcademy;

@model DettaglioCorsoVM

@{
    Layout = "~/Views/RaiAcademy/BaseView.cshtml";
}

<script src="/assets/vendor/jquery/jquery.js"></script>
<script src="~/assets/js/myRaiV2.js"></script>

@{
    string urlIlias = CommonHelper.GetParametro<string>( EnumParametriSistema.AcademyUrlIlias );

    bool corsoSuRich = Model.Corso.Stato == StatoCorsoTipoOffertaEnum.SuRichiesta;
    bool corsoFPRESConEdiz = Model.Corso.TipoMetodoFormativo == MetodoEnum.FPRES
                            || (Model.Corso.TipoMetodoFormativo == MetodoEnum.FAD && Model.Corso.MetodoFormativo.ToUpper() == "AULA VIRTUALE");// && Model.Corso.AltriDettagli.Edizioni.Count > 0;
    bool justOneCourse = Model.Corso.Pacchetto.Pillole.Count( ) == 1;

    string ariaLabelTitle = "Corso: " + Model.Corso.Titolo + ".";
    ariaLabelTitle += "Area formativa: " + Model.Corso.AreaFormativa + ".";
    ariaLabelTitle += "Tematica: " + Model.Corso.Tematica + ".";

    string imgStyle = "";
    string urlImg = "";
        imgStyle = "background-size:cover";
        urlImg = Url.Action( "GetCourseImage2" , "RaiAcademy" , new { idCorso = Model.Corso.Id , resized = false } );
    //if (Model.Corso.Immagine != null)
    //{
    //    imgStyle = "background-size:cover";
    //    urlImg = Url.Action("GetCourseImage2", "RaiAcademy", new { idCorso = Model.Corso.Id, resized = false });
    //}
    //else
    //{
    //    imgStyle = "background-size:auto";
    //    urlImg = Url.Action("GetDefaultCourseImage", "RaiAcademy");
    //}

    bool onIlias = !String.IsNullOrWhiteSpace( Model.Corso.ExternalCourse ) && !Model.Corso.Pacchetto.Pillole.Any( );
}
@if ( !String.IsNullOrWhiteSpace( Model.Corso.ExternalCourse ) )
{
    <div style="display: none;">
        <iframe id="iliasLogger" src="about:blank"></iframe>
    </div>
}

    <input type="hidden" id="corsoExt" value="@Model.Corso.ExternalCourse" />
    <input type="hidden" id="corsoStato" value="@Model.Corso.Stato" />

<div class="container-fluid">
    <div class="row push-20">
        <div class="col-sm-12 text-left">
            <a href="@Url.Action("Index", "RaiAcademy")"><i class="fa fa-arrow-left"></i>&nbsp;Torna al Catalogo Corsi</a>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <h4>@Model.Corso.AreaFormativa - @Model.Corso.Tematica @(!String.IsNullOrWhiteSpace( Model.Corso.Gruppo ) ? "- " + Model.Corso.Gruppo : "")</h4>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <b class="academy-title" tabindex="0" aria-label="@ariaLabelTitle">@Model.Corso.Titolo</b>
        </div>
    </div>


    <div class="row">
        <div class="col-sm-6">
            <div>

                <a tabindex="0" role="link" aria-label="@(Model.Corso.MiIncuriosisce ? "Rimuovi dai" : "Aggiungi ai") miei preferiti" onclick="javascript:BookMarkCorso(event, this, @Model.Corso.Id)" class="academy-preview-bookmark hover-icon-span visibilityfixed"><span data-bookmark-corso="" class="academy-bookmark-corso-text ti-import h4 @(Model.Corso.MiIncuriosisce ? "text-primary" : "")" style="font-size: 17px;"></span></a>

                <div class="academy-preview cursor-pointer academy-img bg-primary" onclick="ShowImageCourse()" style="background-image:url('@urlImg');@imgStyle">
                    <div class="academy-perc-container">
                        <div class="academy-perc-detail academy-perc-@Model.Corso.Completamento" style="width:@(Model.Corso.Completamento)%;"><span style="display:none;">COMPLETATO</span></div>
                    </div>
                </div>
                @if ( !String.IsNullOrWhiteSpace( Model.Corso.ImmagineDidascalia ) )
                {
                    <label class="academy-preview-caption cursor-pointer" onclick="ShowImageCourse()" title="@Model.Corso.ImmagineDidascalia">@Model.Corso.ImmagineDidascalia</label>
                }

            </div>

        </div>
        <div class="col-sm-6">
            @*<b class="academy-title-2">@Model.Corso.MetodoFormativo</b>*@
            <div class="row academy-row-noborder">
                <div class="col-sm-12 academy-descrizione">
                    <span tabindex="0">@Model.Corso.Descrizione</span>
                </div>
                @if ( Model.Corso.Completamento == 100 )
                {
                    <div class="col-sm-12">
                        <a role="link" tabindex="0" data-rich-id="@Model.Corso.Id" data-rich-idEdiz="0" class="btn btn-lg btn-primary push-20-t ">Corso completato</a>

                    @if (Model.Corso.HasAttestato)
                    {
                    <div class="push-20-t" style="padding:15px;display:inline-table; vertical-align:middle;" >
                        <a role="link" class="rai-font-md text-primary" tabindex="0" href="@Url.Action("GetAttestato","RaiAcademy", new { id = Model.Corso.Id })">Scarica attestato</a>
                    </div>
                    }
                </div>
                }
                else if (Model.Corso.TipoMetodoFormativo == MetodoEnum.FAD && Model.Corso.MetodoFormativo.ToUpper() != "AULA VIRTUALE")
                {
                    if ( corsoSuRich && Model.Corso.Iscritto == IscrittoEnum.NonIscritto )
                    {
                        <div class="col-sm-12">
                            <a role="link" tabindex="0" data-rich-id="@Model.Corso.Id" data-rich-idEdiz="0" class="btn btn-lg btn-primary push-20-t academy-auth-required disable" href="javascript:Iscriviti(@Model.Corso.Id)">Richiedi autorizzazione</a>
                            @*<a role="link" tabindex="0" class="btn btn-lg btn-primary push-20-t academy-auth-required" href="javascript:RichiediIscrizione(@Model.Corso.Id)">Iscriviti</a>*@
                        </div>
                    }
                    else if ( corsoSuRich && Model.Corso.Iscritto == IscrittoEnum.RichiestaInAttesa )
                    {
                        <div class="col-sm-12">
                            <a role="link" tabindex="0" data-rich-id="@Model.Corso.Id" data-rich-idEdiz="0" class="btn btn-lg btn-primary push-20-t academy-auth-required disable">Richiesta effettuata</a>
                            @*<a role="link" tabindex="0" class="btn btn-lg btn-primary push-20-t academy-auth-required" href="javascript:RichiediIscrizione(@Model.Corso.Id)">Iscriviti</a>*@
                        </div>
                    }
                    else
                    {
                        <div class="col-sm-12">
                            @if ( justOneCourse )
                            {
                                <a role="link" tabindex="0" class="btn btn-lg btn-primary push-20-t academy-main-action @(onIlias ? "disable" : "")" target="_blank"
                                   href="@Model.Corso.Pacchetto.Pillole[0].Url"
                                   onclick="openScorm(event, @Model.Corso.Id, '@Model.Corso.Pacchetto.Pillole[0].Nome','@Model.Corso.Pacchetto.Pillole[0].Url')">Vai al corso</a>
                            }
                            else
                            {
                                <button role="link" id="gotoCorsi" tabindex="0" class="btn btn-lg btn-primary push-20-t academy-main-action @(onIlias ? "disable" : "")" style=""
                                        onclick="javascript:ShowTab('corsi')">
                                    Vai ai corsi
                                </button>
                            }
                        </div>

                    }
                }
                else if ( corsoFPRESConEdiz )
                {
                    <div class="col-sm-12">
                        <a role="link" tabindex="0" class="btn btn-lg btn-primary push-20-t academy-main-action" onclick="ShowTab('calendario')">Vai al calendario</a>
                    </div>
                }
                <div class="col-sm-12">
                    <hr />
                </div>
                <div class="col-sm-12">
                    <table role="grid" class="js-table-sections table table-responsive academy-corso-info academy-corso-info-margin">
                        <tbody>
                            @*<tr style="border-top: 1px solid #000;">
                                    <td colspan="3"></td>
                                </tr>*@
                            <tr role="row" tabindex="0" aria-label="Tipo offerta: @(Model.Corso.Stato.GetAmbientValue())">
                                <td style="width: 25px;">
                                    <i class="icons icon-graduation academy-detail-icon" data-toggle="tooltip" title="Tipo offerta"></i>
                                </td>
                                <td colspan="2">
                                    <span class="text-primary academy-text-info">@(Model.Corso.Stato.GetAmbientValue( ))</span>
                                </td>
                            </tr>
                            @if ( !String.IsNullOrWhiteSpace( Model.Corso.Target ) || Model.Corso.TipoMetodoFormativo != MetodoEnum.FAD )
                            {
                                <tr role="row" tabindex="-1" aria-label="Target: @Model.Corso.Target">
                                    <td>
                                        <i class="icons icon-user academy-detail-icon" data-toggle="tooltip" title="Destinatari"></i>
                                    </td>
                                    <td>
                                        <span class="text-primary academy-text-info">@Html.Raw( RaiAcademyController.RenderText( Model.Corso.Target ) )</span>
                                    </td>

                                    @if ( Model.Corso.TipoMetodoFormativo != MetodoEnum.FAD )
                                    {
                                        if ( Model.Corso.NumeroPartecipanti > 0 && Model.Corso.NumeroPartecipanti != 999 )
                                        {
                                            <td class="border-left">
                                                <span class="text-primary academy-text-info">@(Model.Corso.NumeroPartecipanti.ToString( )) Partecipanti previsti </span>
                                            </td>
                                        }
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                </tr>
                            }
                            @*@if (Model.Corso.DataInizioDisponibilita != DateTime.MinValue)
                                {
                                    <tr role="row" tabindex="-1" aria-labelledby="spanIniDisp">
                                        <td>
                                            <i class="icons icon-calendar academy-detail-icon" data-toggle="tooltip" title="Data inizio disponiblità"></i>
                                        </td>

                                            <td colspan="2" class="academy-corso-info text-primary">
                                                <span class="text-primary academy-text-info" id="spanIniDisp">@String.Format("Disponibile da {0} {1}", Convert.ToDateTime(Model.Corso.DataInizioDisponibilita).ToString("MMMMM"), Convert.ToDateTime(Model.Corso.DataInizioDisponibilita).Year.ToString())</span>
                                            </td>
                                    </tr>
                                }*@

                            @if ( !String.IsNullOrWhiteSpace( Model.Corso.Sede ) )
                            {
                                <tr role="row" tabindex="-1" aria-label="Sede: @Model.Corso.Sede">
                                    <td>
                                        <i class="icons icon-location-pin academy-detail-icon" data-toggle="tooltip" title="Dove si svolge"></i>
                                    </td>
                                    <td colspan="2">
                                        <span class="text-primary academy-text-info">@Model.Corso.Sede</span>
                                    </td>
                                </tr>
                            }
                            @if ( !String.IsNullOrWhiteSpace( Model.Corso.DisponibileDal ) )
                            {
                                <tr role="row" tabindex="0" aria-label="Disponibile dal: @(Model.Corso.DisponibileDal)">
                                    <td style="width: 25px;">
                                        <i class="icons icon-calendar academy-detail-icon" data-toggle="tooltip" title="Disponibile dal"></i>
                                    </td>
                                    <td colspan="2">
                                        <span class="text-primary academy-text-info">@Model.Corso.DisponibileDal</span>
                                    </td>
                                </tr>
                            }
                            @if ( !String.IsNullOrWhiteSpace( Model.Corso.Durata ) )
                            {
                                <tr role="row" tabindex="-1" aria-label="Durata: @Model.Corso.Durata">
                                    <td>
                                        <i class="icons icon-clock academy-detail-icon" data-toggle="tooltip" title="Durata"></i>
                                    </td>
                                    <td colspan="2">
                                        <span class="text-primary academy-text-info">@(Model.Corso.Durata)</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row academy-sticky-top" id="btnTab" style="margin-bottom: 0px; z-index: 999;">
        <div class="col-sm-12">
            <div class="btn-group btn-group-justified " role="tablist">
                <a id="" tabindex="0" onclick="ShowTab('obiettivi')" class="a_obiettivi cors panel-featured-primary text-primary btn btn-default hidden-xs" role="tab" aria-selected="true">Obiettivi e Contenuti</a>
                <a id="" tabindex="-1" onclick="ShowTab('dettagli')" class="a_dettagli cors btn btn-default hidden-xs" role="tab">Dettagli del corso</a>
                @if ( Model.Corso.TipoMetodoFormativo == MetodoEnum.FAD )
                {
                    <a id="" tabindex="-1" onclick="ShowTab('corsi')" class="a_corsi cors btn btn-default hidden-xs @(onIlias ? "disable" : "")" role="tab">Corsi</a>
                }
                @if ( corsoFPRESConEdiz )
                {
                    <a id="" tabindex="-1" onclick="ShowTab('calendario')" class="a_calendario cors btn btn-default hidden-xs" role="tab">Calendario</a>
                }
                @{
                    <a id="" tabindex="-1" onclick="ShowTab('risorse')" class="a_risorse cors btn btn-default hidden-xs @(onIlias ? "disable" : "")" role="tab">Materiali e Documenti</a>
                }
                <div class="btn-group btn-group-visible-xs" role="group">
                    <button id="btnGroupDrop1" type="button" class="cors btn btn-default panel-featured-primary text-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Obiettivi e Contenuti
                    </button>
                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                        <a id="" tabindex="0" onclick="ShowTab('obiettivi')" class="a_obiettivi cors panel-featured-primary text-primary btn btn-default" role="tab" aria-selected="true">Obiettivi e Contenuti</a>
                        <a id="" tabindex="-1" onclick="ShowTab('dettagli')" class="a_dettagli cors btn btn-default" role="tab">Dettagli del corso</a>
                        @if ( Model.Corso.TipoMetodoFormativo == MetodoEnum.FAD )
                        {
                            <a id="" tabindex="-1" onclick="ShowTab('corsi')" class="a_corsi cors btn btn-default @(onIlias ? "disable" : "")" role="tab">Corsi</a>
                        }
                        @if ( corsoFPRESConEdiz )
                        {
                            <a id="" tabindex="-1" onclick="ShowTab('calendario')" class="a_calendario cors btn btn-default" role="tab">Calendario</a>
                        }
                        @{
                            <a id="" tabindex="-1" onclick="ShowTab('risorse')" class="a_risorse cors btn btn-default @(onIlias ? "disable" : "")" role="tab">Materiali e Documenti</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <h2>Obiettivi e Contenuti</h2>
            <div id="obiettivi" class="academy-tab-body" tabindex="-1" role="tabpanel">
                    <label class="academy-tab-body-bold">A che cosa ti serve</label>
                <br />
                <label class="academy-tab-body">
                    @Html.Raw( RaiAcademyController.RenderText( Model.Corso.ObiettiviEContenuti.Serve ) )
                </label>
                <br />
                <br />
                    <label class="academy-tab-body-bold">Che cosa imparerai</label>
                <br />
                <label class="academy-tab-body">@Html.Raw( RaiAcademyController.RenderText( Model.Corso.ObiettiviEContenuti.Imparerai ) )</label>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-12">
            <h2>Dettagli del corso</h2>
            <div id="dettagli" class="academy-tab-body" tabindex="-1" role="tabpanel">
                <label class="academy-tab-body-bold" aria-label="Requisiti:">Requisiti</label>
                <br />
                <label class="academy-tab-body">@Html.Raw( RaiAcademyController.RenderText( Model.Corso.AltriDettagli.Requisiti ) )</label>
                <br />
                <label class="academy-tab-body-bold" aria-label="Articolazione del corso:">Articolazione del corso</label>
                <br />
                <label class="academy-tab-body">@Html.Raw( ( String.IsNullOrWhiteSpace( Model.Corso.AltriDettagli.ArticolazioneCorso ) ? "-" : RaiAcademyController.RenderText( Model.Corso.AltriDettagli.ArticolazioneCorso ) ) )</label>
                <br />
                <label class="academy-tab-body-bold" aria-label="Docenti:">Docenti</label>
                <br />
                <label class="academy-tab-body">@Html.Raw( ( String.IsNullOrWhiteSpace( Model.Corso.AltriDettagli.Docenti ) ? "-" : RaiAcademyController.RenderText( Model.Corso.AltriDettagli.Docenti ) ) )</label>
                <br />
                <label class="academy-tab-body-bold" aria-label="Edizioni previste:">Edizioni previste</label>
                <br />
                <label class="academy-tab-body">@Model.Corso.AltriDettagli.NoteEdizioni</label>
                <br />
                @if (Model.Corso.AltriDettagli.PercorsiFormativi.Count() == 1)
                {
                <label class="academy-tab-body-bold" aria-label="Percorso formativo:">Percorso formativo</label>
                <br />
                    <label class="academy-tab-body">Il corso fa parte del percorso formativo "@Model.Corso.AltriDettagli.PercorsiFormativi[0].Nome"</label>
                }
                else if (Model.Corso.AltriDettagli.PercorsiFormativi.Count() > 1)
                {
                    var percorsi = "";
                    int i = 0;
                    for (i = 0; i < Model.Corso.AltriDettagli.PercorsiFormativi.Count() - 1; i++)
                    {
                        if (!String.IsNullOrWhiteSpace(percorsi))
                        {
                            percorsi += ", ";
                        }
                        percorsi += "\"" + Model.Corso.AltriDettagli.PercorsiFormativi[i].Nome + "\"";
                    }
                    percorsi += " e \"" + Model.Corso.AltriDettagli.PercorsiFormativi[i].Nome + "\"";

                    <label class="academy-tab-body-bold" aria-label="Percorsi formativi:">Percorsi formativi</label>
                    <br />
                    <label class="academy-tab-body">Il corso fa parte dei percorsi formativi @percorsi</label>
                }
                else
                {
                    <label class="academy-tab-body-bold" aria-label="Percorso formativo:">Percorso formativo</label>
                    <br />
                    <label class="academy-tab-body">Nessuno</label>
                }

                <br />
                @if ( !String.IsNullOrWhiteSpace( Model.Corso.CertificazioneOttenuta ) )
                {
                    <label class="academy-tab-body-bold" aria-label="Certificazione/Crediti:">Certificazioni/Crediti</label>
                    <br />
                        <label class="academy-tab-body">@Html.Raw(RaiAcademyController.RenderText(Model.Corso.CertificazioneOttenuta))</label>
                    <br />
                }
                <label class="academy-tab-body-bold" aria-label="Note:">Note</label>
                <br />
                <label class="academy-tab-body">@Html.Raw( ( String.IsNullOrWhiteSpace( Model.Corso.AltriDettagli.Note ) ? "Nessuna" : RaiAcademyController.RenderText( Model.Corso.AltriDettagli.Note ) ) )</label>
            </div>
        </div>
    </div>
    <br />
    @if ( Model.Corso.TipoMetodoFormativo == MetodoEnum.FAD )
    {
        if ( Model.Corso.Pacchetto.Pillole.Count > 0 || String.IsNullOrWhiteSpace( Model.Corso.ExternalCourse ) )
        {
            @Html.Partial( "~/Views/RaiAcademy/subpartial/ElencoPillole.cshtml" , Model.Corso.Pacchetto )
        }
        else
        {
                @*@Html.AsyncPartial("RaiAcademy", "ElencoPillole", "?idCorso=" + Model.Corso.Id, "~/Views/RaiAcademy/subpartial/ElencoPillole_skeleton.cshtml", TempData, "EnableCourseButton()")*@
                <div id="elencopillole">
                    @Html.Partial("~/Views/RaiAcademy/subpartial/ElencoPillole_skeleton.cshtml")
                </div>
        }
    }
    @if ( corsoFPRESConEdiz )
    {
        <div class="row">
            <div class="col-sm-12">
                <h2>Calendario</h2>
                <div id="calendario" class="academy-tab-body" role="tabpanel" tabindex="-1" aria-label="Calendario">
                    @if ( Model.Corso.AltriDettagli.Edizioni.Count <= 0 )
                    {
                        <label class="academy-tab-body">@Model.Corso.AltriDettagli.NoteEdizioni</label>
                    }
                    <div class="row" role="grid">
                        @if ( Model.Corso.AltriDettagli.Edizioni.Count > 0 )
                        {
                            string tabIndex = "0";


                            foreach ( var edizione in Model.Corso.AltriDettagli.Edizioni )
                            {
                                string ariaLabelEdiz = edizione.Nome;
                                ariaLabelEdiz += "\r\nDate: ";
                                if ( edizione.DataInizio != edizione.DataFine )
                                {
                                    ariaLabelEdiz += String.Format( "dal {0:d MMMM yyyy} al {1:d MMMM yyyy}" , edizione.DataInizio , edizione.DataFine );
                                }
                                else
                                {
                                    ariaLabelEdiz += String.Format( "{0:d MMMM yyyy}" , edizione.DataInizio );
                                }
                                ariaLabelEdiz += "\r\nPresso: " + edizione.Luogo;
                                if (edizione.DesLuogo != "") { ariaLabelEdiz += " " + edizione.DesLuogo; }
                                if (edizione.Orario != "") { ariaLabelEdiz += "\r\nOrari: " + edizione.Orario; }

                                <div class="col-sm-6" role="row" aria-label="@ariaLabelEdiz" tabindex="@tabIndex" onfocus="onFocusRow(this)">
                                    <h3>@edizione.Nome</h3>
                                    @if ( edizione.DataInizio != edizione.DataFine )
                                    {
                                        <label class="text-primary">@String.Format( "dal {0:d MMMM yyyy} al {1:d MMMM yyyy}" , edizione.DataInizio , edizione.DataFine )</label><br />
                                    }
                                    else
                                    {
                                        <label class="text-primary">@String.Format( "{0:d MMMM yyyy}" , edizione.DataInizio )</label><br />
                                    }
                                    <label>@edizione.Luogo</label><br />
                                    @if ( edizione.DesLuogo != "" )
                                    {
                                        <label>@edizione.DesLuogo</label><br />
                                    }
                                    <label>@(!String.IsNullOrWhiteSpace( edizione.Orario ) ? edizione.Orario : "Orari non disponibili")</label><br />
                                    @if ( !String.IsNullOrWhiteSpace( edizione.Note ) || edizione.Giornate.Count( ) > 0 )
                                    {
                                        var elencoGiornate = "";
                                        foreach ( var day in edizione.Giornate.OrderBy( x => x.Data ) )
                                        {
                                            elencoGiornate += String.Format( "{0:dd MMMM yyyy} - dalle ore {1:00}:{2:00} alle ore {3:00}:{4:00}<br />" , day.Data , day.DaOra , day.DaMinuti , day.AOra , day.AMinuti );
                                        }

                                        <label><a href="#" onclick="ShowEdizMoreDetails('@edizione.Nome','@elencoGiornate','@edizione.Note')">Maggiori dettagli</a></label><br />
                                    }
                                    @if ( corsoSuRich )
                                    {

                                        if ( edizione.Iscritto == IscrittoEnum.Iscritto )
                                        {
                                            <a role="link" tabindex="-1" class="btn btn-md btn-primary push-20-b disable">Iscritto</a>

                                        }
                                        else if ( edizione.Iscritto == IscrittoEnum.RichiestaInAttesa )
                                        {
                                            <a role="link" tabindex="-1" class="btn btn-md btn-primary push-20-b disable">Richiesta effettuata</a>

                                        }
                                        else if ( edizione.DataInizio != null && edizione.DataInizio > DateTime.Today )
                                        {
                                            if ( edizione.Stato == "E" )
                                            {
                                                <a role="link" tabindex="-1" data-rich-id="@Model.Corso.Id" data-rich-idEdiz="@edizione.IdEdizione" class="btn btn-md btn-primary push-20-b disable" href="javascript:RichiediIscrizioneCorsoEdiz(@Model.Corso.Id, @edizione.IdEdizione)">Richiedi autorizzazione</a>
                                            }
                                        }
                                        else
                                        {
                                            <a role="link" tabindex="-1" class="btn btn-md btn-primary push-20-b disable">Corso avviato</a>
                                        }
                                    }
                                </div>

                                tabIndex = "-1";
                            }
                        }
                        else if ( Model.Corso.Stato != StatoCorsoTipoOffertaEnum.Obbligatoria )
                        {

                            <div class="col-sm-12">
                                <a role="link" tabindex="0" data-rich-id="@Model.Corso.Id" data-rich-idEdiz="0" class="btn btn-md btn-primary push-20-t academy-auth-required" disabled="disabled" href="javascript:Iscriviti(@Model.Corso.Id)">Richiedi autorizzazione</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <br />
    }

    @if ( Model.Corso.Risorse.Risorse.Count > 0 || String.IsNullOrWhiteSpace( Model.Corso.ExternalCourse ) )
    {
        @Html.Partial( "~/Views/RaiAcademy/subpartial/ElencoRisorse.cshtml" , Model.Corso.Risorse )
    }
    else
    {
            @*@Html.AsyncPartial("RaiAcademy", "ElencoRisorse", "?idCorso="+Model.Corso.Id, "~/Views/RaiAcademy/subpartial/ElencoRisorse_skeleton.cshtml", TempData, "EnableResourceButton()")*@
            <div id="elencorisorse">
                @Html.Partial("~/Views/RaiAcademy/subpartial/ElencoRisorse_skeleton.cshtml")
            </div>
    }

    @if (Model.Corso.AltriDettagli.PercorsiFormativi.Any() && Model.Consigliati != null && Model.Consigliati.Items.Count > 0)
    {
        <br />
        <div class="row">
            <div class="col-sm-12">
                <h2 class="academy-consigliati">Consigliati nel percorso</h2>
                <div id="ElencoCorsiConsigliati">
                    @Html.Partial( "~/Views/RaiAcademy/ElencoCorsi.cshtml" , Model.Consigliati )
                    @*@Html.AsyncPartial("RaiAcademy", "ElencoCorsiConsigliati", "~/Views/RaiAcademy/ElencoCorsi_skeleton.cshtml", TempData)*@
                </div>
            </div>
        </div>
    }
    <br />
    <div class="row">
        <div class="col-sm-12">
            <h2 class="academy-per-interessi">Consigliati nell'area formativa</h2>
            <div id="ElencoCorsiAttinenti">
                    @*@Html.AsyncPartial("RaiAcademy", "ElencoCorsiAttinentiArea", "~/Views/RaiAcademy/ElencoCorsi_skeleton.cshtml", TempData, "UpdateUrlImage()")*@
                    @Html.Partial("~/Views/RaiAcademy/ElencoCorsi_skeleton.cshtml")
            </div>
        </div>
    </div>

    @* Vai al catalogo corsi*@
    <div class="row">
        <div class="col-sm-12 text-center">
            <a class="btn btn-lg btn-primary push-20-t" href="@Url.Action("Index", "RaiAcademy")">Torna al Catalogo Corsi</a>
        </div>
    </div>
</div>

<div class="modal " id="modal-richCorso" role="dialog" aria-hidden="true" style="display: none;">
</div>

<div class="modal right fade" id="modal-openScorm" role="dialog" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-dialog-popin modal-lg" style="">
        <div class="modal-content height100">
            <div class="block block-themed block-transparent remove-margin-b">
                <div class="block-header bg-cdf" style="height: 58px;">
                    <ul class="block-options visible-xs">
                        <li>
                            <button data-dismiss="modal" type="button"><span aria-hidden="true">&times;</span></button>
                        </li>
                    </ul>
                    <h4 class="lead" style="float: left; margin: -3px 0 0 0px; font-size: 2.1rem; color: #fff;" id="titoloScorm"></h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div>
                    <input type="hidden" id="scormIdCorso" />
                    <iframe id="iFrameScorm" style="width: 100%; height: 700px;" src=""></iframe>
                </div>
                @*<video id="playerTest" style="width:100%" controls ontimeupdate="UpdateTime" onseeking="" onended="alert('finito')">
                        <source src="/raiacademy/test" type="video/mp4" />
                    </video>
                    <button class="btn btn-md btn-primary" onclick="PlayerPlay()">Play</button>
                    <button class="btn btn-md btn-primary" onclick="PlayerPause()">Pause</button>
                    <button class="btn btn-md btn-primary" onclick="PlayerGoto()">Vai al secondo minuto</button>
                    <label id="currentTime" />*@
            </div>
        </div>
    </div>
</div>

@if (Model.Privacy != null && Model.Privacy.Active)
{
    <div class="rai modal right fade" id="modal-privacy" role="dialog" aria-hidden="true" style="display:none">
        <div class="modal-backdrop fade in" data-dismiss="@(Model.Privacy.IsAccepted?"modal":"")"></div>
        <div class="modal-dialog modal-dialog-popin">
            <div class="rai modal-content">
                <div class="block block-transparent no-margin-bottom">
                    <div class="block-header">
                        <label class="rai-font-modal-heading">Informativa sulla Privacy</label>
                        @if (Model.Privacy.IsAccepted)
                        {
                            <div class="block-options">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            </div>
                        }
                    </div>
                    <div class="block-content rai-font-md" id="info-container">
                        @using (Html.BeginPanel(myRaiHelper.PanelType.NoHeader, ""))
                        {
                            <div class="row">
                                <div class="col-md-1 col-lg-2 hidden-sm"></div>
                                <div class="col-sm-12 col-md-10 col-lg-8">
                                    @Html.Raw(Model.Privacy.Text)
                                </div>
                                <div class="col-md-1 col-lg-2 hidden-sm"></div>
                            </div>
                            if (!Model.Privacy.IsAccepted)
                            {
                                <div class="row push-10-t">
                                    <div class="col-md-1 col-lg-2 hidden-sm"></div>
                                    <div class="col-sm-12 col-md-10 col-lg-8">
                                        <div class="rai-checkbox">
                                            <input type="checkbox" id="checkPrivacy" onclick="$('#accept_privacy')[0].disabled=!$('#checkPrivacy')[0].checked" />
                                            <label for="checkPrivacy">Ho preso visione</label>
                                        </div>
                                    </div>
                                    <div class="col-md-1 col-lg-2 hidden-sm"></div>
                                </div>

                                <div class="row push-20-t push-10">
                                    <div class="col-sm-12 text-center">
                                        <button id="accept_privacy" class="btn btn-lg rai-btn-primary" disabled onclick="onPrivacyAcceptance()">Salva</button>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row push-20-t push-10">
                                    <div class="col-sm-12 text-center">
                                        <p>Informativa sulla privacy visionata il</p>
                                        <br />
                                        <span class="btn-lg well">@Model.Privacy.AcceptanceDate.Value.ToString("dd/MM/yyyy HH:mm:ss")</span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section afterjs {
    @if (Model.Privacy != null && Model.Privacy.Active && !Model.Privacy.IsAccepted)
    {
        <script>
            function ApriModalePrivacy() {
                $('#modal-privacy').modal('show');
                $('#info-container').scrollTop(0);
            }
            ApriModalePrivacy();
        </script>
        <script>
            function onPrivacyAcceptance() {
                $.ajax({
                    url: "/RaiAcademy/AccettazionePrivacy",
                    type: "POST",
                    dataType: "html",
                    data: {},
                    success: function (data) {
                        switch (data) {
                            case "OK":
                                $('#modal-privacy').modal('hide');
                                break;
                            default:
                                swal({
                                    type: 'error',
                                    title: 'Oops...',
                                    text: data,
                                    customClass: 'rai'
                                });
                                break;
                        }
                    },
                    error: function (result) {
                        swal({
                            type: 'error',
                            title: 'Oops...',
                            text: 'Si è verificato un errore imprevisto',
                            customClass: 'rai'
                        });
                    }
                });
            }
        </script>
    }


    @if (!String.IsNullOrWhiteSpace(Model.Corso.ExternalCourse))
    {
        <script>
            RaiUpdateWidget('elencopillole', '@Url.Action("ElencoPillole","RaiAcademy")', 'html', { idCorso:@(Model.Corso.Id), extCourse: '@(Model.Corso.ExternalCourse)', iscritto: '@(Model.Corso.Iscritto)', stato: '@(Model.Corso.Stato)' }, false, function() {
                EnableCourseButton();
            },true);
            RaiUpdateWidget('elencorisorse', '@Url.Action("ElencoRisorse","RaiAcademy")', 'html', { idCorso:@(Model.Corso.Id), extCourse: '@(Model.Corso.ExternalCourse)', iscritto: '@(Model.Corso.Iscritto)', stato: '@(Model.Corso.Stato)' }, false, function() {
                EnableResourceButton();
            }, true);
        </script>
    }

    <script>
        RaiUpdateWidget('ElencoCorsiAttinenti', '@Url.Action("ElencoCorsiAttinentiArea", "RaiAcademy")', 'html', { idCorso:@(Model.Corso.Id), area: '@(Model.Corso.IdAreaFormativa)' }, false, function() {
            UpdateUrlImage();
            }, true);
    </script>

    @Html.Raw( TempData["script"] )
    <script>
        var player = document.getElementById("playerTest");

        document.addEventListener("scroll", function () {
            if ($("#btnTab").length < 1)
                var s = $(window).scrollTop();
            else
                var s = $("#btnTab").offset().top - $(window).scrollTop();

            if (s < 60) {
                s = 60;
                $("#btnTab").css("width", $("#btnTab").width() + "px");
                $("#btnTab").css("position", "fixed");
                $("#btnTab").css("top", s + "px");
            }
            if ($(window).scrollTop() < 550) {
                $("#btnTab").css("position", "");
                $("#btnTab").css("top", "");

                $('.a_obiettivi').addClass('panel-featured-primary');
                $('.a_obiettivi').addClass('text-primary');
            }

            CheckVisibleElement("obiettivi");
            CheckVisibleElement("dettagli");
            CheckVisibleElement("corsi");
            CheckVisibleElement("calendario");
            CheckVisibleElement("risorse");
        });

        function CheckVisibleElement(nameElem) {
            var divElem = document.getElementById(nameElem);
            if (divElem) {
                if (!$.UIRai.checkVisibleComplete(divElem, 60, "visible")) {
                    $('.a_' + nameElem).removeClass('panel-featured-primary');
                    $('.a_' + nameElem).removeClass('text-primary');
                }
                else {
                    var rect = divElem.getBoundingClientRect();
                    if (rect.top >= 155 && rect.top <= 175) {

                        $('.a_obiettivi').removeClass('panel-featured-primary');
                        $('.a_dettagli').removeClass('panel-featured-primary');
                        $('.a_corsi').removeClass('panel-featured-primary');
                        $('.a_calendario').removeClass('panel-featured-primary');
                        $('.a_risorse').removeClass('panel-featured-primary');

                        $('.a_obiettivi').removeClass('text-primary');
                        $('.a_dettagli').removeClass('text-primary');
                        $('.a_corsi').removeClass('text-primary');
                        $('.a_calendario').removeClass('text-primary');
                        $('.a_risorse').removeClass('text-primary');

                        $('.a_' + nameElem).addClass('panel-featured-primary');
                        $('.a_' + nameElem).addClass('text-primary');

                        $('#btnGroupDrop1').text($('.a_' + nameElem).first().text());
                    }
                    else {
                    }
                }
            }
        }

        function ShowEdizMoreDetails(nome, days, note) {

            event.preventDefault();

            var testo = "";
            if (days != "")
                testo += "<h4>Elenco giornate</h4>" + days;

            if (note != "") {
                if (testo != "")
                    testo += "<br/>";

                testo += "<h4>Note aggiuntive</h4>" + note;
            }

            testo = "<div style='text-align:left;'>" + testo + "</div>";

            swal({
                title: 'Edizione ' + nome,
                text: "",
                html: testo,
                width: 700,
                //input: 'text',
                //type: 'warning',
                //showCancelButton: true,
                //confirmButtonColor: '#3085d6',
                //cancelButtonColor: '#d33',
                confirmButtonText: 'Ok',
                //cancelButtonText: 'No, cancel!',
                confirmButtonClass: 'btn btn-primary btn-lg',
                //cancelButtonClass: 'btn btn-danger',
                buttonsStyling: false
            });
        }

        setInterval(refreshIframe, 120000);
        function refreshIframe() {
            console.log('Refresh Ilias...');
            var frame = document.getElementById("iliasLogger");
            if (frame != null) {
                frame.src = frame.src;
            }
        }

    </script>

}