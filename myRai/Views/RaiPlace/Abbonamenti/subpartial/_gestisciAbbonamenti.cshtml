@using System.Globalization;
@using myRaiHelper;
@using myRaiHelper;
@using myRaiCommonModel;
@using myRaiCommonModel.raiplace;
@using MVCProject.Custom_Helpers;
@using myRaiCommonManager;

@model MyAbbonamenti

@using (Html.BeginModal("Richiesta abbonamento"))
{
    <form id="form-gestioneabbonamento" class="js-form1 validation form-horizontal" method="post" action="/Abbonamenti/GestisciAbbonamenti" novalidate="novalidate">
        <div class="form-group" style="margin:0px;">
            <div class="row" id="riga-abbonamento">
                <div class="col-sm-8">
                    <section class="panel">
                        <header class="panel-heading">
                            <label class="panel-title">Dati anagrafici</label>
                        </header>
                        <div class="panel-body">
                            @Html.TextBoxFor(m => m.CittaAbbonamento, htmlAttributes: new { @hidden = true })
                            @Html.TextBoxFor(m => m.InviaMail, htmlAttributes: new { @hidden = true })
                            @Html.TextBoxFor(m => m.Abbonamenti[0].Rinnovo, htmlAttributes: new { @hidden = true })
                            @Html.TextBoxFor(m => m.Abbonamenti[0].idAbbonamento, htmlAttributes: new { @hidden = true })
                            @Html.TextBoxFor(m => m.Abbonamenti[0].Policy, htmlAttributes: new { @hidden = true, id = "Policy" })

                            <div class="row ">
                                <div class="params">
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Matricola, new { @class = "rai-caption" })

                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Matricola, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Matricola, "La matricola è obbligatoria", new { @class = "field-validation-error hidden" })

                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Nome, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Nome, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Nome, "Il nome è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                </div>
                            </div>
                            <div class="row ">
                                <div class="params">
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Cognome, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Cognome, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Cognome, "Il cognome è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                    <div class="col-sm-6">
                                        @if (Model.Abbonamenti[0].DataNascita != new DateTime(1900, 1, 1))
                                        {
                                            @Html.LabelFor(m => m.Abbonamenti[0].DataNascita, "Data di nascita", new { @class = "rai-caption" })
                                            <div class="input-group mb-md" style="position: relative">
                                                @Html.TextBoxFor(m => m.Abbonamenti[0].DataNascita, new { @readonly = true, @class = "js-datetimepicker form-control ", id = "data_nascita", data_format = "DD/MM/YYYY", data_locale = "it", placeholder = "Selezionare Data Nascita", required = "required", onchange = "CtrInput($(this));", Value = Model.Abbonamenti[0].DataNascita.ToString("dd/MM/yyyy") })
                                                <span style="cursor: pointer" onclick="$('#data_nascita').datetimepicker('show')" class="input-group-addon"><i class="icons icon-calendar"></i></span>
                                            </div>
                                            <div>
                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].DataNascita, "La data nascita è obbligatoria", new { @class = "field-validation-error hidden" })
                                            </div>
                                        }
                                    </div>

                                </div>

                            </div>
                            <div class="row ">
                                <div class="params">
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].ComuneNascita, "Comune di nascita", new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].ComuneNascita, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].ComuneNascita, "Il Coumune di Nascita è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].ProvinciaNascita, "Provincia di nascita", new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].ProvinciaNascita, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].ProvinciaNascita, "La provincia di Nascita è obbligatoria", new { @class = "field-validation-error hidden" })
                                    </div>

                                </div>

                            </div>
                            <div class="row ">
                                <div class="params">
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Genere, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Genere, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Genere, "Il genere è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].CodiceFiscale, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].CodiceFiscale, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].CodiceFiscale, "Il codice fiscale è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                </div>
                            </div>
                            <div class="row ">
                                <div class="params">
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Indirizzo, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Indirizzo, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Indirizzo, "L'indirizzo è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Cap, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Cap, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Cap, "Il cap è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                </div>
                            </div>

                            <div class="row ">
                                <div class="params">
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Comune, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Comune, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Comune, "Il comune è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Provincia, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Provincia, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Provincia, "La provincia è obbligatoria", new { @class = "field-validation-error hidden" })
                                    </div>
                                </div>

                            </div>

                            <div class="row ">
                                <div class="params">
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Nazionalita, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Nazionalita, htmlAttributes: new { @readonly = true, @class = "form-control", onchange = "CtrInput($(this));" })
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Email, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Email, htmlAttributes: new { @readonly = true, @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Email, "L' email è obbligatoria", new { @class = "field-validation-error hidden" })
                                    </div>
                                </div>
                            </div>
                            <div class="row ">
                                <div class="params">
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Telefono, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Telefono, htmlAttributes: new { @class = "form-control", required = "required", onchange = "CtrInput($(this));", onkeypress = "return onlyNumeric(event,'valore');" })
                                        @Html.ValidationMessageFor(m => m.Abbonamenti[0].Telefono, "Il telefono è obbligatorio", new { @class = "field-validation-error hidden" })
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(m => m.Abbonamenti[0].Cellulare, new { @class = "rai-caption" })
                                        @Html.TextBoxFor(m => m.Abbonamenti[0].Cellulare, htmlAttributes: new { @class = "form-control", onchange = "CtrInput($(this));", onkeypress = "return onlyNumeric(event,'valore');" })
                                    </div>
                                </div>

                            </div>
                        </div>
                    </section>
                </div>
                <div class="col-sm-4 ">
                    @using (Html.BeginPanel(PanelType.NoHeader, "", false))
                    {

                    <div class="block block-content-table block-transparent">
                        <div class="block-header block-content-mini">
                            <label class="block-title">Dati Abbonamento</label>
                        </div>
                        <div class="block-content">
                            @if (Model.CittaAbbonamento.ToUpper() == "ROMA")
                            {
                                <div class="row ">
                                    @if (Model.Abbonamenti[0].Rinnovo)
                                    {
                                        <div class="params">
                                            <div class="col-sm-12">
                                                <p>
                                                    @Html.LabelFor(m => m.Abbonamenti[0].CodiceAbbonamento, "Codice Abbonamento", new { @class = "rai-caption" })
                                                    <a href="~/assets/codici_abbonamenti/codici_metrebus.pdf" target="_blank">
                                                        <i class="icons icon-doc"></i>
                                                    </a>
                                                    @Html.TextBoxFor(m => m.Abbonamenti[0].CodiceAbbonamento, htmlAttributes: new { @class = "form-control", required = "required", onchange = "CtrInput($(this));", onkeypress = "return onlyNumeric(event,'valore');" })
                                                    @Html.ValidationMessageFor(m => m.Abbonamenti[0].CodiceAbbonamento, "Il Codice Abbonamento è obbligatorio", new { @class = "field-validation-error hidden" })
                                                </p>
                                            </div>
                                        </div>

                                    }
                                    else
                                    {
                                        <div class="params">
                                            <div class="col-sm-12">
                                                <p>
                                                    @Html.LabelFor(m => m.Abbonamenti[0].CodiceAbbonamento, "Codice Abbonamento", new { @class = "rai-caption" })
                                                    <a href="~/assets/codici_abbonamenti/codici_metrebus.pdf" target="_blank">
                                                        <i class="icons icon-doc"></i>
                                                    </a>
                                                    @Html.TextBoxFor(m => m.Abbonamenti[0].CodiceAbbonamento, htmlAttributes: new { @class = "form-control", onchange = "CtrInput($(this));", onkeypress = "return onlyNumeric(event,'valore');" })

                                                </p>
                                            </div>
                                        </div>
                                    }

                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].ZonaAbbonamento, "Tipologia Abbonamento", new { @class = "rai-caption" })
                                                @Html.DropDownListFor(m => m.Abbonamenti[0].IdZonaAbbonamento, new SelectList(@myRai.Controllers.AbbonamentiController.GetZoneAbbonamento(), "Value", "Text", Model.Abbonamenti[0].IdZonaAbbonamento), "Selezionare", new { @class = "form-control", onchange = "CtrInput($(this));", required = "required" })

                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].IdZonaAbbonamento, "Selezionare il tipo di abbonamento", new { @class = "field-validation-error hidden" })
                                            </p>

                                        </div>
                                    </div>
                                    <div class="params">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(m => m.Abbonamenti[0].GiornoInizio, "Giorno di Inizio validità", new { @class = "rai-caption" })
                                            <div class="form-material input-group mb-md" style="position: relative">


                                                @Html.TextBoxFor(m => m.Abbonamenti[0].GiornoInizio, new { @class = "js-datetimepicker form-control", id = "giorno_inizio", data_format = "DD/MM/YYYY", data_locale = "it", placeholder = "Selezionare Giorno Inizio Validità", required = "required", onchange = "CtrInput($(this));" })
                                                <span style="cursor: pointer" onclick="$('#giorno_inizio').datetimepicker('show')" class="input-group-addon"><i class="icons icon-calendar"></i></span>

                                            </div>
                                            <div>
                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].GiornoInizio, "Il Giorno Inizio validità è obbligatorio", new { @class = "field-validation-error hidden" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row ">
                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].NumeroBipCard, "Numero Bip Card", new { @class = "rai-caption" })
                                                @Html.TextBoxFor(m => m.Abbonamenti[0].NumeroBipCard, htmlAttributes: new { @class = "form-control", onchange = "CtrInput($(this));", onkeypress = "return onlyNumeric(event,'valore');" })
                                            </p>
                                        </div>
                                    </div>

                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].TipologiaDocumento, "Tipologia Documento", new { @class = "rai-caption" })
                                                @Html.DropDownListFor(m => m.Abbonamenti[0].IdTipoDocumento, new SelectList(@myRai.Controllers.AbbonamentiController.GetTipoDocumento(), "Value", "Text", Model.Abbonamenti[0].IdTipoDocumento), "Selezionare", new { @class = "form-control", onchange = "CtrInput($(this));", required = "required" })
                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].IdTipoDocumento, "Selezionare il tipo di documento", new { @class = "field-validation-error hidden" })
                                            </p>
                                        </div>
                                    </div>
                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].NumeroDocumento, "Numero Documento", new { @class = "rai-caption" })
                                                @Html.TextBoxFor(m => m.Abbonamenti[0].NumeroDocumento, htmlAttributes: new { @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].NumeroDocumento, "Il Numero Documento è obbligatorio", new { @class = "field-validation-error hidden" })
                                            </p>
                                        </div>
                                    </div>
                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].EnteRilascioDocumento, "Ente Rilascio Documento", new { @class = "rai-caption" })
                                                @Html.TextBoxFor(m => m.Abbonamenti[0].EnteRilascioDocumento, htmlAttributes: new { @class = "form-control", required = "required", onchange = "CtrInput($(this));" })
                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].EnteRilascioDocumento, "Il Numero Documento è obbligatorio", new { @class = "field-validation-error hidden" })
                                            </p>
                                        </div>
                                    </div>
                                    <div class="params">
                                        <div class="col-sm-12">

                                            @Html.LabelFor(m => m.Abbonamenti[0].DataRilascioDocumento, "Data Rilascio Documento", new { @class = "rai-caption" })
                                            <div class="form-material input-group mb-md" style="position: relative">
                                                @Html.TextBoxFor(m => m.Abbonamenti[0].DataRilascioDocumento, new { @class = "js-datetimepicker form-control", id = "data_rilascio", data_format = "DD/MM/YYYY", data_locale = "it", placeholder = "Selezionare Data Rilascio Documento", required = "required", onchange = "CtrInput($(this));" })
                                                <span style="cursor: pointer" onclick="$('#data_rilascio').datetimepicker('show')" class="input-group-addon"><i class="icons icon-calendar"></i></span>

                                            </div>
                                            <div>
                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].DataRilascioDocumento, "la data Rilascio è obbligatoria", new { @class = "field-validation-error hidden" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].VettoreDiAbbonamento, "Vettore Di Abbonamento", new { @class = "rai-caption" })
                                                @Html.DropDownListFor(m => m.Abbonamenti[0].IdVettoreAbbonamento, new SelectList(@myRai.Controllers.AbbonamentiController.GetVettoreAbbonamento(), "Value", "Text", Model.Abbonamenti[0].IdVettoreAbbonamento), "Selezionare", new { @class = "form-control", onchange = "CtrInput($(this));", required = "required" })
                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].IdVettoreAbbonamento, "Selezionare il tipo di vettore", new { @class = "field-validation-error hidden" })
                                            </p>
                                        </div>
                                    </div>
                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].PercorsoDa, "Percorso Da", new { @class = "rai-caption" })
                                                @Html.TextBoxFor(m => m.Abbonamenti[0].PercorsoDa, htmlAttributes: new { @class = "form-control", onchange = "CtrInput($(this));" })
                                            </p>
                                        </div>
                                    </div>
                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].PercorsoA, "Percorso A", new { @class = "rai-caption" })
                                                @Html.TextBoxFor(m => m.Abbonamenti[0].PercorsoA, htmlAttributes: new { @class = "form-control", onchange = "CtrInput($(this));" })
                                            </p>
                                        </div>
                                    </div>
                                    <div class="params">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(m => m.Abbonamenti[0].GiornoInizio, "Giorno di Inizio validità", new { @class = "rai-caption" })
                                            <div class="form-material input-group mb-md" style="position: relative">

                                                @Html.TextBoxFor(m => m.Abbonamenti[0].GiornoInizio, new { @readonly = true, @class = "js-datetimepicker form-control", id = "giorno_inizio", data_format = "DD/MM/YYYY", data_locale = "it", placeholder = "Selezionare Giorno Inizio Validità", required = "required", onchange = "CtrInput($(this));" })
                                                <span style="cursor: pointer" onclick="$('#giorno_inizio').datetimepicker('show')" class="input-group-addon"><i class="icons icon-calendar"></i></span>

                                            </div>
                                            <div>
                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].GiornoInizio, "Il Giorno Inizio validità è obbligatorio", new { @class = "field-validation-error hidden" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="block block-content-table block-transparent">
                        <div class="block-header block-content-mini">
                            <label class="block-title">Dati Economici</label>
                        </div>
                        <div class="block-content">
                            @if (Model.RateUnicaSoluzione == false)
                            {
                                <div class="row ">
                                    <div class="params">
                                        <div class="col-sm-12">
                                            <p>
                                                @Html.LabelFor(m => m.Abbonamenti[0].NumeroRate, "Numero Rate", new { @class = "rai-caption" })
                                                @Html.DropDownListFor(m => m.Abbonamenti[0].NumeroRate, new SelectList(@myRai.Controllers.AbbonamentiController.GeNumeroRate(), "Value", "Text", Model.Abbonamenti[0].NumeroRate), "Selezionare", new { @class = "form-control", onchange = "CtrInput($(this));", required = "required" })

                                                @Html.ValidationMessageFor(m => m.Abbonamenti[0].NumeroRate, "Selezionare il numero di rate", new { @class = "field-validation-error hidden" })
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.Abbonamenti[0].NumeroRate, htmlAttributes: new { @hidden = true })

                            }
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-xs-12" id="dbtn">
                @{string operazione = "";
                    if (Model.Abbonamenti[0].idAbbonamento == 0)
                    {
                        operazione = "Registra";
                    }
                    else
                    {
                        operazione = "Modifica";
                    }
                }
                <input type="button" id="btnInserisciAbbonamento" class="btn rai-btn-primary full-width" title="Registra" value="@operazione" onclick="GestisciAbbonamenti()" />
            </div>
        </div>

        <div id="riepilogo" hidden>
            <div class="row">
                <div class="col-sm-1"></div>
                <div class="col-sm-10" id="testo-riepilogo"></div>
                <div class="col-sm-1"></div>
            </div>
            <div class="row">

                <div class="col-xs-6 text-right">
                    <input type="button" id="btnConfermaAbbonamento" class="btn btn-info" title="Avanti" value="Avanti" disabled onclick="IndietroAbbonamenti()" />


                </div>
            </div>
        </div>



    </form>
}



