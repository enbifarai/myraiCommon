@model Arturo.ModalTemplate

@{
    string classSize = "";
    switch (Model.DialogSize)
    {
        case Arturo.ModalSize.Full:
            break;
        case Arturo.ModalSize.Half:
            classSize = "modal-half-dialog";
            break;
        default:
            break;
    }

    string dialogStyle = "";
    if (!String.IsNullOrWhiteSpace(Model.CustomDialogSize))
    {
        dialogStyle += " width:" + Model.CustomDialogSize + ";";
    }

    string classPosition = "";
    switch (Model.Position)
    {
        case Arturo.ModalPosition.Center:
            break;
        case Arturo.ModalPosition.Right:
            classPosition = "right";
            break;
        default:
            break;
    }

    string additionalModalClass = "";
    string additionalModalAttributes = "";
    string additionalModalStyle = "";
    if (Model.ModalAttributes != null && Model.ModalAttributes.Count() > 0)
    {
        additionalModalClass += String.Join(" ", Model.ModalAttributes.Where(x => x.Name == "class").Select(x => " " + x.Value));
        additionalModalStyle += String.Join(" ", Model.ModalAttributes.Where(x => x.Name == "style").Select(x => " " + x.Value));
        additionalModalAttributes += String.Join(" ", Model.ModalAttributes.Where(x => x.Name != "class").Select(x => x.ToString()));
    }

    string additionalModalContentClass = "";
    string additionalModalContentAttributes = "";
    if (Model.ModalContentAttributes != null && Model.ModalContentAttributes.Count() > 0)
    {
        additionalModalContentClass += String.Join(" ", Model.ModalContentAttributes.Where(x => x.Name == "class").Select(x => " " + x.Value));
        additionalModalContentAttributes += String.Join(" ", Model.ModalContentAttributes.Where(x => x.Name != "class").Select(x => x.ToString()));
    }
}

<div class="modal @(classPosition) fade @additionalModalClass" id="modal-@(Model.Name)" role="dialog" aria-hidden="true" style="display: none; @additionalModalStyle" @Html.Raw(additionalModalAttributes)>
    <div class="modal-dialog modal-dialog-popin @(classSize)" style="@dialogStyle">
        <div class="modal-content @additionalModalContentClass" @Html.Raw(additionalModalContentAttributes)>
            <div id="modal-@(Model.Name)-internal" data-modal-wrapper=""></div>
        </div>
    </div>
</div>