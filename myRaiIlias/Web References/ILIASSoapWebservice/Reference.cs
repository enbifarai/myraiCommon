//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace myRaiIlias.ILIASSoapWebservice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ILIASSoapWebserviceBinding", Namespace="urn:ilUserAdministration")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ilOperation))]
    public partial class ILIASSoapWebservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginCASOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginLDAPOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginStudipUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback startBackgroundTaskWorkerOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignCourseMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback excludeCourseMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAssignedToCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCourseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getObjIdByImportIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefIdsByImportIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefIdsByObjIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getObjectByReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getObjectsByTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTreeChildsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXMLTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeFromSystemByImportIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserRoleEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserRoleEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOperationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback revokePermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback grantPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocalRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRoleFromTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getObjectTreeOperationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback groupExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignGroupMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback excludeGroupMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAssignedToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback distributeMailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ilCloneOperationCompleted;
        
        private System.Threading.SendOrPostCallback handleECSTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback ilCloneDependenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveQuestionResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveQuestionSolutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuestionSolutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPositionOfQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPreviousReachedPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNrOfQuestionsInPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStructureObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback importUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersForContainerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersForRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback hasNewMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNICOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExerciseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback addExerciseOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateExerciseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFileXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getObjIdsByRefIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIMSManifestXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback hasSCORMCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSCORMCompletionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeTestResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCoursesForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPathForRefIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInstallationInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientInfoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSkillCompletionDateForTriggerRefIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSkillUserCertificateForTriggerRefIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSkillTriggerOfAllCertificatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserIdBySidOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteExpiredDualOptInUserObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback readWebLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback createWebLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWebLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLearningProgressChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgressInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportDataCollectionContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback processBackgroundTaskOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ILIASSoapWebservice() {
            this.Url = global::myRaiIlias.Properties.Settings.Default.myRaiIlias_ILIASSoapWebservice_ILIASSoapWebservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event loginCASCompletedEventHandler loginCASCompleted;
        
        /// <remarks/>
        public event loginLDAPCompletedEventHandler loginLDAPCompleted;
        
        /// <remarks/>
        public event loginStudipUserCompletedEventHandler loginStudipUserCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event lookupUserCompletedEventHandler lookupUserCompleted;
        
        /// <remarks/>
        public event getUserCompletedEventHandler getUserCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event addCourseCompletedEventHandler addCourseCompleted;
        
        /// <remarks/>
        public event deleteCourseCompletedEventHandler deleteCourseCompleted;
        
        /// <remarks/>
        public event startBackgroundTaskWorkerCompletedEventHandler startBackgroundTaskWorkerCompleted;
        
        /// <remarks/>
        public event assignCourseMemberCompletedEventHandler assignCourseMemberCompleted;
        
        /// <remarks/>
        public event excludeCourseMemberCompletedEventHandler excludeCourseMemberCompleted;
        
        /// <remarks/>
        public event isAssignedToCourseCompletedEventHandler isAssignedToCourseCompleted;
        
        /// <remarks/>
        public event getCourseXMLCompletedEventHandler getCourseXMLCompleted;
        
        /// <remarks/>
        public event updateCourseCompletedEventHandler updateCourseCompleted;
        
        /// <remarks/>
        public event getObjIdByImportIdCompletedEventHandler getObjIdByImportIdCompleted;
        
        /// <remarks/>
        public event getRefIdsByImportIdCompletedEventHandler getRefIdsByImportIdCompleted;
        
        /// <remarks/>
        public event getRefIdsByObjIdCompletedEventHandler getRefIdsByObjIdCompleted;
        
        /// <remarks/>
        public event getObjectByReferenceCompletedEventHandler getObjectByReferenceCompleted;
        
        /// <remarks/>
        public event getObjectsByTitleCompletedEventHandler getObjectsByTitleCompleted;
        
        /// <remarks/>
        public event searchObjectsCompletedEventHandler searchObjectsCompleted;
        
        /// <remarks/>
        public event getTreeChildsCompletedEventHandler getTreeChildsCompleted;
        
        /// <remarks/>
        public event getXMLTreeCompletedEventHandler getXMLTreeCompleted;
        
        /// <remarks/>
        public event addObjectCompletedEventHandler addObjectCompleted;
        
        /// <remarks/>
        public event updateObjectsCompletedEventHandler updateObjectsCompleted;
        
        /// <remarks/>
        public event addReferenceCompletedEventHandler addReferenceCompleted;
        
        /// <remarks/>
        public event deleteObjectCompletedEventHandler deleteObjectCompleted;
        
        /// <remarks/>
        public event removeFromSystemByImportIdCompletedEventHandler removeFromSystemByImportIdCompleted;
        
        /// <remarks/>
        public event addUserRoleEntryCompletedEventHandler addUserRoleEntryCompleted;
        
        /// <remarks/>
        public event deleteUserRoleEntryCompletedEventHandler deleteUserRoleEntryCompleted;
        
        /// <remarks/>
        public event getOperationsCompletedEventHandler getOperationsCompleted;
        
        /// <remarks/>
        public event revokePermissionsCompletedEventHandler revokePermissionsCompleted;
        
        /// <remarks/>
        public event grantPermissionsCompletedEventHandler grantPermissionsCompleted;
        
        /// <remarks/>
        public event getLocalRolesCompletedEventHandler getLocalRolesCompleted;
        
        /// <remarks/>
        public event getUserRolesCompletedEventHandler getUserRolesCompleted;
        
        /// <remarks/>
        public event addRoleCompletedEventHandler addRoleCompleted;
        
        /// <remarks/>
        public event deleteRoleCompletedEventHandler deleteRoleCompleted;
        
        /// <remarks/>
        public event addRoleFromTemplateCompletedEventHandler addRoleFromTemplateCompleted;
        
        /// <remarks/>
        public event getObjectTreeOperationsCompletedEventHandler getObjectTreeOperationsCompleted;
        
        /// <remarks/>
        public event addGroupCompletedEventHandler addGroupCompleted;
        
        /// <remarks/>
        public event groupExistsCompletedEventHandler groupExistsCompleted;
        
        /// <remarks/>
        public event getGroupCompletedEventHandler getGroupCompleted;
        
        /// <remarks/>
        public event assignGroupMemberCompletedEventHandler assignGroupMemberCompleted;
        
        /// <remarks/>
        public event excludeGroupMemberCompletedEventHandler excludeGroupMemberCompleted;
        
        /// <remarks/>
        public event isAssignedToGroupCompletedEventHandler isAssignedToGroupCompleted;
        
        /// <remarks/>
        public event sendMailCompletedEventHandler sendMailCompleted;
        
        /// <remarks/>
        public event distributeMailsCompletedEventHandler distributeMailsCompleted;
        
        /// <remarks/>
        public event ilCloneCompletedEventHandler ilCloneCompleted;
        
        /// <remarks/>
        public event handleECSTasksCompletedEventHandler handleECSTasksCompleted;
        
        /// <remarks/>
        public event ilCloneDependenciesCompletedEventHandler ilCloneDependenciesCompleted;
        
        /// <remarks/>
        public event saveQuestionResultCompletedEventHandler saveQuestionResultCompleted;
        
        /// <remarks/>
        public event saveQuestionCompletedEventHandler saveQuestionCompleted;
        
        /// <remarks/>
        public event saveQuestionSolutionCompletedEventHandler saveQuestionSolutionCompleted;
        
        /// <remarks/>
        public event getQuestionSolutionCompletedEventHandler getQuestionSolutionCompleted;
        
        /// <remarks/>
        public event getTestUserDataCompletedEventHandler getTestUserDataCompleted;
        
        /// <remarks/>
        public event getPositionOfQuestionCompletedEventHandler getPositionOfQuestionCompleted;
        
        /// <remarks/>
        public event getPreviousReachedPointsCompletedEventHandler getPreviousReachedPointsCompleted;
        
        /// <remarks/>
        public event getNrOfQuestionsInPassCompletedEventHandler getNrOfQuestionsInPassCompleted;
        
        /// <remarks/>
        public event getStructureObjectsCompletedEventHandler getStructureObjectsCompleted;
        
        /// <remarks/>
        public event importUsersCompletedEventHandler importUsersCompleted;
        
        /// <remarks/>
        public event getRolesCompletedEventHandler getRolesCompleted;
        
        /// <remarks/>
        public event getUsersForContainerCompletedEventHandler getUsersForContainerCompleted;
        
        /// <remarks/>
        public event getUsersForRoleCompletedEventHandler getUsersForRoleCompleted;
        
        /// <remarks/>
        public event searchUserCompletedEventHandler searchUserCompleted;
        
        /// <remarks/>
        public event hasNewMailCompletedEventHandler hasNewMailCompleted;
        
        /// <remarks/>
        public event getNICCompletedEventHandler getNICCompleted;
        
        /// <remarks/>
        public event getExerciseXMLCompletedEventHandler getExerciseXMLCompleted;
        
        /// <remarks/>
        public event addExerciseCompletedEventHandler addExerciseCompleted;
        
        /// <remarks/>
        public event updateExerciseCompletedEventHandler updateExerciseCompleted;
        
        /// <remarks/>
        public event getFileXMLCompletedEventHandler getFileXMLCompleted;
        
        /// <remarks/>
        public event addFileCompletedEventHandler addFileCompleted;
        
        /// <remarks/>
        public event updateFileCompletedEventHandler updateFileCompleted;
        
        /// <remarks/>
        public event getUserXMLCompletedEventHandler getUserXMLCompleted;
        
        /// <remarks/>
        public event getObjIdsByRefIdsCompletedEventHandler getObjIdsByRefIdsCompleted;
        
        /// <remarks/>
        public event updateGroupCompletedEventHandler updateGroupCompleted;
        
        /// <remarks/>
        public event getIMSManifestXMLCompletedEventHandler getIMSManifestXMLCompleted;
        
        /// <remarks/>
        public event hasSCORMCertificateCompletedEventHandler hasSCORMCertificateCompleted;
        
        /// <remarks/>
        public event getSCORMCompletionStatusCompletedEventHandler getSCORMCompletionStatusCompleted;
        
        /// <remarks/>
        public event copyObjectCompletedEventHandler copyObjectCompleted;
        
        /// <remarks/>
        public event moveObjectCompletedEventHandler moveObjectCompleted;
        
        /// <remarks/>
        public event getTestResultsCompletedEventHandler getTestResultsCompleted;
        
        /// <remarks/>
        public event removeTestResultsCompletedEventHandler removeTestResultsCompleted;
        
        /// <remarks/>
        public event getCoursesForUserCompletedEventHandler getCoursesForUserCompleted;
        
        /// <remarks/>
        public event getGroupsForUserCompletedEventHandler getGroupsForUserCompleted;
        
        /// <remarks/>
        public event getPathForRefIdCompletedEventHandler getPathForRefIdCompleted;
        
        /// <remarks/>
        public event searchRolesCompletedEventHandler searchRolesCompleted;
        
        /// <remarks/>
        public event getInstallationInfoXMLCompletedEventHandler getInstallationInfoXMLCompleted;
        
        /// <remarks/>
        public event getClientInfoXMLCompletedEventHandler getClientInfoXMLCompleted;
        
        /// <remarks/>
        public event getSkillCompletionDateForTriggerRefIdCompletedEventHandler getSkillCompletionDateForTriggerRefIdCompleted;
        
        /// <remarks/>
        public event checkSkillUserCertificateForTriggerRefIdCompletedEventHandler checkSkillUserCertificateForTriggerRefIdCompleted;
        
        /// <remarks/>
        public event getSkillTriggerOfAllCertificatesCompletedEventHandler getSkillTriggerOfAllCertificatesCompleted;
        
        /// <remarks/>
        public event getUserIdBySidCompletedEventHandler getUserIdBySidCompleted;
        
        /// <remarks/>
        public event deleteExpiredDualOptInUserObjectsCompletedEventHandler deleteExpiredDualOptInUserObjectsCompleted;
        
        /// <remarks/>
        public event readWebLinkCompletedEventHandler readWebLinkCompleted;
        
        /// <remarks/>
        public event createWebLinkCompletedEventHandler createWebLinkCompleted;
        
        /// <remarks/>
        public event updateWebLinkCompletedEventHandler updateWebLinkCompleted;
        
        /// <remarks/>
        public event getLearningProgressChangesCompletedEventHandler getLearningProgressChangesCompleted;
        
        /// <remarks/>
        public event deleteProgressCompletedEventHandler deleteProgressCompleted;
        
        /// <remarks/>
        public event getProgressInfoCompletedEventHandler getProgressInfoCompleted;
        
        /// <remarks/>
        public event exportDataCollectionContentCompletedEventHandler exportDataCollectionContentCompleted;
        
        /// <remarks/>
        public event processBackgroundTaskCompletedEventHandler processBackgroundTaskCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#login", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("sid")]
        public string login(string client, string username, string password) {
            object[] results = this.Invoke("login", new object[] {
                        client,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string client, string username, string password) {
            this.loginAsync(client, username, password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string client, string username, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        client,
                        username,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#loginCAS", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("sid")]
        public string loginCAS(string client, string PT, string user) {
            object[] results = this.Invoke("loginCAS", new object[] {
                        client,
                        PT,
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginCASAsync(string client, string PT, string user) {
            this.loginCASAsync(client, PT, user, null);
        }
        
        /// <remarks/>
        public void loginCASAsync(string client, string PT, string user, object userState) {
            if ((this.loginCASOperationCompleted == null)) {
                this.loginCASOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginCASOperationCompleted);
            }
            this.InvokeAsync("loginCAS", new object[] {
                        client,
                        PT,
                        user}, this.loginCASOperationCompleted, userState);
        }
        
        private void OnloginCASOperationCompleted(object arg) {
            if ((this.loginCASCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCASCompleted(this, new loginCASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#login", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("sid")]
        public string loginLDAP(string client, string username, string password) {
            object[] results = this.Invoke("loginLDAP", new object[] {
                        client,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginLDAPAsync(string client, string username, string password) {
            this.loginLDAPAsync(client, username, password, null);
        }
        
        /// <remarks/>
        public void loginLDAPAsync(string client, string username, string password, object userState) {
            if ((this.loginLDAPOperationCompleted == null)) {
                this.loginLDAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginLDAPOperationCompleted);
            }
            this.InvokeAsync("loginLDAP", new object[] {
                        client,
                        username,
                        password}, this.loginLDAPOperationCompleted, userState);
        }
        
        private void OnloginLDAPOperationCompleted(object arg) {
            if ((this.loginLDAPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginLDAPCompleted(this, new loginLDAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#loginStudipUser", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        public void loginStudipUser(ref string sid, int user_id) {
            object[] results = this.Invoke("loginStudipUser", new object[] {
                        sid,
                        user_id});
            sid = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginStudipUserAsync(string sid, int user_id) {
            this.loginStudipUserAsync(sid, user_id, null);
        }
        
        /// <remarks/>
        public void loginStudipUserAsync(string sid, int user_id, object userState) {
            if ((this.loginStudipUserOperationCompleted == null)) {
                this.loginStudipUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginStudipUserOperationCompleted);
            }
            this.InvokeAsync("loginStudipUser", new object[] {
                        sid,
                        user_id}, this.loginStudipUserOperationCompleted, userState);
        }
        
        private void OnloginStudipUserOperationCompleted(object arg) {
            if ((this.loginStudipUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginStudipUserCompleted(this, new loginStudipUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#logout", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool logout(string sid) {
            object[] results = this.Invoke("logout", new object[] {
                        sid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void logoutAsync(string sid) {
            this.logoutAsync(sid, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string sid, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        sid}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#lookupUser", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("usr_id")]
        public int lookupUser(string sid, string user_name) {
            object[] results = this.Invoke("lookupUser", new object[] {
                        sid,
                        user_name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void lookupUserAsync(string sid, string user_name) {
            this.lookupUserAsync(sid, user_name, null);
        }
        
        /// <remarks/>
        public void lookupUserAsync(string sid, string user_name, object userState) {
            if ((this.lookupUserOperationCompleted == null)) {
                this.lookupUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupUserOperationCompleted);
            }
            this.InvokeAsync("lookupUser", new object[] {
                        sid,
                        user_name}, this.lookupUserOperationCompleted, userState);
        }
        
        private void OnlookupUserOperationCompleted(object arg) {
            if ((this.lookupUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupUserCompleted(this, new lookupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getUser", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("user_data")]
        public ilUserData getUser(string sid, int user_id) {
            object[] results = this.Invoke("getUser", new object[] {
                        sid,
                        user_id});
            return ((ilUserData)(results[0]));
        }
        
        /// <remarks/>
        public void getUserAsync(string sid, int user_id) {
            this.getUserAsync(sid, user_id, null);
        }
        
        /// <remarks/>
        public void getUserAsync(string sid, int user_id, object userState) {
            if ((this.getUserOperationCompleted == null)) {
                this.getUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOperationCompleted);
            }
            this.InvokeAsync("getUser", new object[] {
                        sid,
                        user_id}, this.getUserOperationCompleted, userState);
        }
        
        private void OngetUserOperationCompleted(object arg) {
            if ((this.getUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCompleted(this, new getUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#deleteUser", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool deleteUser(string sid, int user_id) {
            object[] results = this.Invoke("deleteUser", new object[] {
                        sid,
                        user_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserAsync(string sid, int user_id) {
            this.deleteUserAsync(sid, user_id, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(string sid, int user_id, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        sid,
                        user_id}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addCourse", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("course_id")]
        public int addCourse(string sid, int target_id, string crs_xml) {
            object[] results = this.Invoke("addCourse", new object[] {
                        sid,
                        target_id,
                        crs_xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addCourseAsync(string sid, int target_id, string crs_xml) {
            this.addCourseAsync(sid, target_id, crs_xml, null);
        }
        
        /// <remarks/>
        public void addCourseAsync(string sid, int target_id, string crs_xml, object userState) {
            if ((this.addCourseOperationCompleted == null)) {
                this.addCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCourseOperationCompleted);
            }
            this.InvokeAsync("addCourse", new object[] {
                        sid,
                        target_id,
                        crs_xml}, this.addCourseOperationCompleted, userState);
        }
        
        private void OnaddCourseOperationCompleted(object arg) {
            if ((this.addCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCourseCompleted(this, new addCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#deleteCourse", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool deleteCourse(string sid, int course_id) {
            object[] results = this.Invoke("deleteCourse", new object[] {
                        sid,
                        course_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCourseAsync(string sid, int course_id) {
            this.deleteCourseAsync(sid, course_id, null);
        }
        
        /// <remarks/>
        public void deleteCourseAsync(string sid, int course_id, object userState) {
            if ((this.deleteCourseOperationCompleted == null)) {
                this.deleteCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCourseOperationCompleted);
            }
            this.InvokeAsync("deleteCourse", new object[] {
                        sid,
                        course_id}, this.deleteCourseOperationCompleted, userState);
        }
        
        private void OndeleteCourseOperationCompleted(object arg) {
            if ((this.deleteCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCourseCompleted(this, new deleteCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#startBackgroundTaskWorker", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool startBackgroundTaskWorker(string sid) {
            object[] results = this.Invoke("startBackgroundTaskWorker", new object[] {
                        sid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void startBackgroundTaskWorkerAsync(string sid) {
            this.startBackgroundTaskWorkerAsync(sid, null);
        }
        
        /// <remarks/>
        public void startBackgroundTaskWorkerAsync(string sid, object userState) {
            if ((this.startBackgroundTaskWorkerOperationCompleted == null)) {
                this.startBackgroundTaskWorkerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartBackgroundTaskWorkerOperationCompleted);
            }
            this.InvokeAsync("startBackgroundTaskWorker", new object[] {
                        sid}, this.startBackgroundTaskWorkerOperationCompleted, userState);
        }
        
        private void OnstartBackgroundTaskWorkerOperationCompleted(object arg) {
            if ((this.startBackgroundTaskWorkerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startBackgroundTaskWorkerCompleted(this, new startBackgroundTaskWorkerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#assignCourseMember", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool assignCourseMember(string sid, int course_id, int user_id, string type) {
            object[] results = this.Invoke("assignCourseMember", new object[] {
                        sid,
                        course_id,
                        user_id,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void assignCourseMemberAsync(string sid, int course_id, int user_id, string type) {
            this.assignCourseMemberAsync(sid, course_id, user_id, type, null);
        }
        
        /// <remarks/>
        public void assignCourseMemberAsync(string sid, int course_id, int user_id, string type, object userState) {
            if ((this.assignCourseMemberOperationCompleted == null)) {
                this.assignCourseMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignCourseMemberOperationCompleted);
            }
            this.InvokeAsync("assignCourseMember", new object[] {
                        sid,
                        course_id,
                        user_id,
                        type}, this.assignCourseMemberOperationCompleted, userState);
        }
        
        private void OnassignCourseMemberOperationCompleted(object arg) {
            if ((this.assignCourseMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignCourseMemberCompleted(this, new assignCourseMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#excludeCourseMember", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool excludeCourseMember(string sid, int course_id, int user_id) {
            object[] results = this.Invoke("excludeCourseMember", new object[] {
                        sid,
                        course_id,
                        user_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void excludeCourseMemberAsync(string sid, int course_id, int user_id) {
            this.excludeCourseMemberAsync(sid, course_id, user_id, null);
        }
        
        /// <remarks/>
        public void excludeCourseMemberAsync(string sid, int course_id, int user_id, object userState) {
            if ((this.excludeCourseMemberOperationCompleted == null)) {
                this.excludeCourseMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexcludeCourseMemberOperationCompleted);
            }
            this.InvokeAsync("excludeCourseMember", new object[] {
                        sid,
                        course_id,
                        user_id}, this.excludeCourseMemberOperationCompleted, userState);
        }
        
        private void OnexcludeCourseMemberOperationCompleted(object arg) {
            if ((this.excludeCourseMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.excludeCourseMemberCompleted(this, new excludeCourseMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#isAssignedToCourse", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("role")]
        public int isAssignedToCourse(string sid, int course_id, int user_id) {
            object[] results = this.Invoke("isAssignedToCourse", new object[] {
                        sid,
                        course_id,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void isAssignedToCourseAsync(string sid, int course_id, int user_id) {
            this.isAssignedToCourseAsync(sid, course_id, user_id, null);
        }
        
        /// <remarks/>
        public void isAssignedToCourseAsync(string sid, int course_id, int user_id, object userState) {
            if ((this.isAssignedToCourseOperationCompleted == null)) {
                this.isAssignedToCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAssignedToCourseOperationCompleted);
            }
            this.InvokeAsync("isAssignedToCourse", new object[] {
                        sid,
                        course_id,
                        user_id}, this.isAssignedToCourseOperationCompleted, userState);
        }
        
        private void OnisAssignedToCourseOperationCompleted(object arg) {
            if ((this.isAssignedToCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAssignedToCourseCompleted(this, new isAssignedToCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getCourseXML", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getCourseXML(string sid, int course_id) {
            object[] results = this.Invoke("getCourseXML", new object[] {
                        sid,
                        course_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCourseXMLAsync(string sid, int course_id) {
            this.getCourseXMLAsync(sid, course_id, null);
        }
        
        /// <remarks/>
        public void getCourseXMLAsync(string sid, int course_id, object userState) {
            if ((this.getCourseXMLOperationCompleted == null)) {
                this.getCourseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCourseXMLOperationCompleted);
            }
            this.InvokeAsync("getCourseXML", new object[] {
                        sid,
                        course_id}, this.getCourseXMLOperationCompleted, userState);
        }
        
        private void OngetCourseXMLOperationCompleted(object arg) {
            if ((this.getCourseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCourseXMLCompleted(this, new getCourseXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#updateCourse", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool updateCourse(string sid, int course_id, string xml) {
            object[] results = this.Invoke("updateCourse", new object[] {
                        sid,
                        course_id,
                        xml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateCourseAsync(string sid, int course_id, string xml) {
            this.updateCourseAsync(sid, course_id, xml, null);
        }
        
        /// <remarks/>
        public void updateCourseAsync(string sid, int course_id, string xml, object userState) {
            if ((this.updateCourseOperationCompleted == null)) {
                this.updateCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCourseOperationCompleted);
            }
            this.InvokeAsync("updateCourse", new object[] {
                        sid,
                        course_id,
                        xml}, this.updateCourseOperationCompleted, userState);
        }
        
        private void OnupdateCourseOperationCompleted(object arg) {
            if ((this.updateCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCourseCompleted(this, new updateCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getCourseIdByImportId", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("obj_id")]
        public int getObjIdByImportId(string sid, string import_id) {
            object[] results = this.Invoke("getObjIdByImportId", new object[] {
                        sid,
                        import_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getObjIdByImportIdAsync(string sid, string import_id) {
            this.getObjIdByImportIdAsync(sid, import_id, null);
        }
        
        /// <remarks/>
        public void getObjIdByImportIdAsync(string sid, string import_id, object userState) {
            if ((this.getObjIdByImportIdOperationCompleted == null)) {
                this.getObjIdByImportIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetObjIdByImportIdOperationCompleted);
            }
            this.InvokeAsync("getObjIdByImportId", new object[] {
                        sid,
                        import_id}, this.getObjIdByImportIdOperationCompleted, userState);
        }
        
        private void OngetObjIdByImportIdOperationCompleted(object arg) {
            if ((this.getObjIdByImportIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getObjIdByImportIdCompleted(this, new getObjIdByImportIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getRefIdsByImportId", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("ref_ids")]
        public int[] getRefIdsByImportId(string sid, string import_id) {
            object[] results = this.Invoke("getRefIdsByImportId", new object[] {
                        sid,
                        import_id});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getRefIdsByImportIdAsync(string sid, string import_id) {
            this.getRefIdsByImportIdAsync(sid, import_id, null);
        }
        
        /// <remarks/>
        public void getRefIdsByImportIdAsync(string sid, string import_id, object userState) {
            if ((this.getRefIdsByImportIdOperationCompleted == null)) {
                this.getRefIdsByImportIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefIdsByImportIdOperationCompleted);
            }
            this.InvokeAsync("getRefIdsByImportId", new object[] {
                        sid,
                        import_id}, this.getRefIdsByImportIdOperationCompleted, userState);
        }
        
        private void OngetRefIdsByImportIdOperationCompleted(object arg) {
            if ((this.getRefIdsByImportIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefIdsByImportIdCompleted(this, new getRefIdsByImportIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getRefIdsByObjId", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("ref_ids")]
        public int[] getRefIdsByObjId(string sid, string obj_id) {
            object[] results = this.Invoke("getRefIdsByObjId", new object[] {
                        sid,
                        obj_id});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getRefIdsByObjIdAsync(string sid, string obj_id) {
            this.getRefIdsByObjIdAsync(sid, obj_id, null);
        }
        
        /// <remarks/>
        public void getRefIdsByObjIdAsync(string sid, string obj_id, object userState) {
            if ((this.getRefIdsByObjIdOperationCompleted == null)) {
                this.getRefIdsByObjIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefIdsByObjIdOperationCompleted);
            }
            this.InvokeAsync("getRefIdsByObjId", new object[] {
                        sid,
                        obj_id}, this.getRefIdsByObjIdOperationCompleted, userState);
        }
        
        private void OngetRefIdsByObjIdOperationCompleted(object arg) {
            if ((this.getRefIdsByObjIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefIdsByObjIdCompleted(this, new getRefIdsByObjIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getObjectByReference", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("object_xml")]
        public string getObjectByReference(string sid, int reference_id, int user_id) {
            object[] results = this.Invoke("getObjectByReference", new object[] {
                        sid,
                        reference_id,
                        user_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getObjectByReferenceAsync(string sid, int reference_id, int user_id) {
            this.getObjectByReferenceAsync(sid, reference_id, user_id, null);
        }
        
        /// <remarks/>
        public void getObjectByReferenceAsync(string sid, int reference_id, int user_id, object userState) {
            if ((this.getObjectByReferenceOperationCompleted == null)) {
                this.getObjectByReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetObjectByReferenceOperationCompleted);
            }
            this.InvokeAsync("getObjectByReference", new object[] {
                        sid,
                        reference_id,
                        user_id}, this.getObjectByReferenceOperationCompleted, userState);
        }
        
        private void OngetObjectByReferenceOperationCompleted(object arg) {
            if ((this.getObjectByReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getObjectByReferenceCompleted(this, new getObjectByReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getObjectsByTitle", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("object_xml")]
        public string getObjectsByTitle(string sid, string title, int user_id) {
            object[] results = this.Invoke("getObjectsByTitle", new object[] {
                        sid,
                        title,
                        user_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getObjectsByTitleAsync(string sid, string title, int user_id) {
            this.getObjectsByTitleAsync(sid, title, user_id, null);
        }
        
        /// <remarks/>
        public void getObjectsByTitleAsync(string sid, string title, int user_id, object userState) {
            if ((this.getObjectsByTitleOperationCompleted == null)) {
                this.getObjectsByTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetObjectsByTitleOperationCompleted);
            }
            this.InvokeAsync("getObjectsByTitle", new object[] {
                        sid,
                        title,
                        user_id}, this.getObjectsByTitleOperationCompleted, userState);
        }
        
        private void OngetObjectsByTitleOperationCompleted(object arg) {
            if ((this.getObjectsByTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getObjectsByTitleCompleted(this, new getObjectsByTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#searchObjects", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("object_xml")]
        public string searchObjects(string sid, string[] types, string key, string combination, int user_id) {
            object[] results = this.Invoke("searchObjects", new object[] {
                        sid,
                        types,
                        key,
                        combination,
                        user_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchObjectsAsync(string sid, string[] types, string key, string combination, int user_id) {
            this.searchObjectsAsync(sid, types, key, combination, user_id, null);
        }
        
        /// <remarks/>
        public void searchObjectsAsync(string sid, string[] types, string key, string combination, int user_id, object userState) {
            if ((this.searchObjectsOperationCompleted == null)) {
                this.searchObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchObjectsOperationCompleted);
            }
            this.InvokeAsync("searchObjects", new object[] {
                        sid,
                        types,
                        key,
                        combination,
                        user_id}, this.searchObjectsOperationCompleted, userState);
        }
        
        private void OnsearchObjectsOperationCompleted(object arg) {
            if ((this.searchObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchObjectsCompleted(this, new searchObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getTreeChilds", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("object_xml")]
        public string getTreeChilds(string sid, int ref_id, string[] types, int user_id) {
            object[] results = this.Invoke("getTreeChilds", new object[] {
                        sid,
                        ref_id,
                        types,
                        user_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTreeChildsAsync(string sid, int ref_id, string[] types, int user_id) {
            this.getTreeChildsAsync(sid, ref_id, types, user_id, null);
        }
        
        /// <remarks/>
        public void getTreeChildsAsync(string sid, int ref_id, string[] types, int user_id, object userState) {
            if ((this.getTreeChildsOperationCompleted == null)) {
                this.getTreeChildsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTreeChildsOperationCompleted);
            }
            this.InvokeAsync("getTreeChilds", new object[] {
                        sid,
                        ref_id,
                        types,
                        user_id}, this.getTreeChildsOperationCompleted, userState);
        }
        
        private void OngetTreeChildsOperationCompleted(object arg) {
            if ((this.getTreeChildsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTreeChildsCompleted(this, new getTreeChildsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getXMLTree", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("object_xml")]
        public string getXMLTree(string sid, int ref_id, string[] types, int user_id) {
            object[] results = this.Invoke("getXMLTree", new object[] {
                        sid,
                        ref_id,
                        types,
                        user_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getXMLTreeAsync(string sid, int ref_id, string[] types, int user_id) {
            this.getXMLTreeAsync(sid, ref_id, types, user_id, null);
        }
        
        /// <remarks/>
        public void getXMLTreeAsync(string sid, int ref_id, string[] types, int user_id, object userState) {
            if ((this.getXMLTreeOperationCompleted == null)) {
                this.getXMLTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXMLTreeOperationCompleted);
            }
            this.InvokeAsync("getXMLTree", new object[] {
                        sid,
                        ref_id,
                        types,
                        user_id}, this.getXMLTreeOperationCompleted, userState);
        }
        
        private void OngetXMLTreeOperationCompleted(object arg) {
            if ((this.getXMLTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXMLTreeCompleted(this, new getXMLTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addObject", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("ref_id")]
        public int addObject(string sid, int target_id, string object_xml) {
            object[] results = this.Invoke("addObject", new object[] {
                        sid,
                        target_id,
                        object_xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addObjectAsync(string sid, int target_id, string object_xml) {
            this.addObjectAsync(sid, target_id, object_xml, null);
        }
        
        /// <remarks/>
        public void addObjectAsync(string sid, int target_id, string object_xml, object userState) {
            if ((this.addObjectOperationCompleted == null)) {
                this.addObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddObjectOperationCompleted);
            }
            this.InvokeAsync("addObject", new object[] {
                        sid,
                        target_id,
                        object_xml}, this.addObjectOperationCompleted, userState);
        }
        
        private void OnaddObjectOperationCompleted(object arg) {
            if ((this.addObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addObjectCompleted(this, new addObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#updateObjects", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool updateObjects(string sid, string object_xml) {
            object[] results = this.Invoke("updateObjects", new object[] {
                        sid,
                        object_xml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateObjectsAsync(string sid, string object_xml) {
            this.updateObjectsAsync(sid, object_xml, null);
        }
        
        /// <remarks/>
        public void updateObjectsAsync(string sid, string object_xml, object userState) {
            if ((this.updateObjectsOperationCompleted == null)) {
                this.updateObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateObjectsOperationCompleted);
            }
            this.InvokeAsync("updateObjects", new object[] {
                        sid,
                        object_xml}, this.updateObjectsOperationCompleted, userState);
        }
        
        private void OnupdateObjectsOperationCompleted(object arg) {
            if ((this.updateObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateObjectsCompleted(this, new updateObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addReference", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("ref_id")]
        public int addReference(string sid, int source_id, int target_id) {
            object[] results = this.Invoke("addReference", new object[] {
                        sid,
                        source_id,
                        target_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addReferenceAsync(string sid, int source_id, int target_id) {
            this.addReferenceAsync(sid, source_id, target_id, null);
        }
        
        /// <remarks/>
        public void addReferenceAsync(string sid, int source_id, int target_id, object userState) {
            if ((this.addReferenceOperationCompleted == null)) {
                this.addReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddReferenceOperationCompleted);
            }
            this.InvokeAsync("addReference", new object[] {
                        sid,
                        source_id,
                        target_id}, this.addReferenceOperationCompleted, userState);
        }
        
        private void OnaddReferenceOperationCompleted(object arg) {
            if ((this.addReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addReferenceCompleted(this, new addReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#deleteObject", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool deleteObject(string sid, int reference_id) {
            object[] results = this.Invoke("deleteObject", new object[] {
                        sid,
                        reference_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteObjectAsync(string sid, int reference_id) {
            this.deleteObjectAsync(sid, reference_id, null);
        }
        
        /// <remarks/>
        public void deleteObjectAsync(string sid, int reference_id, object userState) {
            if ((this.deleteObjectOperationCompleted == null)) {
                this.deleteObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteObjectOperationCompleted);
            }
            this.InvokeAsync("deleteObject", new object[] {
                        sid,
                        reference_id}, this.deleteObjectOperationCompleted, userState);
        }
        
        private void OndeleteObjectOperationCompleted(object arg) {
            if ((this.deleteObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteObjectCompleted(this, new deleteObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#removeFromSystemByImportId", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool removeFromSystemByImportId(string sid, string import_id) {
            object[] results = this.Invoke("removeFromSystemByImportId", new object[] {
                        sid,
                        import_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeFromSystemByImportIdAsync(string sid, string import_id) {
            this.removeFromSystemByImportIdAsync(sid, import_id, null);
        }
        
        /// <remarks/>
        public void removeFromSystemByImportIdAsync(string sid, string import_id, object userState) {
            if ((this.removeFromSystemByImportIdOperationCompleted == null)) {
                this.removeFromSystemByImportIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveFromSystemByImportIdOperationCompleted);
            }
            this.InvokeAsync("removeFromSystemByImportId", new object[] {
                        sid,
                        import_id}, this.removeFromSystemByImportIdOperationCompleted, userState);
        }
        
        private void OnremoveFromSystemByImportIdOperationCompleted(object arg) {
            if ((this.removeFromSystemByImportIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeFromSystemByImportIdCompleted(this, new removeFromSystemByImportIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addUserRoleEntry", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool addUserRoleEntry(string sid, int user_id, int role_id) {
            object[] results = this.Invoke("addUserRoleEntry", new object[] {
                        sid,
                        user_id,
                        role_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addUserRoleEntryAsync(string sid, int user_id, int role_id) {
            this.addUserRoleEntryAsync(sid, user_id, role_id, null);
        }
        
        /// <remarks/>
        public void addUserRoleEntryAsync(string sid, int user_id, int role_id, object userState) {
            if ((this.addUserRoleEntryOperationCompleted == null)) {
                this.addUserRoleEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserRoleEntryOperationCompleted);
            }
            this.InvokeAsync("addUserRoleEntry", new object[] {
                        sid,
                        user_id,
                        role_id}, this.addUserRoleEntryOperationCompleted, userState);
        }
        
        private void OnaddUserRoleEntryOperationCompleted(object arg) {
            if ((this.addUserRoleEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserRoleEntryCompleted(this, new addUserRoleEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#deleteUserRoleEntry", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool deleteUserRoleEntry(string sid, int user_id, int role_id) {
            object[] results = this.Invoke("deleteUserRoleEntry", new object[] {
                        sid,
                        user_id,
                        role_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserRoleEntryAsync(string sid, int user_id, int role_id) {
            this.deleteUserRoleEntryAsync(sid, user_id, role_id, null);
        }
        
        /// <remarks/>
        public void deleteUserRoleEntryAsync(string sid, int user_id, int role_id, object userState) {
            if ((this.deleteUserRoleEntryOperationCompleted == null)) {
                this.deleteUserRoleEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserRoleEntryOperationCompleted);
            }
            this.InvokeAsync("deleteUserRoleEntry", new object[] {
                        sid,
                        user_id,
                        role_id}, this.deleteUserRoleEntryOperationCompleted, userState);
        }
        
        private void OndeleteUserRoleEntryOperationCompleted(object arg) {
            if ((this.deleteUserRoleEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserRoleEntryCompleted(this, new deleteUserRoleEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getOperations", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("operations")]
        public ilOperation[] getOperations(string sid) {
            object[] results = this.Invoke("getOperations", new object[] {
                        sid});
            return ((ilOperation[])(results[0]));
        }
        
        /// <remarks/>
        public void getOperationsAsync(string sid) {
            this.getOperationsAsync(sid, null);
        }
        
        /// <remarks/>
        public void getOperationsAsync(string sid, object userState) {
            if ((this.getOperationsOperationCompleted == null)) {
                this.getOperationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOperationsOperationCompleted);
            }
            this.InvokeAsync("getOperations", new object[] {
                        sid}, this.getOperationsOperationCompleted, userState);
        }
        
        private void OngetOperationsOperationCompleted(object arg) {
            if ((this.getOperationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOperationsCompleted(this, new getOperationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#revokePermissions", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool revokePermissions(string sid, int ref_id, int role_id) {
            object[] results = this.Invoke("revokePermissions", new object[] {
                        sid,
                        ref_id,
                        role_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void revokePermissionsAsync(string sid, int ref_id, int role_id) {
            this.revokePermissionsAsync(sid, ref_id, role_id, null);
        }
        
        /// <remarks/>
        public void revokePermissionsAsync(string sid, int ref_id, int role_id, object userState) {
            if ((this.revokePermissionsOperationCompleted == null)) {
                this.revokePermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrevokePermissionsOperationCompleted);
            }
            this.InvokeAsync("revokePermissions", new object[] {
                        sid,
                        ref_id,
                        role_id}, this.revokePermissionsOperationCompleted, userState);
        }
        
        private void OnrevokePermissionsOperationCompleted(object arg) {
            if ((this.revokePermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.revokePermissionsCompleted(this, new revokePermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#grantPermissions", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool grantPermissions(string sid, int ref_id, int role_id, int[] operations) {
            object[] results = this.Invoke("grantPermissions", new object[] {
                        sid,
                        ref_id,
                        role_id,
                        operations});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void grantPermissionsAsync(string sid, int ref_id, int role_id, int[] operations) {
            this.grantPermissionsAsync(sid, ref_id, role_id, operations, null);
        }
        
        /// <remarks/>
        public void grantPermissionsAsync(string sid, int ref_id, int role_id, int[] operations, object userState) {
            if ((this.grantPermissionsOperationCompleted == null)) {
                this.grantPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngrantPermissionsOperationCompleted);
            }
            this.InvokeAsync("grantPermissions", new object[] {
                        sid,
                        ref_id,
                        role_id,
                        operations}, this.grantPermissionsOperationCompleted, userState);
        }
        
        private void OngrantPermissionsOperationCompleted(object arg) {
            if ((this.grantPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.grantPermissionsCompleted(this, new grantPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getLocalRoles", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("role_xml")]
        public string getLocalRoles(string sid, int ref_id) {
            object[] results = this.Invoke("getLocalRoles", new object[] {
                        sid,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLocalRolesAsync(string sid, int ref_id) {
            this.getLocalRolesAsync(sid, ref_id, null);
        }
        
        /// <remarks/>
        public void getLocalRolesAsync(string sid, int ref_id, object userState) {
            if ((this.getLocalRolesOperationCompleted == null)) {
                this.getLocalRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocalRolesOperationCompleted);
            }
            this.InvokeAsync("getLocalRoles", new object[] {
                        sid,
                        ref_id}, this.getLocalRolesOperationCompleted, userState);
        }
        
        private void OngetLocalRolesOperationCompleted(object arg) {
            if ((this.getLocalRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocalRolesCompleted(this, new getLocalRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getLocalRoles", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("role_xml")]
        public string getUserRoles(string sid, int user_id) {
            object[] results = this.Invoke("getUserRoles", new object[] {
                        sid,
                        user_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserRolesAsync(string sid, int user_id) {
            this.getUserRolesAsync(sid, user_id, null);
        }
        
        /// <remarks/>
        public void getUserRolesAsync(string sid, int user_id, object userState) {
            if ((this.getUserRolesOperationCompleted == null)) {
                this.getUserRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserRolesOperationCompleted);
            }
            this.InvokeAsync("getUserRoles", new object[] {
                        sid,
                        user_id}, this.getUserRolesOperationCompleted, userState);
        }
        
        private void OngetUserRolesOperationCompleted(object arg) {
            if ((this.getUserRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserRolesCompleted(this, new getUserRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addRole", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("role_ids")]
        public int[] addRole(string sid, int target_id, string obj_xml) {
            object[] results = this.Invoke("addRole", new object[] {
                        sid,
                        target_id,
                        obj_xml});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void addRoleAsync(string sid, int target_id, string obj_xml) {
            this.addRoleAsync(sid, target_id, obj_xml, null);
        }
        
        /// <remarks/>
        public void addRoleAsync(string sid, int target_id, string obj_xml, object userState) {
            if ((this.addRoleOperationCompleted == null)) {
                this.addRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRoleOperationCompleted);
            }
            this.InvokeAsync("addRole", new object[] {
                        sid,
                        target_id,
                        obj_xml}, this.addRoleOperationCompleted, userState);
        }
        
        private void OnaddRoleOperationCompleted(object arg) {
            if ((this.addRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRoleCompleted(this, new addRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#deleteRole", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool deleteRole(string sid, int role_id) {
            object[] results = this.Invoke("deleteRole", new object[] {
                        sid,
                        role_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRoleAsync(string sid, int role_id) {
            this.deleteRoleAsync(sid, role_id, null);
        }
        
        /// <remarks/>
        public void deleteRoleAsync(string sid, int role_id, object userState) {
            if ((this.deleteRoleOperationCompleted == null)) {
                this.deleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRoleOperationCompleted);
            }
            this.InvokeAsync("deleteRole", new object[] {
                        sid,
                        role_id}, this.deleteRoleOperationCompleted, userState);
        }
        
        private void OndeleteRoleOperationCompleted(object arg) {
            if ((this.deleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRoleCompleted(this, new deleteRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addRole", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("role_ids")]
        public int[] addRoleFromTemplate(string sid, int target_id, string obj_xml, int role_template_id) {
            object[] results = this.Invoke("addRoleFromTemplate", new object[] {
                        sid,
                        target_id,
                        obj_xml,
                        role_template_id});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void addRoleFromTemplateAsync(string sid, int target_id, string obj_xml, int role_template_id) {
            this.addRoleFromTemplateAsync(sid, target_id, obj_xml, role_template_id, null);
        }
        
        /// <remarks/>
        public void addRoleFromTemplateAsync(string sid, int target_id, string obj_xml, int role_template_id, object userState) {
            if ((this.addRoleFromTemplateOperationCompleted == null)) {
                this.addRoleFromTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRoleFromTemplateOperationCompleted);
            }
            this.InvokeAsync("addRoleFromTemplate", new object[] {
                        sid,
                        target_id,
                        obj_xml,
                        role_template_id}, this.addRoleFromTemplateOperationCompleted, userState);
        }
        
        private void OnaddRoleFromTemplateOperationCompleted(object arg) {
            if ((this.addRoleFromTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRoleFromTemplateCompleted(this, new addRoleFromTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getPermissionsForObject", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("operations")]
        public ilOperation[] getObjectTreeOperations(string sid, int ref_id, int user_id) {
            object[] results = this.Invoke("getObjectTreeOperations", new object[] {
                        sid,
                        ref_id,
                        user_id});
            return ((ilOperation[])(results[0]));
        }
        
        /// <remarks/>
        public void getObjectTreeOperationsAsync(string sid, int ref_id, int user_id) {
            this.getObjectTreeOperationsAsync(sid, ref_id, user_id, null);
        }
        
        /// <remarks/>
        public void getObjectTreeOperationsAsync(string sid, int ref_id, int user_id, object userState) {
            if ((this.getObjectTreeOperationsOperationCompleted == null)) {
                this.getObjectTreeOperationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetObjectTreeOperationsOperationCompleted);
            }
            this.InvokeAsync("getObjectTreeOperations", new object[] {
                        sid,
                        ref_id,
                        user_id}, this.getObjectTreeOperationsOperationCompleted, userState);
        }
        
        private void OngetObjectTreeOperationsOperationCompleted(object arg) {
            if ((this.getObjectTreeOperationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getObjectTreeOperationsCompleted(this, new getObjectTreeOperationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addGroup", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("ref_id")]
        public int addGroup(string sid, int target_id, string group_xml) {
            object[] results = this.Invoke("addGroup", new object[] {
                        sid,
                        target_id,
                        group_xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addGroupAsync(string sid, int target_id, string group_xml) {
            this.addGroupAsync(sid, target_id, group_xml, null);
        }
        
        /// <remarks/>
        public void addGroupAsync(string sid, int target_id, string group_xml, object userState) {
            if ((this.addGroupOperationCompleted == null)) {
                this.addGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGroupOperationCompleted);
            }
            this.InvokeAsync("addGroup", new object[] {
                        sid,
                        target_id,
                        group_xml}, this.addGroupOperationCompleted, userState);
        }
        
        private void OnaddGroupOperationCompleted(object arg) {
            if ((this.addGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGroupCompleted(this, new addGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#groupExists", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("exists")]
        public bool groupExists(string sid, string title) {
            object[] results = this.Invoke("groupExists", new object[] {
                        sid,
                        title});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void groupExistsAsync(string sid, string title) {
            this.groupExistsAsync(sid, title, null);
        }
        
        /// <remarks/>
        public void groupExistsAsync(string sid, string title, object userState) {
            if ((this.groupExistsOperationCompleted == null)) {
                this.groupExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngroupExistsOperationCompleted);
            }
            this.InvokeAsync("groupExists", new object[] {
                        sid,
                        title}, this.groupExistsOperationCompleted, userState);
        }
        
        private void OngroupExistsOperationCompleted(object arg) {
            if ((this.groupExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.groupExistsCompleted(this, new groupExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getGroup", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("group_xml")]
        public string getGroup(string sid, int ref_id) {
            object[] results = this.Invoke("getGroup", new object[] {
                        sid,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGroupAsync(string sid, int ref_id) {
            this.getGroupAsync(sid, ref_id, null);
        }
        
        /// <remarks/>
        public void getGroupAsync(string sid, int ref_id, object userState) {
            if ((this.getGroupOperationCompleted == null)) {
                this.getGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupOperationCompleted);
            }
            this.InvokeAsync("getGroup", new object[] {
                        sid,
                        ref_id}, this.getGroupOperationCompleted, userState);
        }
        
        private void OngetGroupOperationCompleted(object arg) {
            if ((this.getGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupCompleted(this, new getGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#assignGroupMember", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool assignGroupMember(string sid, int group_id, int user_id, string type) {
            object[] results = this.Invoke("assignGroupMember", new object[] {
                        sid,
                        group_id,
                        user_id,
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void assignGroupMemberAsync(string sid, int group_id, int user_id, string type) {
            this.assignGroupMemberAsync(sid, group_id, user_id, type, null);
        }
        
        /// <remarks/>
        public void assignGroupMemberAsync(string sid, int group_id, int user_id, string type, object userState) {
            if ((this.assignGroupMemberOperationCompleted == null)) {
                this.assignGroupMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignGroupMemberOperationCompleted);
            }
            this.InvokeAsync("assignGroupMember", new object[] {
                        sid,
                        group_id,
                        user_id,
                        type}, this.assignGroupMemberOperationCompleted, userState);
        }
        
        private void OnassignGroupMemberOperationCompleted(object arg) {
            if ((this.assignGroupMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignGroupMemberCompleted(this, new assignGroupMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#excludeGroupMember", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool excludeGroupMember(string sid, int group_id, int user_id) {
            object[] results = this.Invoke("excludeGroupMember", new object[] {
                        sid,
                        group_id,
                        user_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void excludeGroupMemberAsync(string sid, int group_id, int user_id) {
            this.excludeGroupMemberAsync(sid, group_id, user_id, null);
        }
        
        /// <remarks/>
        public void excludeGroupMemberAsync(string sid, int group_id, int user_id, object userState) {
            if ((this.excludeGroupMemberOperationCompleted == null)) {
                this.excludeGroupMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexcludeGroupMemberOperationCompleted);
            }
            this.InvokeAsync("excludeGroupMember", new object[] {
                        sid,
                        group_id,
                        user_id}, this.excludeGroupMemberOperationCompleted, userState);
        }
        
        private void OnexcludeGroupMemberOperationCompleted(object arg) {
            if ((this.excludeGroupMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.excludeGroupMemberCompleted(this, new excludeGroupMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#isAssignedToGroup", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("role")]
        public int isAssignedToGroup(string sid, int group_id, int user_id) {
            object[] results = this.Invoke("isAssignedToGroup", new object[] {
                        sid,
                        group_id,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void isAssignedToGroupAsync(string sid, int group_id, int user_id) {
            this.isAssignedToGroupAsync(sid, group_id, user_id, null);
        }
        
        /// <remarks/>
        public void isAssignedToGroupAsync(string sid, int group_id, int user_id, object userState) {
            if ((this.isAssignedToGroupOperationCompleted == null)) {
                this.isAssignedToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAssignedToGroupOperationCompleted);
            }
            this.InvokeAsync("isAssignedToGroup", new object[] {
                        sid,
                        group_id,
                        user_id}, this.isAssignedToGroupOperationCompleted, userState);
        }
        
        private void OnisAssignedToGroupOperationCompleted(object arg) {
            if ((this.isAssignedToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAssignedToGroupCompleted(this, new isAssignedToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#sendMail", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public bool sendMail(string sid, string rcp_to, string rcp_cc, string rcp_bcc, string sender, string subject, string message, string attachments) {
            object[] results = this.Invoke("sendMail", new object[] {
                        sid,
                        rcp_to,
                        rcp_cc,
                        rcp_bcc,
                        sender,
                        subject,
                        message,
                        attachments});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailAsync(string sid, string rcp_to, string rcp_cc, string rcp_bcc, string sender, string subject, string message, string attachments) {
            this.sendMailAsync(sid, rcp_to, rcp_cc, rcp_bcc, sender, subject, message, attachments, null);
        }
        
        /// <remarks/>
        public void sendMailAsync(string sid, string rcp_to, string rcp_cc, string rcp_bcc, string sender, string subject, string message, string attachments, object userState) {
            if ((this.sendMailOperationCompleted == null)) {
                this.sendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailOperationCompleted);
            }
            this.InvokeAsync("sendMail", new object[] {
                        sid,
                        rcp_to,
                        rcp_cc,
                        rcp_bcc,
                        sender,
                        subject,
                        message,
                        attachments}, this.sendMailOperationCompleted, userState);
        }
        
        private void OnsendMailOperationCompleted(object arg) {
            if ((this.sendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailCompleted(this, new sendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#sendMail", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public bool distributeMails(string sid, string mail_xml) {
            object[] results = this.Invoke("distributeMails", new object[] {
                        sid,
                        mail_xml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void distributeMailsAsync(string sid, string mail_xml) {
            this.distributeMailsAsync(sid, mail_xml, null);
        }
        
        /// <remarks/>
        public void distributeMailsAsync(string sid, string mail_xml, object userState) {
            if ((this.distributeMailsOperationCompleted == null)) {
                this.distributeMailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndistributeMailsOperationCompleted);
            }
            this.InvokeAsync("distributeMails", new object[] {
                        sid,
                        mail_xml}, this.distributeMailsOperationCompleted, userState);
        }
        
        private void OndistributeMailsOperationCompleted(object arg) {
            if ((this.distributeMailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.distributeMailsCompleted(this, new distributeMailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#ilClone", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("new_ref_id")]
        public int ilClone(string sid, int copy_identifier) {
            object[] results = this.Invoke("ilClone", new object[] {
                        sid,
                        copy_identifier});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ilCloneAsync(string sid, int copy_identifier) {
            this.ilCloneAsync(sid, copy_identifier, null);
        }
        
        /// <remarks/>
        public void ilCloneAsync(string sid, int copy_identifier, object userState) {
            if ((this.ilCloneOperationCompleted == null)) {
                this.ilCloneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnilCloneOperationCompleted);
            }
            this.InvokeAsync("ilClone", new object[] {
                        sid,
                        copy_identifier}, this.ilCloneOperationCompleted, userState);
        }
        
        private void OnilCloneOperationCompleted(object arg) {
            if ((this.ilCloneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ilCloneCompleted(this, new ilCloneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#handleECSTasks", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool handleECSTasks(string sid, int server_id) {
            object[] results = this.Invoke("handleECSTasks", new object[] {
                        sid,
                        server_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void handleECSTasksAsync(string sid, int server_id) {
            this.handleECSTasksAsync(sid, server_id, null);
        }
        
        /// <remarks/>
        public void handleECSTasksAsync(string sid, int server_id, object userState) {
            if ((this.handleECSTasksOperationCompleted == null)) {
                this.handleECSTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhandleECSTasksOperationCompleted);
            }
            this.InvokeAsync("handleECSTasks", new object[] {
                        sid,
                        server_id}, this.handleECSTasksOperationCompleted, userState);
        }
        
        private void OnhandleECSTasksOperationCompleted(object arg) {
            if ((this.handleECSTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.handleECSTasksCompleted(this, new handleECSTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#ilCloneDependencies", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool ilCloneDependencies(string sid, int copy_identifier) {
            object[] results = this.Invoke("ilCloneDependencies", new object[] {
                        sid,
                        copy_identifier});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ilCloneDependenciesAsync(string sid, int copy_identifier) {
            this.ilCloneDependenciesAsync(sid, copy_identifier, null);
        }
        
        /// <remarks/>
        public void ilCloneDependenciesAsync(string sid, int copy_identifier, object userState) {
            if ((this.ilCloneDependenciesOperationCompleted == null)) {
                this.ilCloneDependenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnilCloneDependenciesOperationCompleted);
            }
            this.InvokeAsync("ilCloneDependencies", new object[] {
                        sid,
                        copy_identifier}, this.ilCloneDependenciesOperationCompleted, userState);
        }
        
        private void OnilCloneDependenciesOperationCompleted(object arg) {
            if ((this.ilCloneDependenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ilCloneDependenciesCompleted(this, new ilCloneDependenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#saveQuestionResult", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public bool saveQuestionResult(string sid, int user_id, int test_id, int question_id, int pass, string[] solution) {
            object[] results = this.Invoke("saveQuestionResult", new object[] {
                        sid,
                        user_id,
                        test_id,
                        question_id,
                        pass,
                        solution});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveQuestionResultAsync(string sid, int user_id, int test_id, int question_id, int pass, string[] solution) {
            this.saveQuestionResultAsync(sid, user_id, test_id, question_id, pass, solution, null);
        }
        
        /// <remarks/>
        public void saveQuestionResultAsync(string sid, int user_id, int test_id, int question_id, int pass, string[] solution, object userState) {
            if ((this.saveQuestionResultOperationCompleted == null)) {
                this.saveQuestionResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveQuestionResultOperationCompleted);
            }
            this.InvokeAsync("saveQuestionResult", new object[] {
                        sid,
                        user_id,
                        test_id,
                        question_id,
                        pass,
                        solution}, this.saveQuestionResultOperationCompleted, userState);
        }
        
        private void OnsaveQuestionResultOperationCompleted(object arg) {
            if ((this.saveQuestionResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveQuestionResultCompleted(this, new saveQuestionResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#saveQuestion", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public bool saveQuestion(string sid, long active_id, long question_id, int pass, string[] solution) {
            object[] results = this.Invoke("saveQuestion", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass,
                        solution});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveQuestionAsync(string sid, long active_id, long question_id, int pass, string[] solution) {
            this.saveQuestionAsync(sid, active_id, question_id, pass, solution, null);
        }
        
        /// <remarks/>
        public void saveQuestionAsync(string sid, long active_id, long question_id, int pass, string[] solution, object userState) {
            if ((this.saveQuestionOperationCompleted == null)) {
                this.saveQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveQuestionOperationCompleted);
            }
            this.InvokeAsync("saveQuestion", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass,
                        solution}, this.saveQuestionOperationCompleted, userState);
        }
        
        private void OnsaveQuestionOperationCompleted(object arg) {
            if ((this.saveQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveQuestionCompleted(this, new saveQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#saveQuestionSolution", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string saveQuestionSolution(string sid, long active_id, long question_id, int pass, string solution) {
            object[] results = this.Invoke("saveQuestionSolution", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass,
                        solution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveQuestionSolutionAsync(string sid, long active_id, long question_id, int pass, string solution) {
            this.saveQuestionSolutionAsync(sid, active_id, question_id, pass, solution, null);
        }
        
        /// <remarks/>
        public void saveQuestionSolutionAsync(string sid, long active_id, long question_id, int pass, string solution, object userState) {
            if ((this.saveQuestionSolutionOperationCompleted == null)) {
                this.saveQuestionSolutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveQuestionSolutionOperationCompleted);
            }
            this.InvokeAsync("saveQuestionSolution", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass,
                        solution}, this.saveQuestionSolutionOperationCompleted, userState);
        }
        
        private void OnsaveQuestionSolutionOperationCompleted(object arg) {
            if ((this.saveQuestionSolutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveQuestionSolutionCompleted(this, new saveQuestionSolutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getQuestionSolution", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("solution")]
        public string[] getQuestionSolution(string sid, long active_id, int question_id, int pass) {
            object[] results = this.Invoke("getQuestionSolution", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getQuestionSolutionAsync(string sid, long active_id, int question_id, int pass) {
            this.getQuestionSolutionAsync(sid, active_id, question_id, pass, null);
        }
        
        /// <remarks/>
        public void getQuestionSolutionAsync(string sid, long active_id, int question_id, int pass, object userState) {
            if ((this.getQuestionSolutionOperationCompleted == null)) {
                this.getQuestionSolutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuestionSolutionOperationCompleted);
            }
            this.InvokeAsync("getQuestionSolution", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass}, this.getQuestionSolutionOperationCompleted, userState);
        }
        
        private void OngetQuestionSolutionOperationCompleted(object arg) {
            if ((this.getQuestionSolutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuestionSolutionCompleted(this, new getQuestionSolutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getTestUserData", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("userdata")]
        public string[] getTestUserData(string sid, long active_id) {
            object[] results = this.Invoke("getTestUserData", new object[] {
                        sid,
                        active_id});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getTestUserDataAsync(string sid, long active_id) {
            this.getTestUserDataAsync(sid, active_id, null);
        }
        
        /// <remarks/>
        public void getTestUserDataAsync(string sid, long active_id, object userState) {
            if ((this.getTestUserDataOperationCompleted == null)) {
                this.getTestUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestUserDataOperationCompleted);
            }
            this.InvokeAsync("getTestUserData", new object[] {
                        sid,
                        active_id}, this.getTestUserDataOperationCompleted, userState);
        }
        
        private void OngetTestUserDataOperationCompleted(object arg) {
            if ((this.getTestUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestUserDataCompleted(this, new getTestUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getPositionOfQuestion", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("position")]
        public int getPositionOfQuestion(string sid, long active_id, int question_id, int pass) {
            object[] results = this.Invoke("getPositionOfQuestion", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getPositionOfQuestionAsync(string sid, long active_id, int question_id, int pass) {
            this.getPositionOfQuestionAsync(sid, active_id, question_id, pass, null);
        }
        
        /// <remarks/>
        public void getPositionOfQuestionAsync(string sid, long active_id, int question_id, int pass, object userState) {
            if ((this.getPositionOfQuestionOperationCompleted == null)) {
                this.getPositionOfQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPositionOfQuestionOperationCompleted);
            }
            this.InvokeAsync("getPositionOfQuestion", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass}, this.getPositionOfQuestionOperationCompleted, userState);
        }
        
        private void OngetPositionOfQuestionOperationCompleted(object arg) {
            if ((this.getPositionOfQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPositionOfQuestionCompleted(this, new getPositionOfQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getPreviousReachedPoints", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("position")]
        public double[] getPreviousReachedPoints(string sid, long active_id, int question_id, int pass) {
            object[] results = this.Invoke("getPreviousReachedPoints", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass});
            return ((double[])(results[0]));
        }
        
        /// <remarks/>
        public void getPreviousReachedPointsAsync(string sid, long active_id, int question_id, int pass) {
            this.getPreviousReachedPointsAsync(sid, active_id, question_id, pass, null);
        }
        
        /// <remarks/>
        public void getPreviousReachedPointsAsync(string sid, long active_id, int question_id, int pass, object userState) {
            if ((this.getPreviousReachedPointsOperationCompleted == null)) {
                this.getPreviousReachedPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPreviousReachedPointsOperationCompleted);
            }
            this.InvokeAsync("getPreviousReachedPoints", new object[] {
                        sid,
                        active_id,
                        question_id,
                        pass}, this.getPreviousReachedPointsOperationCompleted, userState);
        }
        
        private void OngetPreviousReachedPointsOperationCompleted(object arg) {
            if ((this.getPreviousReachedPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPreviousReachedPointsCompleted(this, new getPreviousReachedPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getNrOfQuestionsInPass", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("count")]
        public int getNrOfQuestionsInPass(string sid, long active_id, int pass) {
            object[] results = this.Invoke("getNrOfQuestionsInPass", new object[] {
                        sid,
                        active_id,
                        pass});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getNrOfQuestionsInPassAsync(string sid, long active_id, int pass) {
            this.getNrOfQuestionsInPassAsync(sid, active_id, pass, null);
        }
        
        /// <remarks/>
        public void getNrOfQuestionsInPassAsync(string sid, long active_id, int pass, object userState) {
            if ((this.getNrOfQuestionsInPassOperationCompleted == null)) {
                this.getNrOfQuestionsInPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNrOfQuestionsInPassOperationCompleted);
            }
            this.InvokeAsync("getNrOfQuestionsInPass", new object[] {
                        sid,
                        active_id,
                        pass}, this.getNrOfQuestionsInPassOperationCompleted, userState);
        }
        
        private void OngetNrOfQuestionsInPassOperationCompleted(object arg) {
            if ((this.getNrOfQuestionsInPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNrOfQuestionsInPassCompleted(this, new getNrOfQuestionsInPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getStructureObjects", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getStructureObjects(string sid, int ref_id) {
            object[] results = this.Invoke("getStructureObjects", new object[] {
                        sid,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getStructureObjectsAsync(string sid, int ref_id) {
            this.getStructureObjectsAsync(sid, ref_id, null);
        }
        
        /// <remarks/>
        public void getStructureObjectsAsync(string sid, int ref_id, object userState) {
            if ((this.getStructureObjectsOperationCompleted == null)) {
                this.getStructureObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStructureObjectsOperationCompleted);
            }
            this.InvokeAsync("getStructureObjects", new object[] {
                        sid,
                        ref_id}, this.getStructureObjectsOperationCompleted, userState);
        }
        
        private void OngetStructureObjectsOperationCompleted(object arg) {
            if ((this.getStructureObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStructureObjectsCompleted(this, new getStructureObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#importUsers", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("protocol")]
        public string importUsers(string sid, int folder_id, string usr_xml, int conflict_rule, int send_account_mail) {
            object[] results = this.Invoke("importUsers", new object[] {
                        sid,
                        folder_id,
                        usr_xml,
                        conflict_rule,
                        send_account_mail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void importUsersAsync(string sid, int folder_id, string usr_xml, int conflict_rule, int send_account_mail) {
            this.importUsersAsync(sid, folder_id, usr_xml, conflict_rule, send_account_mail, null);
        }
        
        /// <remarks/>
        public void importUsersAsync(string sid, int folder_id, string usr_xml, int conflict_rule, int send_account_mail, object userState) {
            if ((this.importUsersOperationCompleted == null)) {
                this.importUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportUsersOperationCompleted);
            }
            this.InvokeAsync("importUsers", new object[] {
                        sid,
                        folder_id,
                        usr_xml,
                        conflict_rule,
                        send_account_mail}, this.importUsersOperationCompleted, userState);
        }
        
        private void OnimportUsersOperationCompleted(object arg) {
            if ((this.importUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importUsersCompleted(this, new importUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getRoles", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("role_xml")]
        public string getRoles(string sid, string role_type, string id) {
            object[] results = this.Invoke("getRoles", new object[] {
                        sid,
                        role_type,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRolesAsync(string sid, string role_type, string id) {
            this.getRolesAsync(sid, role_type, id, null);
        }
        
        /// <remarks/>
        public void getRolesAsync(string sid, string role_type, string id, object userState) {
            if ((this.getRolesOperationCompleted == null)) {
                this.getRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRolesOperationCompleted);
            }
            this.InvokeAsync("getRoles", new object[] {
                        sid,
                        role_type,
                        id}, this.getRolesOperationCompleted, userState);
        }
        
        private void OngetRolesOperationCompleted(object arg) {
            if ((this.getRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRolesCompleted(this, new getRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getUsersForContainer", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("user_xml")]
        public string getUsersForContainer(string sid, int ref_id, int attach_roles, int active) {
            object[] results = this.Invoke("getUsersForContainer", new object[] {
                        sid,
                        ref_id,
                        attach_roles,
                        active});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUsersForContainerAsync(string sid, int ref_id, int attach_roles, int active) {
            this.getUsersForContainerAsync(sid, ref_id, attach_roles, active, null);
        }
        
        /// <remarks/>
        public void getUsersForContainerAsync(string sid, int ref_id, int attach_roles, int active, object userState) {
            if ((this.getUsersForContainerOperationCompleted == null)) {
                this.getUsersForContainerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersForContainerOperationCompleted);
            }
            this.InvokeAsync("getUsersForContainer", new object[] {
                        sid,
                        ref_id,
                        attach_roles,
                        active}, this.getUsersForContainerOperationCompleted, userState);
        }
        
        private void OngetUsersForContainerOperationCompleted(object arg) {
            if ((this.getUsersForContainerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersForContainerCompleted(this, new getUsersForContainerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getUsersForRole", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("user_xml")]
        public string getUsersForRole(string sid, int role_id, int attach_roles, int active) {
            object[] results = this.Invoke("getUsersForRole", new object[] {
                        sid,
                        role_id,
                        attach_roles,
                        active});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUsersForRoleAsync(string sid, int role_id, int attach_roles, int active) {
            this.getUsersForRoleAsync(sid, role_id, attach_roles, active, null);
        }
        
        /// <remarks/>
        public void getUsersForRoleAsync(string sid, int role_id, int attach_roles, int active, object userState) {
            if ((this.getUsersForRoleOperationCompleted == null)) {
                this.getUsersForRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersForRoleOperationCompleted);
            }
            this.InvokeAsync("getUsersForRole", new object[] {
                        sid,
                        role_id,
                        attach_roles,
                        active}, this.getUsersForRoleOperationCompleted, userState);
        }
        
        private void OngetUsersForRoleOperationCompleted(object arg) {
            if ((this.getUsersForRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersForRoleCompleted(this, new getUsersForRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#searchUsers", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("user_xml")]
        public string searchUser(string sid, string[] key_fields, string query_operator, string[] key_values, int attach_roles, int active) {
            object[] results = this.Invoke("searchUser", new object[] {
                        sid,
                        key_fields,
                        query_operator,
                        key_values,
                        attach_roles,
                        active});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchUserAsync(string sid, string[] key_fields, string query_operator, string[] key_values, int attach_roles, int active) {
            this.searchUserAsync(sid, key_fields, query_operator, key_values, attach_roles, active, null);
        }
        
        /// <remarks/>
        public void searchUserAsync(string sid, string[] key_fields, string query_operator, string[] key_values, int attach_roles, int active, object userState) {
            if ((this.searchUserOperationCompleted == null)) {
                this.searchUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchUserOperationCompleted);
            }
            this.InvokeAsync("searchUser", new object[] {
                        sid,
                        key_fields,
                        query_operator,
                        key_values,
                        attach_roles,
                        active}, this.searchUserOperationCompleted, userState);
        }
        
        private void OnsearchUserOperationCompleted(object arg) {
            if ((this.searchUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchUserCompleted(this, new searchUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#hasNewMail", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public bool hasNewMail(string sid) {
            object[] results = this.Invoke("hasNewMail", new object[] {
                        sid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void hasNewMailAsync(string sid) {
            this.hasNewMailAsync(sid, null);
        }
        
        /// <remarks/>
        public void hasNewMailAsync(string sid, object userState) {
            if ((this.hasNewMailOperationCompleted == null)) {
                this.hasNewMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhasNewMailOperationCompleted);
            }
            this.InvokeAsync("hasNewMail", new object[] {
                        sid}, this.hasNewMailOperationCompleted, userState);
        }
        
        private void OnhasNewMailOperationCompleted(object arg) {
            if ((this.hasNewMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hasNewMailCompleted(this, new hasNewMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getNIC", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xmlresultset")]
        public string getNIC(string sid) {
            object[] results = this.Invoke("getNIC", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNICAsync(string sid) {
            this.getNICAsync(sid, null);
        }
        
        /// <remarks/>
        public void getNICAsync(string sid, object userState) {
            if ((this.getNICOperationCompleted == null)) {
                this.getNICOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNICOperationCompleted);
            }
            this.InvokeAsync("getNIC", new object[] {
                        sid}, this.getNICOperationCompleted, userState);
        }
        
        private void OngetNICOperationCompleted(object arg) {
            if ((this.getNICCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNICCompleted(this, new getNICCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getExerciseXML", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("exercisexml")]
        public string getExerciseXML(string sid, int ref_id, int attachment_mode) {
            object[] results = this.Invoke("getExerciseXML", new object[] {
                        sid,
                        ref_id,
                        attachment_mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExerciseXMLAsync(string sid, int ref_id, int attachment_mode) {
            this.getExerciseXMLAsync(sid, ref_id, attachment_mode, null);
        }
        
        /// <remarks/>
        public void getExerciseXMLAsync(string sid, int ref_id, int attachment_mode, object userState) {
            if ((this.getExerciseXMLOperationCompleted == null)) {
                this.getExerciseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExerciseXMLOperationCompleted);
            }
            this.InvokeAsync("getExerciseXML", new object[] {
                        sid,
                        ref_id,
                        attachment_mode}, this.getExerciseXMLOperationCompleted, userState);
        }
        
        private void OngetExerciseXMLOperationCompleted(object arg) {
            if ((this.getExerciseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExerciseXMLCompleted(this, new getExerciseXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addExercise", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("refid")]
        public int addExercise(string sid, int target_id, string xml) {
            object[] results = this.Invoke("addExercise", new object[] {
                        sid,
                        target_id,
                        xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addExerciseAsync(string sid, int target_id, string xml) {
            this.addExerciseAsync(sid, target_id, xml, null);
        }
        
        /// <remarks/>
        public void addExerciseAsync(string sid, int target_id, string xml, object userState) {
            if ((this.addExerciseOperationCompleted == null)) {
                this.addExerciseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddExerciseOperationCompleted);
            }
            this.InvokeAsync("addExercise", new object[] {
                        sid,
                        target_id,
                        xml}, this.addExerciseOperationCompleted, userState);
        }
        
        private void OnaddExerciseOperationCompleted(object arg) {
            if ((this.addExerciseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addExerciseCompleted(this, new addExerciseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#updateExercise", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool updateExercise(string sid, int ref_id, string xml) {
            object[] results = this.Invoke("updateExercise", new object[] {
                        sid,
                        ref_id,
                        xml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateExerciseAsync(string sid, int ref_id, string xml) {
            this.updateExerciseAsync(sid, ref_id, xml, null);
        }
        
        /// <remarks/>
        public void updateExerciseAsync(string sid, int ref_id, string xml, object userState) {
            if ((this.updateExerciseOperationCompleted == null)) {
                this.updateExerciseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateExerciseOperationCompleted);
            }
            this.InvokeAsync("updateExercise", new object[] {
                        sid,
                        ref_id,
                        xml}, this.updateExerciseOperationCompleted, userState);
        }
        
        private void OnupdateExerciseOperationCompleted(object arg) {
            if ((this.updateExerciseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateExerciseCompleted(this, new updateExerciseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getFileXML", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("filexml")]
        public string getFileXML(string sid, int ref_id, int attachment_mode) {
            object[] results = this.Invoke("getFileXML", new object[] {
                        sid,
                        ref_id,
                        attachment_mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFileXMLAsync(string sid, int ref_id, int attachment_mode) {
            this.getFileXMLAsync(sid, ref_id, attachment_mode, null);
        }
        
        /// <remarks/>
        public void getFileXMLAsync(string sid, int ref_id, int attachment_mode, object userState) {
            if ((this.getFileXMLOperationCompleted == null)) {
                this.getFileXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFileXMLOperationCompleted);
            }
            this.InvokeAsync("getFileXML", new object[] {
                        sid,
                        ref_id,
                        attachment_mode}, this.getFileXMLOperationCompleted, userState);
        }
        
        private void OngetFileXMLOperationCompleted(object arg) {
            if ((this.getFileXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFileXMLCompleted(this, new getFileXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#addFile", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("refid")]
        public int addFile(string sid, int target_id, string xml) {
            object[] results = this.Invoke("addFile", new object[] {
                        sid,
                        target_id,
                        xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addFileAsync(string sid, int target_id, string xml) {
            this.addFileAsync(sid, target_id, xml, null);
        }
        
        /// <remarks/>
        public void addFileAsync(string sid, int target_id, string xml, object userState) {
            if ((this.addFileOperationCompleted == null)) {
                this.addFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFileOperationCompleted);
            }
            this.InvokeAsync("addFile", new object[] {
                        sid,
                        target_id,
                        xml}, this.addFileOperationCompleted, userState);
        }
        
        private void OnaddFileOperationCompleted(object arg) {
            if ((this.addFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFileCompleted(this, new addFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#updateFile", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool updateFile(string sid, int ref_id, string xml) {
            object[] results = this.Invoke("updateFile", new object[] {
                        sid,
                        ref_id,
                        xml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateFileAsync(string sid, int ref_id, string xml) {
            this.updateFileAsync(sid, ref_id, xml, null);
        }
        
        /// <remarks/>
        public void updateFileAsync(string sid, int ref_id, string xml, object userState) {
            if ((this.updateFileOperationCompleted == null)) {
                this.updateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFileOperationCompleted);
            }
            this.InvokeAsync("updateFile", new object[] {
                        sid,
                        ref_id,
                        xml}, this.updateFileOperationCompleted, userState);
        }
        
        private void OnupdateFileOperationCompleted(object arg) {
            if ((this.updateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFileCompleted(this, new updateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#resolveUsers", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getUserXML(string sid, int[] user_ids, int attach_roles) {
            object[] results = this.Invoke("getUserXML", new object[] {
                        sid,
                        user_ids,
                        attach_roles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserXMLAsync(string sid, int[] user_ids, int attach_roles) {
            this.getUserXMLAsync(sid, user_ids, attach_roles, null);
        }
        
        /// <remarks/>
        public void getUserXMLAsync(string sid, int[] user_ids, int attach_roles, object userState) {
            if ((this.getUserXMLOperationCompleted == null)) {
                this.getUserXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserXMLOperationCompleted);
            }
            this.InvokeAsync("getUserXML", new object[] {
                        sid,
                        user_ids,
                        attach_roles}, this.getUserXMLOperationCompleted, userState);
        }
        
        private void OngetUserXMLOperationCompleted(object arg) {
            if ((this.getUserXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserXMLCompleted(this, new getUserXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getRefIdsByImportId", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("obj_ids")]
        public int[] getObjIdsByRefIds(string sid, int[] ref_ids) {
            object[] results = this.Invoke("getObjIdsByRefIds", new object[] {
                        sid,
                        ref_ids});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getObjIdsByRefIdsAsync(string sid, int[] ref_ids) {
            this.getObjIdsByRefIdsAsync(sid, ref_ids, null);
        }
        
        /// <remarks/>
        public void getObjIdsByRefIdsAsync(string sid, int[] ref_ids, object userState) {
            if ((this.getObjIdsByRefIdsOperationCompleted == null)) {
                this.getObjIdsByRefIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetObjIdsByRefIdsOperationCompleted);
            }
            this.InvokeAsync("getObjIdsByRefIds", new object[] {
                        sid,
                        ref_ids}, this.getObjIdsByRefIdsOperationCompleted, userState);
        }
        
        private void OngetObjIdsByRefIdsOperationCompleted(object arg) {
            if ((this.getObjIdsByRefIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getObjIdsByRefIdsCompleted(this, new getObjIdsByRefIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#updateGroup", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool updateGroup(string sid, int ref_id, string xml) {
            object[] results = this.Invoke("updateGroup", new object[] {
                        sid,
                        ref_id,
                        xml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateGroupAsync(string sid, int ref_id, string xml) {
            this.updateGroupAsync(sid, ref_id, xml, null);
        }
        
        /// <remarks/>
        public void updateGroupAsync(string sid, int ref_id, string xml, object userState) {
            if ((this.updateGroupOperationCompleted == null)) {
                this.updateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGroupOperationCompleted);
            }
            this.InvokeAsync("updateGroup", new object[] {
                        sid,
                        ref_id,
                        xml}, this.updateGroupOperationCompleted, userState);
        }
        
        private void OnupdateGroupOperationCompleted(object arg) {
            if ((this.updateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGroupCompleted(this, new updateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getIMSManifestXML", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getIMSManifestXML(string sid, int ref_id) {
            object[] results = this.Invoke("getIMSManifestXML", new object[] {
                        sid,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getIMSManifestXMLAsync(string sid, int ref_id) {
            this.getIMSManifestXMLAsync(sid, ref_id, null);
        }
        
        /// <remarks/>
        public void getIMSManifestXMLAsync(string sid, int ref_id, object userState) {
            if ((this.getIMSManifestXMLOperationCompleted == null)) {
                this.getIMSManifestXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIMSManifestXMLOperationCompleted);
            }
            this.InvokeAsync("getIMSManifestXML", new object[] {
                        sid,
                        ref_id}, this.getIMSManifestXMLOperationCompleted, userState);
        }
        
        private void OngetIMSManifestXMLOperationCompleted(object arg) {
            if ((this.getIMSManifestXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIMSManifestXMLCompleted(this, new getIMSManifestXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#hasSCORMCertificate", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool hasSCORMCertificate(string sid, int ref_id, int usr_id) {
            object[] results = this.Invoke("hasSCORMCertificate", new object[] {
                        sid,
                        ref_id,
                        usr_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void hasSCORMCertificateAsync(string sid, int ref_id, int usr_id) {
            this.hasSCORMCertificateAsync(sid, ref_id, usr_id, null);
        }
        
        /// <remarks/>
        public void hasSCORMCertificateAsync(string sid, int ref_id, int usr_id, object userState) {
            if ((this.hasSCORMCertificateOperationCompleted == null)) {
                this.hasSCORMCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhasSCORMCertificateOperationCompleted);
            }
            this.InvokeAsync("hasSCORMCertificate", new object[] {
                        sid,
                        ref_id,
                        usr_id}, this.hasSCORMCertificateOperationCompleted, userState);
        }
        
        private void OnhasSCORMCertificateOperationCompleted(object arg) {
            if ((this.hasSCORMCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hasSCORMCertificateCompleted(this, new hasSCORMCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getSCORMCompletionStatus", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string getSCORMCompletionStatus(string sid, int usr_id, int ref_id) {
            object[] results = this.Invoke("getSCORMCompletionStatus", new object[] {
                        sid,
                        usr_id,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSCORMCompletionStatusAsync(string sid, int usr_id, int ref_id) {
            this.getSCORMCompletionStatusAsync(sid, usr_id, ref_id, null);
        }
        
        /// <remarks/>
        public void getSCORMCompletionStatusAsync(string sid, int usr_id, int ref_id, object userState) {
            if ((this.getSCORMCompletionStatusOperationCompleted == null)) {
                this.getSCORMCompletionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSCORMCompletionStatusOperationCompleted);
            }
            this.InvokeAsync("getSCORMCompletionStatus", new object[] {
                        sid,
                        usr_id,
                        ref_id}, this.getSCORMCompletionStatusOperationCompleted, userState);
        }
        
        private void OngetSCORMCompletionStatusOperationCompleted(object arg) {
            if ((this.getSCORMCompletionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSCORMCompletionStatusCompleted(this, new getSCORMCompletionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#copyObject", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public int copyObject(string sid, string xml) {
            object[] results = this.Invoke("copyObject", new object[] {
                        sid,
                        xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void copyObjectAsync(string sid, string xml) {
            this.copyObjectAsync(sid, xml, null);
        }
        
        /// <remarks/>
        public void copyObjectAsync(string sid, string xml, object userState) {
            if ((this.copyObjectOperationCompleted == null)) {
                this.copyObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyObjectOperationCompleted);
            }
            this.InvokeAsync("copyObject", new object[] {
                        sid,
                        xml}, this.copyObjectOperationCompleted, userState);
        }
        
        private void OncopyObjectOperationCompleted(object arg) {
            if ((this.copyObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyObjectCompleted(this, new copyObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#moveObject", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool moveObject(string sid, int ref_id, int target_id) {
            object[] results = this.Invoke("moveObject", new object[] {
                        sid,
                        ref_id,
                        target_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void moveObjectAsync(string sid, int ref_id, int target_id) {
            this.moveObjectAsync(sid, ref_id, target_id, null);
        }
        
        /// <remarks/>
        public void moveObjectAsync(string sid, int ref_id, int target_id, object userState) {
            if ((this.moveObjectOperationCompleted == null)) {
                this.moveObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveObjectOperationCompleted);
            }
            this.InvokeAsync("moveObject", new object[] {
                        sid,
                        ref_id,
                        target_id}, this.moveObjectOperationCompleted, userState);
        }
        
        private void OnmoveObjectOperationCompleted(object arg) {
            if ((this.moveObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveObjectCompleted(this, new moveObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getTestResults", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getTestResults(string sid, int ref_id, bool sum_only) {
            object[] results = this.Invoke("getTestResults", new object[] {
                        sid,
                        ref_id,
                        sum_only});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTestResultsAsync(string sid, int ref_id, bool sum_only) {
            this.getTestResultsAsync(sid, ref_id, sum_only, null);
        }
        
        /// <remarks/>
        public void getTestResultsAsync(string sid, int ref_id, bool sum_only, object userState) {
            if ((this.getTestResultsOperationCompleted == null)) {
                this.getTestResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestResultsOperationCompleted);
            }
            this.InvokeAsync("getTestResults", new object[] {
                        sid,
                        ref_id,
                        sum_only}, this.getTestResultsOperationCompleted, userState);
        }
        
        private void OngetTestResultsOperationCompleted(object arg) {
            if ((this.getTestResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestResultsCompleted(this, new getTestResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#removeTestResults", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool removeTestResults(string sid, int ref_id, int[] user_ids) {
            object[] results = this.Invoke("removeTestResults", new object[] {
                        sid,
                        ref_id,
                        user_ids});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeTestResultsAsync(string sid, int ref_id, int[] user_ids) {
            this.removeTestResultsAsync(sid, ref_id, user_ids, null);
        }
        
        /// <remarks/>
        public void removeTestResultsAsync(string sid, int ref_id, int[] user_ids, object userState) {
            if ((this.removeTestResultsOperationCompleted == null)) {
                this.removeTestResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveTestResultsOperationCompleted);
            }
            this.InvokeAsync("removeTestResults", new object[] {
                        sid,
                        ref_id,
                        user_ids}, this.removeTestResultsOperationCompleted, userState);
        }
        
        private void OnremoveTestResultsOperationCompleted(object arg) {
            if ((this.removeTestResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeTestResultsCompleted(this, new removeTestResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getCoursesForUser", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getCoursesForUser(string sid, string parameters) {
            object[] results = this.Invoke("getCoursesForUser", new object[] {
                        sid,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCoursesForUserAsync(string sid, string parameters) {
            this.getCoursesForUserAsync(sid, parameters, null);
        }
        
        /// <remarks/>
        public void getCoursesForUserAsync(string sid, string parameters, object userState) {
            if ((this.getCoursesForUserOperationCompleted == null)) {
                this.getCoursesForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCoursesForUserOperationCompleted);
            }
            this.InvokeAsync("getCoursesForUser", new object[] {
                        sid,
                        parameters}, this.getCoursesForUserOperationCompleted, userState);
        }
        
        private void OngetCoursesForUserOperationCompleted(object arg) {
            if ((this.getCoursesForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCoursesForUserCompleted(this, new getCoursesForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getGroupsForUser", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getGroupsForUser(string sid, string parameters) {
            object[] results = this.Invoke("getGroupsForUser", new object[] {
                        sid,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGroupsForUserAsync(string sid, string parameters) {
            this.getGroupsForUserAsync(sid, parameters, null);
        }
        
        /// <remarks/>
        public void getGroupsForUserAsync(string sid, string parameters, object userState) {
            if ((this.getGroupsForUserOperationCompleted == null)) {
                this.getGroupsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupsForUserOperationCompleted);
            }
            this.InvokeAsync("getGroupsForUser", new object[] {
                        sid,
                        parameters}, this.getGroupsForUserOperationCompleted, userState);
        }
        
        private void OngetGroupsForUserOperationCompleted(object arg) {
            if ((this.getGroupsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupsForUserCompleted(this, new getGroupsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getPathForRefId", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getPathForRefId(string sid, int ref_id) {
            object[] results = this.Invoke("getPathForRefId", new object[] {
                        sid,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPathForRefIdAsync(string sid, int ref_id) {
            this.getPathForRefIdAsync(sid, ref_id, null);
        }
        
        /// <remarks/>
        public void getPathForRefIdAsync(string sid, int ref_id, object userState) {
            if ((this.getPathForRefIdOperationCompleted == null)) {
                this.getPathForRefIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPathForRefIdOperationCompleted);
            }
            this.InvokeAsync("getPathForRefId", new object[] {
                        sid,
                        ref_id}, this.getPathForRefIdOperationCompleted, userState);
        }
        
        private void OngetPathForRefIdOperationCompleted(object arg) {
            if ((this.getPathForRefIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPathForRefIdCompleted(this, new getPathForRefIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#searchRoles", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string searchRoles(string sid, string key, string combination, string role_type) {
            object[] results = this.Invoke("searchRoles", new object[] {
                        sid,
                        key,
                        combination,
                        role_type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchRolesAsync(string sid, string key, string combination, string role_type) {
            this.searchRolesAsync(sid, key, combination, role_type, null);
        }
        
        /// <remarks/>
        public void searchRolesAsync(string sid, string key, string combination, string role_type, object userState) {
            if ((this.searchRolesOperationCompleted == null)) {
                this.searchRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchRolesOperationCompleted);
            }
            this.InvokeAsync("searchRoles", new object[] {
                        sid,
                        key,
                        combination,
                        role_type}, this.searchRolesOperationCompleted, userState);
        }
        
        private void OnsearchRolesOperationCompleted(object arg) {
            if ((this.searchRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchRolesCompleted(this, new searchRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getInstallationInfoXML", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getInstallationInfoXML() {
            object[] results = this.Invoke("getInstallationInfoXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getInstallationInfoXMLAsync() {
            this.getInstallationInfoXMLAsync(null);
        }
        
        /// <remarks/>
        public void getInstallationInfoXMLAsync(object userState) {
            if ((this.getInstallationInfoXMLOperationCompleted == null)) {
                this.getInstallationInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInstallationInfoXMLOperationCompleted);
            }
            this.InvokeAsync("getInstallationInfoXML", new object[0], this.getInstallationInfoXMLOperationCompleted, userState);
        }
        
        private void OngetInstallationInfoXMLOperationCompleted(object arg) {
            if ((this.getInstallationInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInstallationInfoXMLCompleted(this, new getInstallationInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getClientInfoXML", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("xml")]
        public string getClientInfoXML(string clientid) {
            object[] results = this.Invoke("getClientInfoXML", new object[] {
                        clientid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getClientInfoXMLAsync(string clientid) {
            this.getClientInfoXMLAsync(clientid, null);
        }
        
        /// <remarks/>
        public void getClientInfoXMLAsync(string clientid, object userState) {
            if ((this.getClientInfoXMLOperationCompleted == null)) {
                this.getClientInfoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientInfoXMLOperationCompleted);
            }
            this.InvokeAsync("getClientInfoXML", new object[] {
                        clientid}, this.getClientInfoXMLOperationCompleted, userState);
        }
        
        private void OngetClientInfoXMLOperationCompleted(object arg) {
            if ((this.getClientInfoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientInfoXMLCompleted(this, new getClientInfoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getSkillCompletionDateForTriggerRefId", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("dates")]
        public string getSkillCompletionDateForTriggerRefId(string sid, string user_id, string ref_id) {
            object[] results = this.Invoke("getSkillCompletionDateForTriggerRefId", new object[] {
                        sid,
                        user_id,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSkillCompletionDateForTriggerRefIdAsync(string sid, string user_id, string ref_id) {
            this.getSkillCompletionDateForTriggerRefIdAsync(sid, user_id, ref_id, null);
        }
        
        /// <remarks/>
        public void getSkillCompletionDateForTriggerRefIdAsync(string sid, string user_id, string ref_id, object userState) {
            if ((this.getSkillCompletionDateForTriggerRefIdOperationCompleted == null)) {
                this.getSkillCompletionDateForTriggerRefIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSkillCompletionDateForTriggerRefIdOperationCompleted);
            }
            this.InvokeAsync("getSkillCompletionDateForTriggerRefId", new object[] {
                        sid,
                        user_id,
                        ref_id}, this.getSkillCompletionDateForTriggerRefIdOperationCompleted, userState);
        }
        
        private void OngetSkillCompletionDateForTriggerRefIdOperationCompleted(object arg) {
            if ((this.getSkillCompletionDateForTriggerRefIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSkillCompletionDateForTriggerRefIdCompleted(this, new getSkillCompletionDateForTriggerRefIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#checkSkillUserCertificateForTriggerRefId", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("have_certificates")]
        public string checkSkillUserCertificateForTriggerRefId(string sid, string user_id, string ref_id) {
            object[] results = this.Invoke("checkSkillUserCertificateForTriggerRefId", new object[] {
                        sid,
                        user_id,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkSkillUserCertificateForTriggerRefIdAsync(string sid, string user_id, string ref_id) {
            this.checkSkillUserCertificateForTriggerRefIdAsync(sid, user_id, ref_id, null);
        }
        
        /// <remarks/>
        public void checkSkillUserCertificateForTriggerRefIdAsync(string sid, string user_id, string ref_id, object userState) {
            if ((this.checkSkillUserCertificateForTriggerRefIdOperationCompleted == null)) {
                this.checkSkillUserCertificateForTriggerRefIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSkillUserCertificateForTriggerRefIdOperationCompleted);
            }
            this.InvokeAsync("checkSkillUserCertificateForTriggerRefId", new object[] {
                        sid,
                        user_id,
                        ref_id}, this.checkSkillUserCertificateForTriggerRefIdOperationCompleted, userState);
        }
        
        private void OncheckSkillUserCertificateForTriggerRefIdOperationCompleted(object arg) {
            if ((this.checkSkillUserCertificateForTriggerRefIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSkillUserCertificateForTriggerRefIdCompleted(this, new checkSkillUserCertificateForTriggerRefIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getSkillTriggerOfAllCertificates", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("certificate_triggers")]
        public string getSkillTriggerOfAllCertificates(string sid, string user_id) {
            object[] results = this.Invoke("getSkillTriggerOfAllCertificates", new object[] {
                        sid,
                        user_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSkillTriggerOfAllCertificatesAsync(string sid, string user_id) {
            this.getSkillTriggerOfAllCertificatesAsync(sid, user_id, null);
        }
        
        /// <remarks/>
        public void getSkillTriggerOfAllCertificatesAsync(string sid, string user_id, object userState) {
            if ((this.getSkillTriggerOfAllCertificatesOperationCompleted == null)) {
                this.getSkillTriggerOfAllCertificatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSkillTriggerOfAllCertificatesOperationCompleted);
            }
            this.InvokeAsync("getSkillTriggerOfAllCertificates", new object[] {
                        sid,
                        user_id}, this.getSkillTriggerOfAllCertificatesOperationCompleted, userState);
        }
        
        private void OngetSkillTriggerOfAllCertificatesOperationCompleted(object arg) {
            if ((this.getSkillTriggerOfAllCertificatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSkillTriggerOfAllCertificatesCompleted(this, new getSkillTriggerOfAllCertificatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getUserIdBySid", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("usr_id")]
        public int getUserIdBySid(string sid) {
            object[] results = this.Invoke("getUserIdBySid", new object[] {
                        sid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getUserIdBySidAsync(string sid) {
            this.getUserIdBySidAsync(sid, null);
        }
        
        /// <remarks/>
        public void getUserIdBySidAsync(string sid, object userState) {
            if ((this.getUserIdBySidOperationCompleted == null)) {
                this.getUserIdBySidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserIdBySidOperationCompleted);
            }
            this.InvokeAsync("getUserIdBySid", new object[] {
                        sid}, this.getUserIdBySidOperationCompleted, userState);
        }
        
        private void OngetUserIdBySidOperationCompleted(object arg) {
            if ((this.getUserIdBySidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserIdBySidCompleted(this, new getUserIdBySidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#deleteExpiredDualOptInUserObjects", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public bool deleteExpiredDualOptInUserObjects(string sid, int usr_id) {
            object[] results = this.Invoke("deleteExpiredDualOptInUserObjects", new object[] {
                        sid,
                        usr_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteExpiredDualOptInUserObjectsAsync(string sid, int usr_id) {
            this.deleteExpiredDualOptInUserObjectsAsync(sid, usr_id, null);
        }
        
        /// <remarks/>
        public void deleteExpiredDualOptInUserObjectsAsync(string sid, int usr_id, object userState) {
            if ((this.deleteExpiredDualOptInUserObjectsOperationCompleted == null)) {
                this.deleteExpiredDualOptInUserObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteExpiredDualOptInUserObjectsOperationCompleted);
            }
            this.InvokeAsync("deleteExpiredDualOptInUserObjects", new object[] {
                        sid,
                        usr_id}, this.deleteExpiredDualOptInUserObjectsOperationCompleted, userState);
        }
        
        private void OndeleteExpiredDualOptInUserObjectsOperationCompleted(object arg) {
            if ((this.deleteExpiredDualOptInUserObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteExpiredDualOptInUserObjectsCompleted(this, new deleteExpiredDualOptInUserObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#readWebLink", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("weblinkxml")]
        public string readWebLink(string sid, int ref_id) {
            object[] results = this.Invoke("readWebLink", new object[] {
                        sid,
                        ref_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void readWebLinkAsync(string sid, int ref_id) {
            this.readWebLinkAsync(sid, ref_id, null);
        }
        
        /// <remarks/>
        public void readWebLinkAsync(string sid, int ref_id, object userState) {
            if ((this.readWebLinkOperationCompleted == null)) {
                this.readWebLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadWebLinkOperationCompleted);
            }
            this.InvokeAsync("readWebLink", new object[] {
                        sid,
                        ref_id}, this.readWebLinkOperationCompleted, userState);
        }
        
        private void OnreadWebLinkOperationCompleted(object arg) {
            if ((this.readWebLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readWebLinkCompleted(this, new readWebLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#createWebLink", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("refid")]
        public int createWebLink(string sid, int target_id, string xml) {
            object[] results = this.Invoke("createWebLink", new object[] {
                        sid,
                        target_id,
                        xml});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void createWebLinkAsync(string sid, int target_id, string xml) {
            this.createWebLinkAsync(sid, target_id, xml, null);
        }
        
        /// <remarks/>
        public void createWebLinkAsync(string sid, int target_id, string xml, object userState) {
            if ((this.createWebLinkOperationCompleted == null)) {
                this.createWebLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWebLinkOperationCompleted);
            }
            this.InvokeAsync("createWebLink", new object[] {
                        sid,
                        target_id,
                        xml}, this.createWebLinkOperationCompleted, userState);
        }
        
        private void OncreateWebLinkOperationCompleted(object arg) {
            if ((this.createWebLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWebLinkCompleted(this, new createWebLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#updateWebLink", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("success")]
        public bool updateWebLink(string sid, int ref_id, string xml) {
            object[] results = this.Invoke("updateWebLink", new object[] {
                        sid,
                        ref_id,
                        xml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateWebLinkAsync(string sid, int ref_id, string xml) {
            this.updateWebLinkAsync(sid, ref_id, xml, null);
        }
        
        /// <remarks/>
        public void updateWebLinkAsync(string sid, int ref_id, string xml, object userState) {
            if ((this.updateWebLinkOperationCompleted == null)) {
                this.updateWebLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWebLinkOperationCompleted);
            }
            this.InvokeAsync("updateWebLink", new object[] {
                        sid,
                        ref_id,
                        xml}, this.updateWebLinkOperationCompleted, userState);
        }
        
        private void OnupdateWebLinkOperationCompleted(object arg) {
            if ((this.updateWebLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWebLinkCompleted(this, new updateWebLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getLearningProgressChanges", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("lp_data")]
        public string getLearningProgressChanges(string sid, string timestamp, bool include_ref_ids, string[] type_filter) {
            object[] results = this.Invoke("getLearningProgressChanges", new object[] {
                        sid,
                        timestamp,
                        include_ref_ids,
                        type_filter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLearningProgressChangesAsync(string sid, string timestamp, bool include_ref_ids, string[] type_filter) {
            this.getLearningProgressChangesAsync(sid, timestamp, include_ref_ids, type_filter, null);
        }
        
        /// <remarks/>
        public void getLearningProgressChangesAsync(string sid, string timestamp, bool include_ref_ids, string[] type_filter, object userState) {
            if ((this.getLearningProgressChangesOperationCompleted == null)) {
                this.getLearningProgressChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLearningProgressChangesOperationCompleted);
            }
            this.InvokeAsync("getLearningProgressChanges", new object[] {
                        sid,
                        timestamp,
                        include_ref_ids,
                        type_filter}, this.getLearningProgressChangesOperationCompleted, userState);
        }
        
        private void OngetLearningProgressChangesOperationCompleted(object arg) {
            if ((this.getLearningProgressChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLearningProgressChangesCompleted(this, new getLearningProgressChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#deleteProgress", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public bool deleteProgress(string sid, int[] ref_ids, int[] usr_ids, string[] type_filter, int[] progress_filter) {
            object[] results = this.Invoke("deleteProgress", new object[] {
                        sid,
                        ref_ids,
                        usr_ids,
                        type_filter,
                        progress_filter});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProgressAsync(string sid, int[] ref_ids, int[] usr_ids, string[] type_filter, int[] progress_filter) {
            this.deleteProgressAsync(sid, ref_ids, usr_ids, type_filter, progress_filter, null);
        }
        
        /// <remarks/>
        public void deleteProgressAsync(string sid, int[] ref_ids, int[] usr_ids, string[] type_filter, int[] progress_filter, object userState) {
            if ((this.deleteProgressOperationCompleted == null)) {
                this.deleteProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProgressOperationCompleted);
            }
            this.InvokeAsync("deleteProgress", new object[] {
                        sid,
                        ref_ids,
                        usr_ids,
                        type_filter,
                        progress_filter}, this.deleteProgressOperationCompleted, userState);
        }
        
        private void OndeleteProgressOperationCompleted(object arg) {
            if ((this.deleteProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProgressCompleted(this, new deleteProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#getProgressInfo", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("user_results")]
        public string getProgressInfo(string sid, int ref_id, int[] progress_filter) {
            object[] results = this.Invoke("getProgressInfo", new object[] {
                        sid,
                        ref_id,
                        progress_filter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getProgressInfoAsync(string sid, int ref_id, int[] progress_filter) {
            this.getProgressInfoAsync(sid, ref_id, progress_filter, null);
        }
        
        /// <remarks/>
        public void getProgressInfoAsync(string sid, int ref_id, int[] progress_filter, object userState) {
            if ((this.getProgressInfoOperationCompleted == null)) {
                this.getProgressInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgressInfoOperationCompleted);
            }
            this.InvokeAsync("getProgressInfo", new object[] {
                        sid,
                        ref_id,
                        progress_filter}, this.getProgressInfoOperationCompleted, userState);
        }
        
        private void OngetProgressInfoOperationCompleted(object arg) {
            if ((this.getProgressInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgressInfoCompleted(this, new getProgressInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#exportDataCollectionTableContent", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("export_path")]
        public string exportDataCollectionContent(string sid, int ref_id, int table_id, string format, string filepath) {
            object[] results = this.Invoke("exportDataCollectionContent", new object[] {
                        sid,
                        ref_id,
                        table_id,
                        format,
                        filepath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportDataCollectionContentAsync(string sid, int ref_id, int table_id, string format, string filepath) {
            this.exportDataCollectionContentAsync(sid, ref_id, table_id, format, filepath, null);
        }
        
        /// <remarks/>
        public void exportDataCollectionContentAsync(string sid, int ref_id, int table_id, string format, string filepath, object userState) {
            if ((this.exportDataCollectionContentOperationCompleted == null)) {
                this.exportDataCollectionContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportDataCollectionContentOperationCompleted);
            }
            this.InvokeAsync("exportDataCollectionContent", new object[] {
                        sid,
                        ref_id,
                        table_id,
                        format,
                        filepath}, this.exportDataCollectionContentOperationCompleted, userState);
        }
        
        private void OnexportDataCollectionContentOperationCompleted(object arg) {
            if ((this.exportDataCollectionContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportDataCollectionContentCompleted(this, new exportDataCollectionContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ilUserAdministration#processBackgroundTask", RequestNamespace="urn:ilUserAdministration", ResponseNamespace="urn:ilUserAdministration")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public bool processBackgroundTask(string sid, int task_id) {
            object[] results = this.Invoke("processBackgroundTask", new object[] {
                        sid,
                        task_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void processBackgroundTaskAsync(string sid, int task_id) {
            this.processBackgroundTaskAsync(sid, task_id, null);
        }
        
        /// <remarks/>
        public void processBackgroundTaskAsync(string sid, int task_id, object userState) {
            if ((this.processBackgroundTaskOperationCompleted == null)) {
                this.processBackgroundTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessBackgroundTaskOperationCompleted);
            }
            this.InvokeAsync("processBackgroundTask", new object[] {
                        sid,
                        task_id}, this.processBackgroundTaskOperationCompleted, userState);
        }
        
        private void OnprocessBackgroundTaskOperationCompleted(object arg) {
            if ((this.processBackgroundTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processBackgroundTaskCompleted(this, new processBackgroundTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ilUserAdministration")]
    public partial class ilUserData {
        
        private int usr_idField;
        
        private string loginField;
        
        private string passwdField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string titleField;
        
        private string genderField;
        
        private string emailField;
        
        private string second_emailField;
        
        private string institutionField;
        
        private string streetField;
        
        private string cityField;
        
        private string zipcodeField;
        
        private string countryField;
        
        private string phone_officeField;
        
        private string last_loginField;
        
        private string last_updateField;
        
        private string create_dateField;
        
        private string hobbyField;
        
        private string departmentField;
        
        private string phone_homeField;
        
        private string phone_mobileField;
        
        private string faxField;
        
        private int time_limit_ownerField;
        
        private int time_limit_unlimitedField;
        
        private int time_limit_fromField;
        
        private int time_limit_untilField;
        
        private int time_limit_messageField;
        
        private string referral_commentField;
        
        private string matriculationField;
        
        private int activeField;
        
        private bool accepted_agreementField;
        
        private string approve_dateField;
        
        private string user_skinField;
        
        private string user_styleField;
        
        private string user_languageField;
        
        private string import_idField;
        
        /// <remarks/>
        public int usr_id {
            get {
                return this.usr_idField;
            }
            set {
                this.usr_idField = value;
            }
        }
        
        /// <remarks/>
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string passwd {
            get {
                return this.passwdField;
            }
            set {
                this.passwdField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string second_email {
            get {
                return this.second_emailField;
            }
            set {
                this.second_emailField = value;
            }
        }
        
        /// <remarks/>
        public string institution {
            get {
                return this.institutionField;
            }
            set {
                this.institutionField = value;
            }
        }
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string phone_office {
            get {
                return this.phone_officeField;
            }
            set {
                this.phone_officeField = value;
            }
        }
        
        /// <remarks/>
        public string last_login {
            get {
                return this.last_loginField;
            }
            set {
                this.last_loginField = value;
            }
        }
        
        /// <remarks/>
        public string last_update {
            get {
                return this.last_updateField;
            }
            set {
                this.last_updateField = value;
            }
        }
        
        /// <remarks/>
        public string create_date {
            get {
                return this.create_dateField;
            }
            set {
                this.create_dateField = value;
            }
        }
        
        /// <remarks/>
        public string hobby {
            get {
                return this.hobbyField;
            }
            set {
                this.hobbyField = value;
            }
        }
        
        /// <remarks/>
        public string department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string phone_home {
            get {
                return this.phone_homeField;
            }
            set {
                this.phone_homeField = value;
            }
        }
        
        /// <remarks/>
        public string phone_mobile {
            get {
                return this.phone_mobileField;
            }
            set {
                this.phone_mobileField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public int time_limit_owner {
            get {
                return this.time_limit_ownerField;
            }
            set {
                this.time_limit_ownerField = value;
            }
        }
        
        /// <remarks/>
        public int time_limit_unlimited {
            get {
                return this.time_limit_unlimitedField;
            }
            set {
                this.time_limit_unlimitedField = value;
            }
        }
        
        /// <remarks/>
        public int time_limit_from {
            get {
                return this.time_limit_fromField;
            }
            set {
                this.time_limit_fromField = value;
            }
        }
        
        /// <remarks/>
        public int time_limit_until {
            get {
                return this.time_limit_untilField;
            }
            set {
                this.time_limit_untilField = value;
            }
        }
        
        /// <remarks/>
        public int time_limit_message {
            get {
                return this.time_limit_messageField;
            }
            set {
                this.time_limit_messageField = value;
            }
        }
        
        /// <remarks/>
        public string referral_comment {
            get {
                return this.referral_commentField;
            }
            set {
                this.referral_commentField = value;
            }
        }
        
        /// <remarks/>
        public string matriculation {
            get {
                return this.matriculationField;
            }
            set {
                this.matriculationField = value;
            }
        }
        
        /// <remarks/>
        public int active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool accepted_agreement {
            get {
                return this.accepted_agreementField;
            }
            set {
                this.accepted_agreementField = value;
            }
        }
        
        /// <remarks/>
        public string approve_date {
            get {
                return this.approve_dateField;
            }
            set {
                this.approve_dateField = value;
            }
        }
        
        /// <remarks/>
        public string user_skin {
            get {
                return this.user_skinField;
            }
            set {
                this.user_skinField = value;
            }
        }
        
        /// <remarks/>
        public string user_style {
            get {
                return this.user_styleField;
            }
            set {
                this.user_styleField = value;
            }
        }
        
        /// <remarks/>
        public string user_language {
            get {
                return this.user_languageField;
            }
            set {
                this.user_languageField = value;
            }
        }
        
        /// <remarks/>
        public string import_id {
            get {
                return this.import_idField;
            }
            set {
                this.import_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ilUserAdministration")]
    public partial class ilOperation {
        
        private int ops_idField;
        
        private string operationField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ops_id {
            get {
                return this.ops_idField;
            }
            set {
                this.ops_idField = value;
            }
        }
        
        /// <remarks/>
        public string operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void loginCASCompletedEventHandler(object sender, loginCASCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCASCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCASCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void loginLDAPCompletedEventHandler(object sender, loginLDAPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginLDAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginLDAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void loginStudipUserCompletedEventHandler(object sender, loginStudipUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginStudipUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginStudipUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string sid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void lookupUserCompletedEventHandler(object sender, lookupUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserCompletedEventHandler(object sender, getUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ilUserData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ilUserData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteUserCompletedEventHandler(object sender, deleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addCourseCompletedEventHandler(object sender, addCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteCourseCompletedEventHandler(object sender, deleteCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void startBackgroundTaskWorkerCompletedEventHandler(object sender, startBackgroundTaskWorkerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startBackgroundTaskWorkerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startBackgroundTaskWorkerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void assignCourseMemberCompletedEventHandler(object sender, assignCourseMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignCourseMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignCourseMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void excludeCourseMemberCompletedEventHandler(object sender, excludeCourseMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class excludeCourseMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal excludeCourseMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isAssignedToCourseCompletedEventHandler(object sender, isAssignedToCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAssignedToCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAssignedToCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCourseXMLCompletedEventHandler(object sender, getCourseXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCourseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCourseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateCourseCompletedEventHandler(object sender, updateCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getObjIdByImportIdCompletedEventHandler(object sender, getObjIdByImportIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getObjIdByImportIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getObjIdByImportIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRefIdsByImportIdCompletedEventHandler(object sender, getRefIdsByImportIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefIdsByImportIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefIdsByImportIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRefIdsByObjIdCompletedEventHandler(object sender, getRefIdsByObjIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefIdsByObjIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefIdsByObjIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getObjectByReferenceCompletedEventHandler(object sender, getObjectByReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getObjectByReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getObjectByReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getObjectsByTitleCompletedEventHandler(object sender, getObjectsByTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getObjectsByTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getObjectsByTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void searchObjectsCompletedEventHandler(object sender, searchObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTreeChildsCompletedEventHandler(object sender, getTreeChildsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTreeChildsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTreeChildsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getXMLTreeCompletedEventHandler(object sender, getXMLTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXMLTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXMLTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addObjectCompletedEventHandler(object sender, addObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateObjectsCompletedEventHandler(object sender, updateObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addReferenceCompletedEventHandler(object sender, addReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteObjectCompletedEventHandler(object sender, deleteObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void removeFromSystemByImportIdCompletedEventHandler(object sender, removeFromSystemByImportIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeFromSystemByImportIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeFromSystemByImportIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addUserRoleEntryCompletedEventHandler(object sender, addUserRoleEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserRoleEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserRoleEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteUserRoleEntryCompletedEventHandler(object sender, deleteUserRoleEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserRoleEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserRoleEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getOperationsCompletedEventHandler(object sender, getOperationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOperationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOperationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ilOperation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ilOperation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void revokePermissionsCompletedEventHandler(object sender, revokePermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class revokePermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal revokePermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void grantPermissionsCompletedEventHandler(object sender, grantPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class grantPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal grantPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getLocalRolesCompletedEventHandler(object sender, getLocalRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLocalRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLocalRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserRolesCompletedEventHandler(object sender, getUserRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addRoleCompletedEventHandler(object sender, addRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteRoleCompletedEventHandler(object sender, deleteRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addRoleFromTemplateCompletedEventHandler(object sender, addRoleFromTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRoleFromTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRoleFromTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getObjectTreeOperationsCompletedEventHandler(object sender, getObjectTreeOperationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getObjectTreeOperationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getObjectTreeOperationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ilOperation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ilOperation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addGroupCompletedEventHandler(object sender, addGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void groupExistsCompletedEventHandler(object sender, groupExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class groupExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal groupExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGroupCompletedEventHandler(object sender, getGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void assignGroupMemberCompletedEventHandler(object sender, assignGroupMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignGroupMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignGroupMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void excludeGroupMemberCompletedEventHandler(object sender, excludeGroupMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class excludeGroupMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal excludeGroupMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void isAssignedToGroupCompletedEventHandler(object sender, isAssignedToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAssignedToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAssignedToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendMailCompletedEventHandler(object sender, sendMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void distributeMailsCompletedEventHandler(object sender, distributeMailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class distributeMailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal distributeMailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ilCloneCompletedEventHandler(object sender, ilCloneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ilCloneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ilCloneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void handleECSTasksCompletedEventHandler(object sender, handleECSTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class handleECSTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal handleECSTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ilCloneDependenciesCompletedEventHandler(object sender, ilCloneDependenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ilCloneDependenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ilCloneDependenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveQuestionResultCompletedEventHandler(object sender, saveQuestionResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveQuestionResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveQuestionResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveQuestionCompletedEventHandler(object sender, saveQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void saveQuestionSolutionCompletedEventHandler(object sender, saveQuestionSolutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveQuestionSolutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveQuestionSolutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getQuestionSolutionCompletedEventHandler(object sender, getQuestionSolutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuestionSolutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuestionSolutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTestUserDataCompletedEventHandler(object sender, getTestUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPositionOfQuestionCompletedEventHandler(object sender, getPositionOfQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPositionOfQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPositionOfQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPreviousReachedPointsCompletedEventHandler(object sender, getPreviousReachedPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPreviousReachedPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPreviousReachedPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getNrOfQuestionsInPassCompletedEventHandler(object sender, getNrOfQuestionsInPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNrOfQuestionsInPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNrOfQuestionsInPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getStructureObjectsCompletedEventHandler(object sender, getStructureObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStructureObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStructureObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void importUsersCompletedEventHandler(object sender, importUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRolesCompletedEventHandler(object sender, getRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUsersForContainerCompletedEventHandler(object sender, getUsersForContainerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersForContainerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersForContainerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUsersForRoleCompletedEventHandler(object sender, getUsersForRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersForRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersForRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void searchUserCompletedEventHandler(object sender, searchUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void hasNewMailCompletedEventHandler(object sender, hasNewMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hasNewMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hasNewMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getNICCompletedEventHandler(object sender, getNICCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNICCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNICCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getExerciseXMLCompletedEventHandler(object sender, getExerciseXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExerciseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExerciseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addExerciseCompletedEventHandler(object sender, addExerciseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addExerciseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addExerciseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateExerciseCompletedEventHandler(object sender, updateExerciseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateExerciseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateExerciseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getFileXMLCompletedEventHandler(object sender, getFileXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFileXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFileXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addFileCompletedEventHandler(object sender, addFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateFileCompletedEventHandler(object sender, updateFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserXMLCompletedEventHandler(object sender, getUserXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getObjIdsByRefIdsCompletedEventHandler(object sender, getObjIdsByRefIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getObjIdsByRefIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getObjIdsByRefIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateGroupCompletedEventHandler(object sender, updateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getIMSManifestXMLCompletedEventHandler(object sender, getIMSManifestXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIMSManifestXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIMSManifestXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void hasSCORMCertificateCompletedEventHandler(object sender, hasSCORMCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hasSCORMCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hasSCORMCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSCORMCompletionStatusCompletedEventHandler(object sender, getSCORMCompletionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSCORMCompletionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSCORMCompletionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void copyObjectCompletedEventHandler(object sender, copyObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void moveObjectCompletedEventHandler(object sender, moveObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTestResultsCompletedEventHandler(object sender, getTestResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void removeTestResultsCompletedEventHandler(object sender, removeTestResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeTestResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeTestResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCoursesForUserCompletedEventHandler(object sender, getCoursesForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCoursesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCoursesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGroupsForUserCompletedEventHandler(object sender, getGroupsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPathForRefIdCompletedEventHandler(object sender, getPathForRefIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPathForRefIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPathForRefIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void searchRolesCompletedEventHandler(object sender, searchRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getInstallationInfoXMLCompletedEventHandler(object sender, getInstallationInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInstallationInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInstallationInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getClientInfoXMLCompletedEventHandler(object sender, getClientInfoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSkillCompletionDateForTriggerRefIdCompletedEventHandler(object sender, getSkillCompletionDateForTriggerRefIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSkillCompletionDateForTriggerRefIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSkillCompletionDateForTriggerRefIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void checkSkillUserCertificateForTriggerRefIdCompletedEventHandler(object sender, checkSkillUserCertificateForTriggerRefIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSkillUserCertificateForTriggerRefIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSkillUserCertificateForTriggerRefIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSkillTriggerOfAllCertificatesCompletedEventHandler(object sender, getSkillTriggerOfAllCertificatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSkillTriggerOfAllCertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSkillTriggerOfAllCertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUserIdBySidCompletedEventHandler(object sender, getUserIdBySidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserIdBySidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserIdBySidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteExpiredDualOptInUserObjectsCompletedEventHandler(object sender, deleteExpiredDualOptInUserObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteExpiredDualOptInUserObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteExpiredDualOptInUserObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void readWebLinkCompletedEventHandler(object sender, readWebLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readWebLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readWebLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createWebLinkCompletedEventHandler(object sender, createWebLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWebLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWebLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateWebLinkCompletedEventHandler(object sender, updateWebLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateWebLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateWebLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getLearningProgressChangesCompletedEventHandler(object sender, getLearningProgressChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLearningProgressChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLearningProgressChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteProgressCompletedEventHandler(object sender, deleteProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getProgressInfoCompletedEventHandler(object sender, getProgressInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgressInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgressInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void exportDataCollectionContentCompletedEventHandler(object sender, exportDataCollectionContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportDataCollectionContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportDataCollectionContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void processBackgroundTaskCompletedEventHandler(object sender, processBackgroundTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processBackgroundTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processBackgroundTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591